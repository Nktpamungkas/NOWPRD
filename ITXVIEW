-- DB2ADMIN.ITXVIEW_INVOICE_SURCHARGE source

CREATE VIEW ITXVIEW_INVOICE_SURCHARGE AS
SELECT
    NO_INVOICE,
    COMPANYCODE,
    DIVISIONCODE,
    BIAYA_TAMBAHAN,
    KET_BIAYA
FROM
    (
        SELECT
            P.CODE AS NO_INVOICE,
            P.COMPANYCODE,
            P.DIVISIONCODE,
            SUM(I.VALUE) AS BIAYA_TAMBAHAN,
            I.ITAXCODE AS KET_BIAYA
        FROM
            PLANTINVOICE P
        LEFT JOIN PLANTINVOICELINE P2 ON
            P2.PLANTINVOICECODE = P.CODE
            AND P2.PLANTINVOICECOMPANYCODE = P.COMPANYCODE
            AND P2.PLANTINVOICEDIVISIONCODE = P.DIVISIONCODE
        LEFT JOIN INDTAXDETAIL I ON
            P2.ABSUNIQUEID = I.ABSUNIQUEID
        WHERE
            I.VALUE <> 0
            AND (
                I.ITAXCODE = 'OH1'
                    OR I.ITAXCODE = 'OH3'
                    OR I.ITAXCODE = 'SUR'
                    OR I.ITAXCODE = 'SUS'
                    OR I.ITAXCODE = 'FR1'
                    OR I.ITAXCODE = 'CFR'
                    OR I.ITAXCODE = 'MCQ'
                    OR I.ITAXCODE = 'MC1'
                    OR I.ITAXCODE = 'CRF'
            )
        GROUP BY
            P.CODE,
            P.COMPANYCODE,
            P.DIVISIONCODE,
            I.ITAXCODE
        ORDER BY
            I.ITAXCODE DESC
    );


-- DB2ADMIN.ITXVIEW_INV_FAKTUR source

CREATE VIEW ITXVIEW_INV_FAKTUR AS
SELECT
    PLANTINVOICE.CODE AS NO_INVOICE,
    PLANTINVOICE.INVOICEDATE AS TGL_FAKTUR,
    PLANTINVOICE.EXCHANGERATEOFCONTRACT,
    PLANTINVOICE.TAXTEMPLATECODE,
    PLANTINVOICE.ORDERCURRENCYCODE,
    SALESDOCUMENT.PROVISIONALCODE,
    SALESDOCUMENT.PAYMENTCUSTOMERCODE,
    SALESDOCUMENT.PAYMENTCUSTOMERUNIQUEID,
    SALESDOCUMENTLINE.PRICE,
    SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE,
    SALESDOCUMENTLINE.EXTERNALREFERENCE,
    SALESDOCUMENTLINE.EXTERNALITEM,
    SALESDOCUMENTLINE.ITEMDESCRIPTION,
    SALESDOCUMENTLINE.PREVIOUSCODE,
    SALESDOCUMENTLINE.SUBCODE02,
    SALESDOCUMENTLINE.SUBCODE03,
    SALESDOCUMENTLINE.SUBCODE05,
    PAYMENTMETHOD.CODE,
    PAYMENTMETHOD.LONGDESCRIPTION,
    PAYMENTMETHODIE.NOOFDAYS,
    ALLOCATION.ALLOCATIONDATE,
    ALLOCATION.ORDERLINE,
    ALLOCATION.USERPRIMARYQUANTITY,
    ALLOCATION.USERSECONDARYQUANTITY,
    SALESORDER.CODE AS NO_SALESORDER,
    SALESORDER.DESCRIPTION,
    BUSINESSPARTNER.NUMBERID,
    BUSINESSPARTNER.TAXREGISTRATIONNUMBER,
    ORDERPARTNERBRAND.LONGDESCRIPTION AS DESC_BRAND
FROM
    PLANTINVOICE PLANTINVOICE
LEFT JOIN PLANTINVOICELINE PLANTINVOICELINE ON
    PLANTINVOICE.CODE = PLANTINVOICELINE.PLANTINVOICECODE
LEFT JOIN SALESORDER SALESORDER ON
    PLANTINVOICE.CONTRACTNOCODE = SALESORDER.CODE
LEFT JOIN ORDERPARTNERIE ORDERPARTNERIE ON
    SALESORDER.FNCORDPRNCUSTOMERSUPPLIERCODE = ORDERPARTNERIE.CUSTOMERSUPPLIERCODE
LEFT JOIN GLMASTER GLMASTER ON
    ORDERPARTNERIE.GLCODE = GLMASTER.CODE
LEFT JOIN ORDERPARTNERBRAND ORDERPARTNERBRAND ON
    SALESORDER.ORDERPARTNERBRANDCODE = ORDERPARTNERBRAND.CODE
    AND ORDERPARTNERIE.CUSTOMERSUPPLIERCODE = ORDERPARTNERBRAND.ORDPRNCUSTOMERSUPPLIERCODE
LEFT JOIN SALESDOCUMENT SALESDOCUMENT ON
    PLANTINVOICE.CODE = SALESDOCUMENT.PROVISIONALCODE
LEFT JOIN ORDERPARTNER ORDERPARTNER ON
    SALESDOCUMENT.FNCORDPRNCUSTOMERSUPPLIERCODE = ORDERPARTNER.CUSTOMERSUPPLIERCODE
LEFT JOIN BUSINESSPARTNER BUSINESSPARTNER ON
    ORDERPARTNER.ORDERBUSINESSPARTNERNUMBERID = BUSINESSPARTNER.NUMBERID
LEFT JOIN SALESDOCUMENTLINE SALESDOCUMENTLINE ON
    SALESDOCUMENT.PROVISIONALCODE = SALESDOCUMENTLINE.SALESDOCUMENTPROVISIONALCODE
LEFT JOIN (
        SELECT
            *
        FROM
            ALLOCATION ALLOCATION
        WHERE
            ALLOCATION.DETAILTYPE = '1'
            AND ALLOCATION.ORIGINTRNTRANSACTIONNUMBER IS NULL
            AND ALLOCATION.DESTINATIONTYPE = '7'
    )ALLOCATION ON
    SALESDOCUMENTLINE.SUBCODE01 = ALLOCATION.DECOSUBCODE01
    AND SALESDOCUMENTLINE.SUBCODE02 = ALLOCATION.DECOSUBCODE02
    AND SALESDOCUMENTLINE.SUBCODE03 = ALLOCATION.DECOSUBCODE03
    AND SALESDOCUMENTLINE.SUBCODE04 = ALLOCATION.DECOSUBCODE04
    AND SALESDOCUMENTLINE.SUBCODE05 = ALLOCATION.DECOSUBCODE05
    AND SALESDOCUMENTLINE.SUBCODE06 = ALLOCATION.DECOSUBCODE06
    AND SALESDOCUMENTLINE.SUBCODE07 = ALLOCATION.DECOSUBCODE07
    AND SALESDOCUMENTLINE.PREVIOUSCODE = ALLOCATION.ORDERCODE
LEFT JOIN PAYMENTMETHOD PAYMENTMETHOD ON
    PLANTINVOICE.TERMSOFPAYMENTCODE = PAYMENTMETHOD.CODE
LEFT JOIN PAYMENTMETHODIE PAYMENTMETHODIE ON
    PAYMENTMETHOD.CODE = PAYMENTMETHODIE.CODE;


-- DB2ADMIN.ITXVIEW_INV_RESEPCOLOR source

-- DB2ADMIN.ITXVIEW_INV_RESEPCOLOR source

CREATE VIEW ITXVIEW_INV_RESEPCOLOR AS
SELECT
    DISTINCT 
    SUBSTR(RECIPE.SUBCODE01, 1, LOCATE('/', RECIPE.SUBCODE01)-1) AS ARTIKEL,
    SUBSTR(RECIPE.SUBCODE01, LOCATE('/', RECIPE.SUBCODE01)+ 1, 7) AS NO_WARNA,
    SUBSTR(SUBSTR(RECIPE.SUBCODE01, LOCATE('/', RECIPE.SUBCODE01)+ 1), LOCATE('/', SUBSTR(RECIPE.SUBCODE01, LOCATE('/', RECIPE.SUBCODE01)+ 1))+ 1) AS CELUP,
    RECIPE.LONGDESCRIPTION,
    RECIPE.SUFFIXCODE,
    -- RECIPE.SHORTDESCRIPTION,
    A.CUSTOMER
    -- RECIPE.NUMBERID
FROM
    RECIPE RECIPE
LEFT JOIN (
        SELECT
            ADSTORAGE.UNIQUEID,
            ADSTORAGE.VALUESTRING AS CUSTOMER
        FROM
            ADSTORAGE ADSTORAGE
        WHERE
            ADSTORAGE.NAMENAME = 'OriginalCustomer'
            AND ADSTORAGE.VALUESTRING <> '1'
    ) A ON
    RECIPE.ABSUNIQUEID = A.UNIQUEID
WHERE
    RECIPE.ITEMTYPECODE = 'RFD'
    AND RECIPE.SUFFIXCODE = '001'
    --AND SUBSTR(SUBSTR(RECIPE.SUBCODE01, LOCATE('/', RECIPE.SUBCODE01)+ 1), LOCATE('/', SUBSTR(RECIPE.SUBCODE01, LOCATE('/', RECIPE.SUBCODE01)+ 1))+ 1) <> 'D'
    AND LOCATE('/', RECIPE.SUBCODE01) > 0;


-- DB2ADMIN.ITXVIEW_JENISBENANG source

CREATE VIEW ITXVIEW_JENISBENANG AS
SELECT
    b.NUMBERID,
    b.SUBCODE01,
    b.SUBCODE02,
    b.SUBCODE03,
    b.SUBCODE04,
    --    LISTAGG ('(' || TRIM(f.SUMMARIZEDDESCRIPTION) || ')' ) AS DESCRIP
    TRIM(b.LONGDESCRIPTION) AS DESCRIP
FROM
    BILLOFMATERIAL b
    --LEFT JOIN BOMCOMPONENT b2 ON b2.BILLOFMATERIALNUMBERID = b.NUMBERID
    --LEFT JOIN FULLITEMKEYDECODER f ON f.SUBCODE01 = b2.SUBCODE01
    --    AND f.SUBCODE02 = b2.SUBCODE02
    --    AND f.SUBCODE03 = b2.SUBCODE03
    --    AND f.SUBCODE04 = b2.SUBCODE04
    --    AND f.SUBCODE05 = b2.SUBCODE05
    --    AND f.SUBCODE06 = b2.SUBCODE06
    --    AND f.SUBCODE07 = b2.SUBCODE07
    --    AND f.SUBCODE08 = b2.SUBCODE08
    --GROUP BY
    --    b.NUMBERID,
    --    b.SUBCODE01,
    --    b.SUBCODE02,
    --    b.SUBCODE03,
    --    b.SUBCODE04;


-- DB2ADMIN.ITXVIEW_KAINJADI_GKJ source

CREATE VIEW ITXVIEW_KAINJADI_GKJ AS
SELECT
    idorder,
    iddoc,
    no_sj,
    code_allocation,
    elementcode,
    tanggal,
    lotcode,
    jenis_order,
    jenis_kain,
    unit,
    no_order,
    buyer,
    ordercode,
    langganan,
    no_po,
    ket_quality
FROM
    (
        SELECT
            SALESORDER.DELIVERYPOINTUNIQUEID AS idorder,
            SALESDOCUMENT.DELIVERYPOINTUNIQUEID AS iddoc,
            SALESDOCUMENT.PROVISIONALCODE AS no_sj,
            ALLOCATION.CODE AS code_allocation,
            ITXVIEW_SURATJALAN_EXIM_FOC.ELEMENTCODE AS elementcode,
            CASE
                WHEN trim(SALESDOCUMENT.PROVISIONALDOCUMENTDATE) <= DATE('2022-08-15') THEN CASE
                    WHEN trim(SALESDOCUMENT.GOODSISSUEDATE) IS NOT NULL THEN trim(SALESDOCUMENT.GOODSISSUEDATE)
                    ELSE trim(SALESDOCUMENT.PROVISIONALDOCUMENTDATE)
                END
                ELSE trim(SALESDOCUMENT.GOODSISSUEDATE)
            END AS tanggal,
            ITXVIEW_SURATJALAN_EXIM_FOC.LOTCODE AS lotcode,
            SALESDOCUMENTLINE.SUBCODE02 AS article_group,
            SALESDOCUMENTLINE.SUBCODE01 AS fabric_type,
            SALESORDER.COUNTERCODE AS jenis_order,
            CASE
                WHEN SALESORDER.COUNTERCODE = 'EXPORT'
                AND BUSINESSPARTNER.NUMBERID <> 989 THEN 'Kain Rajut Celup'
                WHEN SALESORDER.COUNTERCODE = 'SAMPLE'
                AND BUSINESSPARTNER.NUMBERID <> 888 THEN 'Kain Rajut Celup'
                WHEN SALESORDER.COUNTERCODE = 'REPLCEXP'
                AND BUSINESSPARTNER.NUMBERID <> 888 THEN 'Kain Rajut Celup'
                ELSE trim(SALESDOCUMENTLINE.ITEMDESCRIPTION)
            END AS jenis_kain,
            SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE AS UNIT,
            SALESORDER.PROJECTCODE AS no_order,
            ORDERPARTNERBRAND.LONGDESCRIPTION AS buyer,
            ALLOCATION.ORDERCODE AS ordercode,
            ADDRESS.ADDRESSEE AS langganan,
            CASE
                WHEN SALESDOCUMENTLINE.EXTERNALREFERENCE IS NULL THEN SALESORDER.EXTERNALREFERENCE
                ELSE SALESDOCUMENTLINE.EXTERNALREFERENCE
            END AS no_po,
            ITXVIEW_SURATJALAN_EXIM_FOC.QUALITYREASONCODE AS ket_quality
        FROM
            SALESDOCUMENT SALESDOCUMENT
        LEFT JOIN SALESORDER SALESORDER ON
            SALESDOCUMENT.DELIVERYPOINTUNIQUEID = SALESORDER.DELIVERYPOINTUNIQUEID
        LEFT JOIN ADDRESS ADDRESS ON
            SALESORDER.DELIVERYPOINTUNIQUEID = ADDRESS.UNIQUEID
            AND SALESORDER.DELIVERYPOINTCODE = ADDRESS.CODE
        LEFT JOIN ORDERPARTNER ORDERPARTNER ON
            SALESDOCUMENT.FNCORDPRNCUSTOMERSUPPLIERCODE = ORDERPARTNER.CUSTOMERSUPPLIERCODE
        LEFT JOIN PAYMENTMETHOD PAYMENTMETHOD ON
            ORDERPARTNER.PAYMENTMETHODCODE = PAYMENTMETHOD.CODE
        LEFT JOIN SALESDOCUMENTLINE SALESDOCUMENTLINE ON
            SALESORDER.CODE = SALESDOCUMENTLINE.PROJECTCODE
            AND SALESDOCUMENT.PROVISIONALCODE = SALESDOCUMENTLINE.SALESDOCUMENTPROVISIONALCODE
        LEFT JOIN DESIGN DESIGN ON
            SALESDOCUMENTLINE.SUBCODE07 = DESIGN.SUBCODE01
        LEFT JOIN DESIGNCOMPONENT DESIGNCOMPONENT ON
            SALESDOCUMENTLINE.SUBCODE08 = DESIGNCOMPONENT.VARIANTCODE
            AND DESIGN.NUMBERID = DESIGNCOMPONENT.DESIGNNUMBERID
        LEFT JOIN (
                SELECT
                    ITXVIEWRESEPCOLOR.LONGDESCRIPTION,
                    ITXVIEWRESEPCOLOR.ARTIKEL,
                    ITXVIEWRESEPCOLOR.NO_WARNA
                FROM
                    ITXVIEWRESEPCOLOR ITXVIEWRESEPCOLOR
                GROUP BY
                    ITXVIEWRESEPCOLOR.LONGDESCRIPTION,
                    ITXVIEWRESEPCOLOR.ARTIKEL,
                    ITXVIEWRESEPCOLOR.NO_WARNA
            ) ITXVIEWRESEPCOLOR ON
            ITXVIEWRESEPCOLOR.ARTIKEL = SALESDOCUMENTLINE.SUBCODE03
            AND ITXVIEWRESEPCOLOR.NO_WARNA = SALESDOCUMENTLINE.SUBCODE05
        LEFT JOIN ITXVIEWORDERPARTNERLINKACTIVE opla ON
            SALESDOCUMENT.ORDPRNCUSTOMERSUPPLIERCODE = opla.ORDPRNCUSTOMERSUPPLIERCODE
            AND SALESDOCUMENTLINE.ITEMTYPEAFICODE = opla.ITEMTYPEAFICODE
            AND SALESDOCUMENTLINE.SUBCODE01 = opla.SUBCODE01
            AND SALESDOCUMENTLINE.SUBCODE02 = opla.SUBCODE02
            AND SALESDOCUMENTLINE.SUBCODE03 = opla.SUBCODE03
            AND SALESDOCUMENTLINE.SUBCODE04 = opla.SUBCODE04
            AND SALESDOCUMENTLINE.SUBCODE05 = opla.SUBCODE05
            AND SALESDOCUMENTLINE.SUBCODE06 = opla.SUBCODE06
        LEFT JOIN PRODUCT p ON
            SALESDOCUMENTLINE.ITEMTYPEAFICODE = p.ITEMTYPECODE
            AND SALESDOCUMENTLINE.SUBCODE01 = p.SUBCODE01
            AND SALESDOCUMENTLINE.SUBCODE02 = p.SUBCODE02
            AND SALESDOCUMENTLINE.SUBCODE03 = p.SUBCODE03
            AND SALESDOCUMENTLINE.SUBCODE04 = p.SUBCODE04
            AND SALESDOCUMENTLINE.SUBCODE05 = p.SUBCODE05
            AND SALESDOCUMENTLINE.SUBCODE06 = p.SUBCODE06
            AND SALESDOCUMENTLINE.SUBCODE07 = p.SUBCODE07
        LEFT JOIN USERGENERICGROUP USERGENERICGROUP ON
            SALESDOCUMENTLINE.SUBCODE05 = USERGENERICGROUP.CODE
        LEFT JOIN ORDERPARTNERBRAND ORDERPARTNERBRAND ON
            ORDERPARTNER.CUSTOMERSUPPLIERCODE = ORDERPARTNERBRAND.ORDPRNCUSTOMERSUPPLIERCODE
            AND SALESORDER.ORDERPARTNERBRANDCODE = ORDERPARTNERBRAND.CODE
        LEFT JOIN BUSINESSPARTNER BUSINESSPARTNER ON
            ORDERPARTNER.ORDERBUSINESSPARTNERNUMBERID = BUSINESSPARTNER.NUMBERID
        LEFT JOIN (
                SELECT
                    *
                FROM
                    ALLOCATION ALLOCATION
                WHERE
                    ALLOCATION.DETAILTYPE = '1'
                    AND ALLOCATION.ORIGINTRNTRANSACTIONNUMBER IS NULL
                    AND ALLOCATION.DESTINATIONTYPE = 7
            )ALLOCATION ON
            SALESDOCUMENTLINE.SUBCODE01 = ALLOCATION.DECOSUBCODE01
            AND SALESDOCUMENTLINE.SUBCODE02 = ALLOCATION.DECOSUBCODE02
            AND SALESDOCUMENTLINE.SUBCODE03 = ALLOCATION.DECOSUBCODE03
            AND SALESDOCUMENTLINE.SUBCODE04 = ALLOCATION.DECOSUBCODE04
            AND SALESDOCUMENTLINE.SUBCODE05 = ALLOCATION.DECOSUBCODE05
            AND SALESDOCUMENTLINE.SUBCODE06 = ALLOCATION.DECOSUBCODE06
            AND SALESDOCUMENTLINE.SUBCODE07 = ALLOCATION.DECOSUBCODE07
            AND SALESDOCUMENT.PROVISIONALCODE = ALLOCATION.ORDERCODE
            AND SALESDOCUMENTLINE.ORDERLINE = ALLOCATION.ORDERLINE
        LEFT JOIN ITXVIEW_SURATJALAN_EXIM_FOC ITXVIEW_SURATJALAN_EXIM_FOC ON
            ALLOCATION.CODE = ITXVIEW_SURATJALAN_EXIM_FOC.CODE
        LEFT JOIN ITXVIEWALLOCATION0_SJEXIM ITXVIEWALLOCATION0_SJEXIM ON
            ALLOCATION.CODE = ITXVIEWALLOCATION0_SJEXIM.CODE
        WHERE
            ALLOCATION.ORDERCODE IS NOT NULL
        GROUP BY
            SALESDOCUMENT.PROVISIONALCODE,
            ITXVIEW_SURATJALAN_EXIM_FOC.ELEMENTCODE,
            ITXVIEW_SURATJALAN_EXIM_FOC.LOTCODE,
            ALLOCATION.CODE,
            SALESORDER.COUNTERCODE,
            SALESDOCUMENT.PROVISIONALDOCUMENTDATE,
            SALESDOCUMENT.GOODSISSUEDATE,
            SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE,
            SALESORDER.PROJECTCODE,
            ORDERPARTNERBRAND.LONGDESCRIPTION,
            ALLOCATION.ORDERCODE,
            ITXVIEW_SURATJALAN_EXIM_FOC.QUALITYREASONCODE,
            SALESDOCUMENTLINE.ITEMDESCRIPTION,
            SALESDOCUMENTLINE.EXTERNALREFERENCE,
            SALESORDER.EXTERNALREFERENCE,
            SALESORDER.DELIVERYPOINTUNIQUEID,
            SALESDOCUMENT.DELIVERYPOINTUNIQUEID,
            ADDRESS.ADDRESSEE,
            BUSINESSPARTNER.NUMBERID,
            SALESORDER.COUNTERCODE,
            SALESDOCUMENTLINE.SUBCODE01,
            SALESDOCUMENTLINE.SUBCODE02
    );


-- DB2ADMIN.ITXVIEW_KGBRUTO source

CREATE VIEW ITXVIEW_KGBRUTO AS
SELECT
    DISTINCT 	
    p.ORIGDLVSALORDLINESALORDERCODE AS PROJECTCODE,
    p.CODE,
    CASE
        WHEN p2.ITEMTYPEAFICODE = 'WTR' THEN '0'
        ELSE p2.PRODUCTIONORDERCODE
    END AS PRODUCTIONORDERCODE,
    p.ITEMTYPEAFICODE AS ITEMTYPE_DEMAND,
    p.SUBCODE01,
    p.SUBCODE02,
    p.SUBCODE03,
    p.SUBCODE04,
    p.SUBCODE05,
    p.SUBCODE06,
    p.SUBCODE07,
    p.SUBCODE08,
    p.SUBCODE09,
    p.SUBCODE10,
    p.ORIGDLVSALORDERLINEORDERLINE,
    CASE
        WHEN p2.ITEMTYPEAFICODE = 'WTR' THEN '0'
        ELSE p2.ITEMTYPEAFICODE
    END AS ITEMTYPE_RESERVATION,
    CASE
        WHEN p2.ITEMTYPEAFICODE = 'WTR' THEN '0'
        ELSE p2.USERPRIMARYQUANTITY
    END AS USERPRIMARYQUANTITY,
    CASE
        WHEN p2.ITEMTYPEAFICODE = 'WTR' THEN '0'
        ELSE p2.USERPRIMARYUOMCODE
    END AS USERPRIMARYUOMCODE,
    CASE
        WHEN p2.ITEMTYPEAFICODE = 'WTR' THEN '0'
        ELSE p2.USERSECONDARYQUANTITY
    END AS USERSECONDARYQUANTITY,
    CASE
        WHEN p2.ITEMTYPEAFICODE = 'WTR' THEN '0'
        ELSE p2.USERSECONDARYUOMCODE
    END AS USERSECONDARYUOMCODE,
    CASE
        WHEN s2.EXTERNALREFERENCE IS NULL THEN s.EXTERNALREFERENCE
        ELSE s2.EXTERNALREFERENCE
    END AS EXTERNALREFERENCE,
    s.INTERNALREFERENCE,
    a.VALUESTRING
FROM
    PRODUCTIONDEMAND p
LEFT JOIN SALESORDERLINE s ON
    s.SALESORDERCODE = p.ORIGDLVSALORDLINESALORDERCODE
    AND s.ORDERLINE = p.ORIGDLVSALORDERLINEORDERLINE
LEFT JOIN SALESORDER s2 ON
    s2.CODE = s.SALESORDERCODE
LEFT JOIN ADSTORAGE a ON
    a.UNIQUEID = p.ABSUNIQUEID
    AND a.FIELDNAME = 'OriginalPDCode'
LEFT JOIN PRODUCTIONRESERVATION p2 ON
    p2.ORDERCODE = p.CODE
    AND (
        p2.ITEMTYPEAFICODE = 'KGF'
            OR p2.ITEMTYPEAFICODE = 'FKG'
            OR p2.ITEMTYPEAFICODE = 'KFF'
    )
WHERE
    --    (p2.ITEMTYPEAFICODE = 'KGF' OR p2.ITEMTYPEAFICODE = 'FKG' OR p2.ITEMTYPEAFICODE = 'KFF' OR p2.ITEMTYPEAFICODE = 'WTR')
    --    AND 
    (
        p.ITEMTYPEAFICODE = 'KFF'
            OR p.ITEMTYPEAFICODE = 'FKF'
            OR p.ITEMTYPEAFICODE = 'KGF'
    )
    --    AND a.VALUESTRING IS NULL
    --    AND p.ORIGDLVSALORDLINESALORDERCODE = 'SAM2400094' 
    --    AND p.ORIGDLVSALORDERLINEORDERLINE = 20
    --        AND p.CODE = '00215523';


-- DB2ADMIN.ITXVIEW_KGBRUTO_1 source

CREATE VIEW ITXVIEW_KGBRUTO_1 AS
SELECT
    *
FROM
    (
        SELECT
            p.ORIGDLVSALORDLINESALORDERCODE AS PROJECTCODE,
            a.NAMENAME,
            a.VALUESTRING,
            p.ITEMTYPEAFICODE AS ITEMTYPE_DEMAND,
            p2.ITEMTYPEAFICODE AS ITEMTYPE_RESERVATION,
            p2.USERPRIMARYUOMCODE AS UOMCODE,
            CASE
                WHEN p.ITEMTYPEAFICODE = 'KFF'
                AND p2.ITEMTYPEAFICODE = 'KGF'
		   	THEN SUM(p2.USERPRIMARYQUANTITY)
                ELSE 0
            END AS BRUTO,
            CASE
                WHEN p.ITEMTYPEAFICODE = 'FKF'
                AND p2.ITEMTYPEAFICODE = 'FKG'
		   	THEN SUM(p2.USERPRIMARYQUANTITY)
                ELSE 0
            END AS BRUTO_FK
        FROM
            PRODUCTIONDEMAND p
        LEFT JOIN PRODUCTIONRESERVATION p2 ON
            p2.ORDERCODE = p.CODE
        LEFT JOIN SALESORDERLINE s ON
            s.SALESORDERCODE = p.ORIGDLVSALORDLINESALORDERCODE
            AND s.ORDERLINE = p.ORIGDLVSALORDERLINEORDERLINE
        LEFT JOIN SALESORDER s2 ON
            s2.CODE = s.SALESORDERCODE
        LEFT JOIN ADSTORAGE a ON
            a.UNIQUEID = p.ABSUNIQUEID
            AND a.NAMENAME = 'OriginalPDCode'
        WHERE
            (
                p2.ITEMTYPEAFICODE = 'KGF'
                    OR p2.ITEMTYPEAFICODE = 'FKG'
            )
            AND (
                p.ITEMTYPEAFICODE = 'KFF'
                    OR p.ITEMTYPEAFICODE = 'FKF'
            )
            AND p2.PRODUCTIONORDERCODE IS NOT NULL
        GROUP BY
            p.ORIGDLVSALORDLINESALORDERCODE,
            p.ITEMTYPEAFICODE,
            p2.ITEMTYPEAFICODE,
            p2.USERPRIMARYUOMCODE,
            a.NAMENAME,
            a.VALUESTRING
    )
WHERE
    NAMENAME IS NULL;


-- DB2ADMIN.ITXVIEW_KGBRUTO_PIGMENT source

CREATE VIEW ITXVIEW_KGBRUTO_PIGMENT AS
SELECT
    ABSUNIQUEID,
    PROJECTCODE,
    CASE
        WHEN SUBCODE07 LIKE '%S%' THEN SUM(USERPRIMARYQUANTITY)
        ELSE 0
    END AS PRT_SUBLIM,
    CASE
        WHEN SUBCODE08 LIKE '%PI%' THEN SUM(USERPRIMARYQUANTITY)
        ELSE 0
    END AS PRT_PIGMENT
FROM
    (
        SELECT
            DISTINCT
        s2.ABSUNIQUEID,
            p.ORIGDLVSALORDLINESALORDERCODE AS PROJECTCODE,
            p.SUBCODE07 AS SUBCODE07,
            p.SUBCODE08 AS SUBCODE08,
            p2.USERPRIMARYUOMCODE AS UOM_CODE,
            SUM(p2.USERPRIMARYQUANTITY) AS USERPRIMARYQUANTITY
        FROM
            PRODUCTIONDEMAND p
        LEFT JOIN PRODUCTIONRESERVATION p2 ON
            p2.ORDERCODE = p.CODE
        LEFT JOIN SALESORDERLINE s ON
            s.SALESORDERCODE = p.ORIGDLVSALORDLINESALORDERCODE
            AND s.ORDERLINE = p.ORIGDLVSALORDERLINEORDERLINE
        LEFT JOIN SALESORDER s2 ON
            s2.CODE = s.SALESORDERCODE
        WHERE
            (
                p2.ITEMTYPEAFICODE = 'FKG'
                    OR p2.ITEMTYPEAFICODE = 'KGF'
            )
            AND (
                p.ITEMTYPEAFICODE = 'KFF'
                    OR p.ITEMTYPEAFICODE = 'FKF'
            )
            AND p2.PRODUCTIONORDERCODE IS NOT NULL
            --            AND  p.ORIGDLVSALORDLINESALORDERCODE = 'EXP2300014'
            AND p.SUBCODE07 NOT IN (
                '', '-'
            )
            AND p.SUBCODE08 NOT IN (
                '', '-'
            )
        GROUP BY
            s2.ABSUNIQUEID,
            p.ORIGDLVSALORDLINESALORDERCODE,
            p.SUBCODE07,
            p.SUBCODE08,
            p2.USERPRIMARYUOMCODE,
            p2.USERPRIMARYQUANTITY
    )
GROUP BY
    ABSUNIQUEID,
    PROJECTCODE,
    SUBCODE07,
    SUBCODE08;


-- DB2ADMIN.ITXVIEW_KGBRUTO_SALES source

CREATE VIEW ITXVIEW_KGBRUTO_SALES AS
SELECT
    DISTINCT 
	 PROJECTCODE,
     NAMA_BUYER,
    LINETEMPLATECODE,
    ORDERDATE,
    YEARORDER,
    MONTHORDER,
    SUM(BRUTO_1) AS BRUTO1,
    SUM(BRUTO_2) AS BRUTO2,
    SUM(BRUTO_3) AS BRUTO3,
    SUM(BRUTO_4) AS BRUTO4,
    SUM(BRUTO_5) AS BRUTO5,
    SUM(BRUTO_6) AS BRUTO6,
    SUM(BRUTO_7) AS BRUTO7,
    SUM(BRUTO_8) AS BRUTO8,
    SUM(BRUTO_9) AS BRUTO9,
    SUM(BRUTO_10) AS BRUTO10,
    SUM(BRUTO_11) AS BRUTO11,
    SUM(BRUTO_12) AS BRUTO12,
    SUM(BRUTO_1SS) AS BRUTO1_SS,
    SUM(BRUTO_2SS) AS BRUTO2_SS,
    SUM(BRUTO_3SS) AS BRUTO3_SS,
    SUM(BRUTO_4SS) AS BRUTO4_SS,
    SUM(BRUTO_5SS) AS BRUTO5_SS,
    SUM(BRUTO_6SS) AS BRUTO6_SS,
    SUM(BRUTO_7SS) AS BRUTO7_SS,
    SUM(BRUTO_8SS) AS BRUTO8_SS,
    SUM(BRUTO_9SS) AS BRUTO9_SS,
    SUM(BRUTO_10SS) AS BRUTO10_SS,
    SUM(BRUTO_11SS) AS BRUTO11_SS,
    SUM(BRUTO_12SS) AS BRUTO12_SS
FROM
    (
        SELECT
            p.ORIGDLVSALORDLINESALORDERCODE AS PROJECTCODE,
            a.NAMENAME,
            a.VALUESTRING,
            SUBSTR(s2.ORDERDATE, 1, 7) AS ORDERDATE,
            YEAR(s2.ORDERDATE) AS YEARORDER,
            MONTH(s2.ORDERDATE)AS MONTHORDER,
            o.ORDPRNCUSTOMERSUPPLIERCODE AS KODE_BUYER,
            o.LONGDESCRIPTION AS NAMA_BUYER,
            p.ITEMTYPEAFICODE AS ITEMTYPE_DEMAND,
            p2.ITEMTYPEAFICODE AS ITEMTYPE_RESERVATION,
            p2.USERPRIMARYUOMCODE AS UOMCODE,
            s.LINETEMPLATECODE,
            CASE
                WHEN p.ITEMTYPEAFICODE = 'KFF'
                AND p2.ITEMTYPEAFICODE = 'KGF'
		   	THEN SUM(p2.USERPRIMARYQUANTITY)
                ELSE 0
            END AS BRUTO,
            CASE
                WHEN p.ITEMTYPEAFICODE = 'FKF'
                AND p2.ITEMTYPEAFICODE = 'FKG'
		   	THEN SUM(p2.USERPRIMARYQUANTITY)
                ELSE 0
            END AS BRUTO_FK,
            CASE
                WHEN MONTH(s2.ORDERDATE)= 1
                AND s.LINETEMPLATECODE NOT IN ('SAM')
           	THEN SUM(p2.USERPRIMARYQUANTITY)
                ELSE 0
            END AS BRUTO_1,
             CASE
                WHEN MONTH(s2.ORDERDATE)= 2
                AND s.LINETEMPLATECODE NOT IN ('SAM')
           	THEN SUM(p2.USERPRIMARYQUANTITY)
                ELSE 0
            END AS BRUTO_2,
            CASE
                WHEN MONTH(s2.ORDERDATE)= 3
                AND s.LINETEMPLATECODE NOT IN ('SAM')
           	THEN SUM(p2.USERPRIMARYQUANTITY)
                ELSE 0
            END AS BRUTO_3,
            CASE
                WHEN MONTH(s2.ORDERDATE)= 4
                AND s.LINETEMPLATECODE NOT IN ('SAM')
           	THEN SUM(p2.USERPRIMARYQUANTITY)
                ELSE 0
            END AS BRUTO_4,
            CASE
                WHEN MONTH(s2.ORDERDATE)= 5
                AND s.LINETEMPLATECODE NOT IN ('SAM')
           	THEN SUM(p2.USERPRIMARYQUANTITY)
                ELSE 0
            END AS BRUTO_5,
            CASE
                WHEN MONTH(s2.ORDERDATE)= 6
                AND s.LINETEMPLATECODE NOT IN ('SAM')
           	THEN SUM(p2.USERPRIMARYQUANTITY)
                ELSE 0
            END AS BRUTO_6,
            CASE
                WHEN MONTH(s2.ORDERDATE)= 7
                AND s.LINETEMPLATECODE NOT IN ('SAM')
           	THEN SUM(p2.USERPRIMARYQUANTITY)
                ELSE 0
            END AS BRUTO_7,
            CASE
                WHEN MONTH(s2.ORDERDATE)= 8
                AND s.LINETEMPLATECODE NOT IN ('SAM')
           	THEN SUM(p2.USERPRIMARYQUANTITY)
                ELSE 0
            END AS BRUTO_8,
            CASE
                WHEN MONTH(s2.ORDERDATE)= 9
                AND s.LINETEMPLATECODE NOT IN ('SAM')
           	THEN SUM(p2.USERPRIMARYQUANTITY)
                ELSE 0
            END AS BRUTO_9,
            CASE
                WHEN MONTH(s2.ORDERDATE)= 10
                AND s.LINETEMPLATECODE NOT IN ('SAM')
           	THEN SUM(p2.USERPRIMARYQUANTITY)
                ELSE 0
            END AS BRUTO_10,
            CASE
                WHEN MONTH(s2.ORDERDATE)= 11
                AND s.LINETEMPLATECODE NOT IN ('SAM')
           	THEN SUM(p2.USERPRIMARYQUANTITY)
                ELSE 0
            END AS BRUTO_11,
            CASE
                WHEN MONTH(s2.ORDERDATE)= 12
                AND s.LINETEMPLATECODE NOT IN ('SAM')
           	THEN SUM(p2.USERPRIMARYQUANTITY)
                ELSE 0
            END AS BRUTO_12,
             CASE
                WHEN MONTH(s2.ORDERDATE)= 1
                AND s.LINETEMPLATECODE IN ('SAM')
           	THEN SUM(p2.USERPRIMARYQUANTITY)
                ELSE 0
            END AS BRUTO_1SS,
             CASE
                WHEN MONTH(s2.ORDERDATE)= 2
                AND s.LINETEMPLATECODE IN ('SAM')
           	THEN SUM(p2.USERPRIMARYQUANTITY)
                ELSE 0
            END AS BRUTO_2SS,
            CASE
                WHEN MONTH(s2.ORDERDATE)= 3
                AND s.LINETEMPLATECODE IN ('SAM')
           	THEN SUM(p2.USERPRIMARYQUANTITY)
                ELSE 0
            END AS BRUTO_3SS,
            CASE
                WHEN MONTH(s2.ORDERDATE)= 4
                AND s.LINETEMPLATECODE IN ('SAM')
           	THEN SUM(p2.USERPRIMARYQUANTITY)
                ELSE 0
            END AS BRUTO_4SS,
            CASE
                WHEN MONTH(s2.ORDERDATE)= 5
                AND s.LINETEMPLATECODE IN ('SAM')
           	THEN SUM(p2.USERPRIMARYQUANTITY)
                ELSE 0
            END AS BRUTO_5SS,
            CASE
                WHEN MONTH(s2.ORDERDATE)= 6
                AND s.LINETEMPLATECODE IN ('SAM')
           	THEN SUM(p2.USERPRIMARYQUANTITY)
                ELSE 0
            END AS BRUTO_6SS,
            CASE
                WHEN MONTH(s2.ORDERDATE)= 7
                AND s.LINETEMPLATECODE IN ('SAM')
           	THEN SUM(p2.USERPRIMARYQUANTITY)
                ELSE 0
            END AS BRUTO_7SS,
            CASE
                WHEN MONTH(s2.ORDERDATE)= 8
                AND s.LINETEMPLATECODE IN ('SAM')
           	THEN SUM(p2.USERPRIMARYQUANTITY)
                ELSE 0
            END AS BRUTO_8SS,
            CASE
                WHEN MONTH(s2.ORDERDATE)= 9
                AND s.LINETEMPLATECODE IN ('SAM')
           	THEN SUM(p2.USERPRIMARYQUANTITY)
                ELSE 0
            END AS BRUTO_9SS,
            CASE
                WHEN MONTH(s2.ORDERDATE)= 10
                AND s.LINETEMPLATECODE IN ('SAM')
           	THEN SUM(p2.USERPRIMARYQUANTITY)
                ELSE 0
            END AS BRUTO_10SS,
            CASE
                WHEN MONTH(s2.ORDERDATE)= 11
                AND s.LINETEMPLATECODE IN ('SAM')
           	THEN SUM(p2.USERPRIMARYQUANTITY)
                ELSE 0
            END AS BRUTO_11SS,
            CASE
                WHEN MONTH(s2.ORDERDATE)= 12
                AND s.LINETEMPLATECODE IN ('SAM')
           	THEN SUM(p2.USERPRIMARYQUANTITY)
                ELSE 0
            END AS BRUTO_12SS
        FROM
            PRODUCTIONDEMAND p
        LEFT JOIN PRODUCTIONRESERVATION p2 ON
            p2.ORDERCODE = p.CODE
        LEFT JOIN SALESORDERLINE s ON
            s.SALESORDERCODE = p.ORIGDLVSALORDLINESALORDERCODE
            AND s.ORDERLINE = p.ORIGDLVSALORDERLINEORDERLINE
        LEFT JOIN SALESORDER s2 ON
            s2.CODE = s.SALESORDERCODE
        LEFT JOIN ORDERPARTNERBRAND o ON
            s2.ORDPRNCUSTOMERSUPPLIERCODE = o.ORDPRNCUSTOMERSUPPLIERCODE
            AND s2.ORDERPARTNERBRANDCODE = o.CODE
        LEFT JOIN ADSTORAGE a ON
            a.UNIQUEID = p.ABSUNIQUEID
            AND a.NAMENAME = 'OriginalPDCode'
        WHERE
            (
                p2.ITEMTYPEAFICODE = 'KGF'
                    OR p2.ITEMTYPEAFICODE = 'FKG'
            )
            AND (
                p.ITEMTYPEAFICODE = 'KFF'
                    OR p.ITEMTYPEAFICODE = 'FKF'
            )
            AND p2.PRODUCTIONORDERCODE IS NOT NULL
            AND s.LINETEMPLATECODE NOT IN (
                'CAP', 'CWD', 'CWE', 'ENQ', 'LAB', 'STO', 'TAS'
            )
        GROUP BY
            p.ORIGDLVSALORDLINESALORDERCODE,
            p.ITEMTYPEAFICODE,
            p2.ITEMTYPEAFICODE,
            p2.USERPRIMARYUOMCODE,
            a.NAMENAME,
            a.VALUESTRING,
            o.ORDPRNCUSTOMERSUPPLIERCODE,
            o.LONGDESCRIPTION,
            s.LINETEMPLATECODE,
            s2.ORDERDATE
    )
WHERE
    NAMENAME IS NULL
GROUP BY
    PROJECTCODE,
    NAMA_BUYER,
    LINETEMPLATECODE,
    ORDERDATE,
    YEARORDER,    
    MONTHORDER,
    BRUTO_1,
    BRUTO_2,
    BRUTO_4,
    BRUTO_5,
    BRUTO_6,
    BRUTO_7,
    BRUTO_8,
    BRUTO_9,
    BRUTO_10,
    BRUTO_11,
    BRUTO_12,
    BRUTO_1SS,
    BRUTO_2SS,
    BRUTO_4SS,
    BRUTO_5SS,
    BRUTO_6SS,
    BRUTO_7SS,
    BRUTO_8SS,
    BRUTO_9SS,
    BRUTO_10SS,
    BRUTO_11SS,
    BRUTO_12SS;


-- DB2ADMIN.ITXVIEW_KK_TAS source

CREATE VIEW ITXVIEW_KK_TAS AS
SELECT
    P1.CODE AS NO_PROD_ORDER,
    P3.PRODUCTIONDEMANDCODE AS NO_DEMAND,
    PROJECT.LONGDESCRIPTION AS PROJECTCODE,
    P2.ORIGDLVSALORDLINESALORDERCODE,
    P2.ORIGDLVSALORDERLINEORDERLINE,
    TRIM(P2.SUBCODE02) || '-' || TRIM(P2.SUBCODE03) AS NO_HANGER,
    PRODUCT.LONGDESCRIPTION AS JENIS_KAIN,
    ITXVIEW_SUB_KK_TAS.SUBCODE03 AS ARTICLE_CODE,
    ITXVIEW_SUB_KK_TAS.QTY,
    ITXVIEW_SUB_KK_TAS.QTY2,
    ITXVIEW_SUB_KK_TAS.SATUAN,
    trim(ITXVIEW_SUB_KK_TAS.SUBCODE05) NO_WARNA,
    trim(ITXVIEW_SUB_KK_TAS.SUBCODE05) || ' ' || '(' || USERGENERICGROUP.LONGDESCRIPTION || ')' AS WARNA,
    BP.ADDRESSLINE1 AS TEMPAT_KIRIM,
    ADS_LEBAR.VALUEDECIMAL AS LEBAR,
    ADS_GRAMASI.VALUEDECIMAL AS GRAMASI,
    ITXVIEW_JENISBENANG.DESCRIP AS JENIS_BENANG,
    ADS_TGL_KIRIM.VALUEDATE AS TGL_KIRIM,
    ADS_NOTE.VALUESTRING AS NOTE1,
    ADS_NOTES.VALUESTRING AS NOTE2,
    CASE
        WHEN TRIM(ADS_NOTES.VALUESTRING) IS NULL THEN TRIM(ADS_NOTE.VALUESTRING)
        WHEN TRIM(ADS_NOTE.VALUESTRING) IS NULL THEN TRIM(ADS_NOTES.VALUESTRING)
        ELSE TRIM(ADS_NOTE.VALUESTRING) || ' ' || TRIM(ADS_NOTES.VALUESTRING)
    END AS NOTES,
    ADS_BUYER.VALUESTRING AS BUYER,
    ADS_TRACKINGDEV.VALUESTRING AS TRACKINGDEV,
    ITXVIEW_SUB_KK_TAS.ABSUNIQUEID,
    ADS_STDCCKWARNA.VALUESTRING AS STDCCKWARNA,
    a.VALUEDECIMAL AS LEBAR_IN,
    a2.VALUEDECIMAL AS GRAMASI_IN
FROM
    PRODUCTIONORDER P1
LEFT JOIN PRODUCTIONDEMANDSTEP P3 ON
    P1.CODE = P3.PRODUCTIONORDERCODE
LEFT JOIN PRODUCTIONDEMAND P2 ON
    P2.CODE = P3.PRODUCTIONDEMANDCODE
LEFT JOIN ITXVIEW_SUB_KK_TAS ITXVIEW_SUB_KK_TAS ON
    P3.PRODUCTIONDEMANDCODE = ITXVIEW_SUB_KK_TAS.NO_DEMAND
LEFT JOIN CUSTOMERSUPPLIERDATA CSD ON
    ITXVIEW_SUB_KK_TAS.CUSTOMERCODE = CSD.CODE
LEFT JOIN BUSINESSPARTNER BP ON
    CSD.BUSINESSPARTNERNUMBERID = BP.NUMBERID
LEFT JOIN ITXVIEW_JENISBENANG ITXVIEW_JENISBENANG ON
    ITXVIEW_SUB_KK_TAS.SUBCODE01 = ITXVIEW_JENISBENANG.SUBCODE01
    AND ITXVIEW_SUB_KK_TAS.SUBCODE02 = ITXVIEW_JENISBENANG.SUBCODE02
    AND ITXVIEW_SUB_KK_TAS.SUBCODE03 = ITXVIEW_JENISBENANG.SUBCODE03
    AND ITXVIEW_SUB_KK_TAS.SUBCODE04 = ITXVIEW_JENISBENANG.SUBCODE04
LEFT JOIN PRODUCT PRODUCT ON
    ITXVIEW_SUB_KK_TAS.SUBCODE01 = PRODUCT.SUBCODE01
    AND ITXVIEW_SUB_KK_TAS.SUBCODE02 = PRODUCT.SUBCODE02
    AND ITXVIEW_SUB_KK_TAS.SUBCODE03 = PRODUCT.SUBCODE03
    AND ITXVIEW_SUB_KK_TAS.SUBCODE04 = PRODUCT.SUBCODE04
    AND ITXVIEW_SUB_KK_TAS.SUBCODE05 = PRODUCT.SUBCODE05
    AND ITXVIEW_SUB_KK_TAS.SUBCODE06 = PRODUCT.SUBCODE06
LEFT JOIN ADSTORAGE ADS_LEBAR ON
    PRODUCT.ABSUNIQUEID = ADS_LEBAR.UNIQUEID
    AND ADS_LEBAR.NAMENAME = 'Width'
LEFT JOIN ADSTORAGE ADS_GRAMASI ON
    PRODUCT.ABSUNIQUEID = ADS_GRAMASI.UNIQUEID
    AND ADS_GRAMASI.NAMENAME = 'GSM'
LEFT JOIN USERGENERICGROUP USERGENERICGROUP ON
    ITXVIEW_SUB_KK_TAS.SUBCODE05 = USERGENERICGROUP.CODE
LEFT JOIN (
        SELECT
            *
        FROM
            ADSTORAGE ADS_TGL_KIRIM
        WHERE
            ADS_TGL_KIRIM.NAMENAME = 'DevSamDelivery'
    ) ADS_TGL_KIRIM ON
    ITXVIEW_SUB_KK_TAS.ABSUNIQUEID = ADS_TGL_KIRIM.UNIQUEID
LEFT JOIN (
        SELECT
            *
        FROM
            ADSTORAGE ADS_NOTE
        WHERE
            ADS_NOTE.NAMENAME = 'NoteDevSam'
    ) ADS_NOTE ON
    ITXVIEW_SUB_KK_TAS.ABSUNIQUEID = ADS_NOTE.UNIQUEID
LEFT JOIN (
        SELECT
            *
        FROM
            ADSTORAGE ADS_NOTES
        WHERE
            ADS_NOTES.NAMENAME = 'NotesDevSam'
    ) ADS_NOTES ON
    ITXVIEW_SUB_KK_TAS.ABSUNIQUEID = ADS_NOTES.UNIQUEID
LEFT JOIN (
        SELECT
            *
        FROM
            ADSTORAGE ADS_BUYER
        WHERE
            ADS_BUYER.NAMENAME = 'BuyerDevSam'
    ) ADS_BUYER ON
    ITXVIEW_SUB_KK_TAS.ABSUNIQUEID = ADS_BUYER.UNIQUEID
LEFT JOIN (
        SELECT
            *
        FROM
            ADSTORAGE ADS_TRACKINGDEV
        WHERE
            ADS_TRACKINGDEV.NAMENAME = 'NoTrackingDev'
    ) ADS_TRACKINGDEV ON
    ITXVIEW_SUB_KK_TAS.ABSUNIQUEID = ADS_TRACKINGDEV.UNIQUEID
LEFT JOIN (
        SELECT
            *
        FROM
            ADSTORAGE ADS_STDCCKWARNA
        WHERE
            ADS_STDCCKWARNA.FIELDNAME = 'stdcckwarna'
    ) ADS_STDCCKWARNA ON
    ITXVIEW_SUB_KK_TAS.ABSUNIQUEID = ADS_STDCCKWARNA.UNIQUEID
LEFT JOIN PROJECT PROJECT ON
    PROJECT.CODE = P2.PROJECTCODE
LEFT JOIN ADSTORAGE a ON
    a.UNIQUEID = P2.ABSUNIQUEID
    AND a.FIELDNAME = 'Lebar'
LEFT JOIN ADSTORAGE a2 ON
    a2.UNIQUEID = P2.ABSUNIQUEID
    AND a2.FIELDNAME = 'Gramasi'
    --WHERE
    --	P1.CODE = '00152419'
GROUP BY
    P1.CODE,
    P3.PRODUCTIONDEMANDCODE,
    PROJECT.LONGDESCRIPTION,
    P2.ORIGDLVSALORDLINESALORDERCODE,
    P2.ORIGDLVSALORDERLINEORDERLINE,
    P2.SUBCODE02,
    P2.SUBCODE03,
    PRODUCT.LONGDESCRIPTION,
    P2.SUBCODE03,
    BP.LEGALNAME1,
    USERGENERICGROUP.LONGDESCRIPTION,
    ADS_LEBAR.VALUEDECIMAL,
    ADS_GRAMASI.VALUEDECIMAL,
    BP.ADDRESSLINE1,
    ITXVIEW_JENISBENANG.DESCRIP,
    ADS_TGL_KIRIM.VALUEDATE,
    ADS_NOTE.VALUESTRING,
    ADS_NOTES.VALUESTRING,
    ADS_BUYER.VALUESTRING,
    ADS_TRACKINGDEV.VALUESTRING,
    ITXVIEW_SUB_KK_TAS.SUBCODE03,
    ITXVIEW_SUB_KK_TAS.SUBCODE05,
    ITXVIEW_SUB_KK_TAS.QTY,
    ITXVIEW_SUB_KK_TAS.QTY2,
    ITXVIEW_SUB_KK_TAS.SATUAN,
    ITXVIEW_SUB_KK_TAS.ABSUNIQUEID,
    ADS_STDCCKWARNA.VALUESTRING,
    a.VALUEDECIMAL,
    a2.VALUEDECIMAL;


-- DB2ADMIN.ITXVIEW_KNTORDER_KNTA source

CREATE VIEW ITXVIEW_KNTORDER_KNTA AS
SELECT
    PRODUCTIONDEMAND.COMPANYCODE,
    PRODUCTIONDEMAND.COUNTERCODE,
    PRODUCTIONDEMAND.CODE,
    PRODUCTIONDEMAND.ORDERDATE,
    PRODUCTIONDEMAND.PROJECTCODE,
    PRODUCTIONDEMAND.ORIGDLVSALORDLINESALORDERCODE,
    PRODUCTIONDEMAND.ITEMTYPEAFICODE,
    PRODUCTIONDEMAND.SUBCODE01,
    PRODUCTIONDEMAND.SUBCODE02,
    PRODUCTIONDEMAND.SUBCODE03,
    PRODUCTIONDEMAND.SUBCODE04,
    PRODUCTIONDEMAND.SUBCODE05,
    PRODUCTIONDEMAND.SUBCODE06,
    PRODUCTIONDEMAND.SUBCODE07,
    PRODUCTIONDEMAND.SUBCODE08,
    PRODUCTIONDEMAND.SUBCODE09,
    PRODUCTIONDEMAND.SUBCODE10,
    PRODUCTIONDEMAND.USERPRIMARYQUANTITY,
    PRODUCTIONDEMAND.USERPRIMARYUOMCODE,
    PRODUCTIONDEMAND.FINALPLANNEDDATE,
    PRODUCTIONDEMAND.EXTERNALREFERENCE,
    PRODUCTIONDEMAND.INTERNALREFERENCE,
    PRODUCTIONDEMAND.ABSUNIQUEID,
    FULLITEMKEYDECODER.SUMMARIZEDDESCRIPTION,
    BUSINESSPARTNER.LEGALNAME1,
    PRODUCTIONDEMANDCOMMENT.COMMENTTEXT
FROM
    PRODUCTIONDEMAND PRODUCTIONDEMAND
LEFT OUTER JOIN DB2ADMIN.PRODUCTIONCUSTOMIZEDOPTIONS PRODUCTIONCUSTOMIZEDOPTIONS ON
    PRODUCTIONDEMAND.COMPANYCODE = PRODUCTIONCUSTOMIZEDOPTIONS.COMPANYCODE
LEFT OUTER JOIN DB2ADMIN.COMPANY COMPANY ON
    PRODUCTIONDEMAND.COMPANYCODE = COMPANY.CODE
LEFT OUTER JOIN DB2ADMIN.FULLITEMKEYDECODER FULLITEMKEYDECODER ON
    PRODUCTIONDEMAND.COMPANYCODE = FULLITEMKEYDECODER.COMPANYCODE
    AND PRODUCTIONDEMAND.FULLITEMIDENTIFIER = FULLITEMKEYDECODER.IDENTIFIER
LEFT OUTER JOIN DB2ADMIN.ORDERPARTNER ORDERPARTNER ON
    PRODUCTIONDEMAND.CUSTOMERCODE = ORDERPARTNER.CUSTOMERSUPPLIERCODE
LEFT OUTER JOIN DB2ADMIN.BUSINESSPARTNER BUSINESSPARTNER ON
    ORDERPARTNER.ORDERBUSINESSPARTNERNUMBERID = BUSINESSPARTNER.NUMBERID
LEFT OUTER JOIN DB2ADMIN.PRODUCTIONDEMANDCOMMENT PRODUCTIONDEMANDCOMMENT ON
    PRODUCTIONDEMAND.CODE = PRODUCTIONDEMANDCOMMENT.PRODUCTIONDEMANDCODE;


-- DB2ADMIN.ITXVIEW_KODE_SM source

CREATE VIEW ITXVIEW_KODE_SM AS 
SELECT
    s.CODE AS SALESORDERCODE,
    a.UNIQUEID,
    a.VALUESTRING AS KODE_SM,
    a2.VALUESTRING AS PICEXT,
    CASE
        WHEN a3.VALUESTRING IS NULL THEN '-'
        ELSE a3.VALUESTRING
    END AS ext
FROM
    SALESORDER s
LEFT JOIN ADSTORAGE a ON
    s.ABSUNIQUEID = a.UNIQUEID
    AND a.FIELDNAME = 'KodeSM'
LEFT JOIN ADSTORAGE a2 ON
    s.ABSUNIQUEID = a2.UNIQUEID
    AND a2.NAMENAME = 'PICEXT'
LEFT JOIN ADSTORAGE a3 ON
    s.ABSUNIQUEID = a3.UNIQUEID
    AND a3.NAMENAME = 'EXT';


-- DB2ADMIN.ITXVIEW_LAPKAINJADI_GKJ source

CREATE VIEW ITXVIEW_LAPKAINJADI_GKJ AS
SELECT
    sd.PROVISIONALCODE AS no_sj,
    ALLOCATION.CODE AS code_allocation,
    ITXVIEW_EXIM_FOC.QUALITYREASONCODE,
    ALLOCATION.LOTCODE,
    sdl.PROJECTCODE,
    sdl.PREVIOUSCODE,
    CASE
        WHEN sdl.EXTERNALREFERENCE IS NULL THEN sd.EXTERNALREFERENCE
        ELSE sdl.EXTERNALREFERENCE
    END AS NO_PO
FROM
    SALESDOCUMENT sd
LEFT JOIN SALESDOCUMENTLINE sdl ON
    sd.PROVISIONALCODE = sdl.SALESDOCUMENTPROVISIONALCODE
LEFT JOIN (
        SELECT
            *
        FROM
            ALLOCATION ALLOCATION
        WHERE
            ALLOCATION.DETAILTYPE = '1'
            AND ALLOCATION.ORIGINTRNTRANSACTIONNUMBER IS NULL
            AND ALLOCATION.DESTINATIONTYPE = '7'
    ) ALLOCATION ON
    sdl.SUBCODE01 = ALLOCATION.DECOSUBCODE01
    AND sdl.SUBCODE02 = ALLOCATION.DECOSUBCODE02
    AND sdl.SUBCODE03 = ALLOCATION.DECOSUBCODE03
    AND sdl.SUBCODE04 = ALLOCATION.DECOSUBCODE04
    AND sdl.SUBCODE05 = ALLOCATION.DECOSUBCODE05
    AND sdl.SUBCODE06 = ALLOCATION.DECOSUBCODE06
    AND sdl.SUBCODE07 = ALLOCATION.DECOSUBCODE07
    AND sdl.PROJECTCODE = ALLOCATION.PROJECTCODE
    AND sdl.PREVIOUSCODE = ALLOCATION.ORDERCODE
    AND sdl.PREVIOUSORDERLINE = ALLOCATION.ORDERLINE
LEFT JOIN ITXVIEW_EXIM_FOC ITXVIEW_EXIM_FOC ON
    ALLOCATION.CODE = ITXVIEW_EXIM_FOC.CODE
LEFT JOIN DESIGN DESIGN ON
    DESIGN.SUBCODE01 = sdl.SUBCODE07
LEFT JOIN DESIGNCOMPONENT DESIGNCOMPONENT ON
    DESIGNCOMPONENT.VARIANTCODE = sdl.SUBCODE08
    AND DESIGNCOMPONENT.DESIGNNUMBERID = DESIGN.NUMBERID
LEFT JOIN (
        SELECT
            ITXVIEWRESEPCOLOR.LONGDESCRIPTION,
            ITXVIEWRESEPCOLOR.ARTIKEL,
            ITXVIEWRESEPCOLOR.NO_WARNA
        FROM
            ITXVIEWRESEPCOLOR ITXVIEWRESEPCOLOR
        GROUP BY
            ITXVIEWRESEPCOLOR.LONGDESCRIPTION,
            ITXVIEWRESEPCOLOR.ARTIKEL,
            ITXVIEWRESEPCOLOR.NO_WARNA
    ) ITXVIEWRESEPCOLOR ON
    ITXVIEWRESEPCOLOR.ARTIKEL = sdl.SUBCODE03
    AND ITXVIEWRESEPCOLOR.NO_WARNA = sdl.SUBCODE05
LEFT JOIN PRODUCT PRODUCT ON
    sdl.ITEMTYPEAFICODE = PRODUCT.ITEMTYPECODE
    AND sdl.SUBCODE01 = PRODUCT.SUBCODE01
    AND sdl.SUBCODE02 = PRODUCT.SUBCODE02
    AND sdl.SUBCODE03 = PRODUCT.SUBCODE03
    AND sdl.SUBCODE04 = PRODUCT.SUBCODE04
    AND sdl.SUBCODE05 = PRODUCT.SUBCODE05
    AND sdl.SUBCODE06 = PRODUCT.SUBCODE06
    AND sdl.SUBCODE07 = PRODUCT.SUBCODE07
    AND sdl.SUBCODE08 = PRODUCT.SUBCODE08;


-- DB2ADMIN.ITXVIEW_LAPKIRIM_GKJ source

CREATE VIEW ITXVIEW_LAPKIRIM_GKJ AS
SELECT
    SALESDOCUMENT.PROVISIONALCODE,
    SALESDOCUMENT.DEFINITIVEDOCUMENTDATE,
    SALESDOCUMENT.ORDERPARTNERBRANDCODE,
    CASE
        WHEN SALESDOCUMENT.EXTERNALREFERENCE IS NULL THEN SALESDOCUMENTLINE.EXTERNALREFERENCE
        ELSE SALESDOCUMENT.EXTERNALREFERENCE
    END AS PO_NUMBER,
    SALESDOCUMENT.PROJECTCODE,
    SALESDOCUMENT.ORDPRNCUSTOMERSUPPLIERCODE,
    SALESDOCUMENT.PAYMENTMETHODCODE,
    SALESDOCUMENTLINE.ITEMDESCRIPTION,
    SALESDOCUMENTLINE.ORDERLINE,
    ITXVIEW_ALLOCATION_LAPKIRIMGKJ.CODE
FROM
    SALESDOCUMENT SALESDOCUMENT
LEFT JOIN SALESDOCUMENTLINE SALESDOCUMENTLINE ON
    SALESDOCUMENT.PROVISIONALCODE = SALESDOCUMENTLINE.SALESDOCUMENTPROVISIONALCODE
LEFT JOIN ITXVIEW_ALLOCATION_LAPKIRIMGKJ ITXVIEW_ALLOCATION_LAPKIRIMGKJ ON
    SALESDOCUMENTLINE.SALESDOCUMENTPROVISIONALCODE = ITXVIEW_ALLOCATION_LAPKIRIMGKJ.ORDERCODE
    AND SALESDOCUMENTLINE.ORDERLINE = ITXVIEW_ALLOCATION_LAPKIRIMGKJ.ORDERLINE
    AND SALESDOCUMENT.PROVISIONALDOCUMENTDATE = ITXVIEW_ALLOCATION_LAPKIRIMGKJ.THEORETICISSUEDATE;


-- DB2ADMIN.ITXVIEW_LAP_BULANAN_EXIM source

CREATE VIEW ITXVIEW_LAP_BULANAN_EXIM AS
SELECT
    ADDRESS.ADDRESSEE AS nama_consignee,
    OPB.LONGDESCRIPTION AS buyer,
    TRIM(ADS20.VALUESTRING) AS no_shipping,
    CASE
        WHEN GRANDTOTAL_PACKINGLIST_EXIM2.JML_KG = 0 THEN GRANDTOTAL_PACKINGLIST_EXIM2.FOC_KG
        ELSE GRANDTOTAL_PACKINGLIST_EXIM2.JML_KG
    END AS qty_kgs,
    --    GRANDTOTAL_PACKINGLIST_EXIM2.JML_KG AS qty_kgs,
    SD.PROVISIONALCODE AS no_suratjalan,
    SD.GOODSISSUEDATE AS tgl_suratjalan,
    SD.CREATIONUSER AS author,
    COUNTRY.LONGDESCRIPTION AS dest,
    TRIM(ADS19.VALUESTRING) AS port,
    SD.TERMSOFDELIVERYCODE AS term,
    SO.COUNTERCODE AS jenis_order,
    tos.LONGDESCRIPTION AS status_by,
    TRIM(ADS18.VALUESTRING) AS status_meas,
    trim(TD.LONGDESCRIPTION) AS forwarder,
    TRIM(ADS.VALUEDATE) AS ETD_shippment,
    TRIM(ADS21.VALUEDATE) AS ETA,
    SD.ONDOCUMENTTOTALAMOUNT AS TOTAL,
    TRIM(ADS17.VALUESTRING) AS note,
    TRIM(ADS16.VALUEDATE) AS terimadok_khusus,
    TRIM(ADS15.VALUEDATE) AS penyerahan_dok,
    ADS15.VALUEDATE-ADS16.VALUEDATE AS tgl_lamapenyerahan_doc,
    LEGALDOCUMENTTYPE.LONGDESCRIPTION AS remarkshippemnt,
    CASE
        WHEN SD.TERMSOFSHIPPINGCODE IN(
            'SE', 'SA'
        ) THEN '040300 KPU TANJUNG PRIOK'
        ELSE '050100 KPPBC SOEKARNO HATTA'
    END AS NM_KPPBC,
    VIEW_NPE.PROJECT AS NO_PI,
    TRIM(ADS2.VALUESTRING) AS BL_AWB,
    TRIM(EXIM_CONTAINER.NO_CONTAINER) AS NO_CONTAINER,
    PAYTOD.LONGDESCRIPTION AS pembayaran_jenis,
    TRIM(ADS3.VALUEDATE) AS tgl_terimadok,
    TRIM(ADS4.VALUEDATE) AS tgl_kemkt,
    TRIM(ADS5.VALUEINT) AS no_peb,
    TRIM(ADS6.VALUESTRING) AS LCNUMBER,
    TRIM(ADS7.VALUEDATE) AS tgl_peb,
    TRIM(ADS8.VALUEINT) AS NPE,
    TRIM(ADS9.VALUESTRING) AS AWB,
    TRIM(ADS10.VALUESTRING) AS Tagihan_noinv,
    TRIM(ADS11.VALUEINT) AS Tagihan_nilai,
    TRIM(ADS12.VALUEINT) AS inv_actual,
    TRIM(ADS13.VALUESTRING) AS keterangan,
    TRIM(ADS14.VALUESTRING) AS ket_rmkShipment,
    SD.ABSUNIQUEID
FROM
    SALESDOCUMENT SD
LEFT JOIN ITXVIEW_NO_PROJECTS_EXIM VIEW_NPE ON
    SD.PROVISIONALCODE = VIEW_NPE.PROVISIONALCODE
LEFT JOIN ITXVIEW_GRANDTOTAL_PACKINGLIST_EXIM2 GRANDTOTAL_PACKINGLIST_EXIM2 ON
    SD.PROVISIONALCODE = GRANDTOTAL_PACKINGLIST_EXIM2.PROVISIONALCODE
LEFT JOIN SALESORDER SO ON
    SD.PROJECTCODE = SO.CODE
LEFT JOIN TERMSOFSHIPPING tos ON
    SD.TERMSOFSHIPPINGCODE = tos.CODE
LEFT JOIN ORDERPARTNERBRAND OPB ON
    SD.ORDERPARTNERBRANDCODE = OPB.CODE
    AND SD.ORDPRNCUSTOMERSUPPLIERCODE = OPB.ORDPRNCUSTOMERSUPPLIERCODE
LEFT JOIN ADDRESS ADDRESS ON
    SD.DELIVERYPOINTUNIQUEID = ADDRESS.UNIQUEID
    AND SD.DELIVERYPOINTCODE = ADDRESS.CODE
LEFT JOIN COUNTRY COUNTRY ON
    ADDRESS.COUNTRYCODE = COUNTRY.CODE
LEFT JOIN TRUCKDRIVER TD ON
    SD.TRUCKDRIVERCODE = TD.CODE
LEFT JOIN PAYMENTMETHOD PAYTOD ON
    SD.PAYMENTMETHODCODE = PAYTOD.CODE
LEFT JOIN ADSTORAGE ADS ON
    SD.ABSUNIQUEID = ADS.UNIQUEID
    AND ADS.NAMENAME = 'TransportDate'
LEFT JOIN ADSTORAGE ADS2 ON
    SD.ABSUNIQUEID = ADS2.UNIQUEID
    AND ADS2.NAMENAME = 'BLAWB'
LEFT JOIN ADSTORAGE ADS3 ON
    SD.ABSUNIQUEID = ADS3.UNIQUEID
    AND ADS3.NAMENAME = 'TglTerima'
LEFT JOIN ADSTORAGE ADS4 ON
    SD.ABSUNIQUEID = ADS4.UNIQUEID
    AND ADS4.NAMENAME = 'KeMKT'
LEFT JOIN ADSTORAGE ADS5 ON
    SD.ABSUNIQUEID = ADS5.UNIQUEID
    AND ADS5.NAMENAME = 'PEB'
LEFT JOIN ADSTORAGE ADS6 ON
    SD.ABSUNIQUEID = ADS6.UNIQUEID
    AND ADS6.NAMENAME = 'LCNumber'
LEFT JOIN ADSTORAGE ADS7 ON
    SD.ABSUNIQUEID = ADS7.UNIQUEID
    AND ADS7.NAMENAME = 'TglPEB'
LEFT JOIN ADSTORAGE ADS8 ON
    SD.ABSUNIQUEID = ADS8.UNIQUEID
    AND ADS8.NAMENAME = 'NPE'
LEFT JOIN ADSTORAGE ADS9 ON
    SD.ABSUNIQUEID = ADS9.UNIQUEID
    AND ADS9.NAMENAME = 'AWB'
LEFT JOIN ADSTORAGE ADS10 ON
    SD.ABSUNIQUEID = ADS10.UNIQUEID
    AND ADS10.NAMENAME = 'TagihanInvoice'
LEFT JOIN ADSTORAGE ADS11 ON
    SD.ABSUNIQUEID = ADS11.UNIQUEID
    AND ADS11.NAMENAME = 'TagihanNilai'
LEFT JOIN ADSTORAGE ADS12 ON
    SD.ABSUNIQUEID = ADS12.UNIQUEID
    AND ADS12.NAMENAME = 'InvoiceUSD'
LEFT JOIN ADSTORAGE ADS13 ON
    SD.ABSUNIQUEID = ADS13.UNIQUEID
    AND ADS13.NAMENAME = 'Keterangan'
LEFT JOIN ADSTORAGE ADS14 ON
    SD.ABSUNIQUEID = ADS14.UNIQUEID
    AND ADS14.NAMENAME = 'KITE'
LEFT JOIN ADSTORAGE ADS15 ON
    SD.ABSUNIQUEID = ADS15.UNIQUEID
    AND ADS15.NAMENAME = 'SerahDok'
LEFT JOIN ADSTORAGE ADS16 ON
    SD.ABSUNIQUEID = ADS16.UNIQUEID
    AND ADS16.NAMENAME = 'TerimaDok'
LEFT JOIN ADSTORAGE ADS17 ON
    SD.ABSUNIQUEID = ADS17.UNIQUEID
    AND ADS17.NAMENAME = 'Note'
LEFT JOIN ADSTORAGE ADS18 ON
    SD.ABSUNIQUEID = ADS18.UNIQUEID
    AND ADS18.NAMENAME = 'StatusMeasurement'
LEFT JOIN ADSTORAGE ADS19 ON
    SD.ABSUNIQUEID = ADS19.UNIQUEID
    AND ADS19.NAMENAME = 'Port'
LEFT JOIN ADSTORAGE ADS20 ON
    SD.ABSUNIQUEID = ADS20.UNIQUEID
    AND ADS20.NAMENAME = 'shipping'
LEFT JOIN ADSTORAGE ADS21 ON
    SD.ABSUNIQUEID = ADS21.UNIQUEID
    AND ADS21.NAMENAME = 'ETA'
LEFT JOIN ITXVIEW_ADITIONALDATA_EXIM_CONTAINER EXIM_CONTAINER ON
    SD.ABSUNIQUEID = EXIM_CONTAINER.UNIQUEID
LEFT JOIN LEGALDOCUMENTTYPE LEGALDOCUMENTTYPE ON
    SD.LEGALDOCUMENTTYPECODE = LEGALDOCUMENTTYPE.CODE
WHERE
    SD.TEMPLATECODE IN(
        'EXD', 'GSE', 'CES', 'SFE', 'DRE', 'DSE'
    )
    --            AND SD.PROVISIONALCODE ='ESP2400083';


-- DB2ADMIN.ITXVIEW_LB source

CREATE VIEW ITXVIEW_LB AS
SELECT
    q2.QUALITYDOCPRODUCTIONORDERCODE,
    q.HEADERNUMBERID,
    trim(q2.CHARACTERISTICCODE) AS CHARACTERISTICCODE,
    q2.VALUEQUANTITY
FROM
    QUALITYDOCUMENT q
LEFT JOIN QUALITYDOCLINE q2 ON
    q2.QUALITYDOCUMENTHEADERNUMBERID = q.HEADERNUMBERID
    AND q2.QUALITYDOCPRODUCTIONORDERCODE = q.PRODUCTIONORDERCODE
WHERE
    CHARACTERISTICCODE IN (
        'LB1', 'LB2', 'LB3', 'LB4', 'LB5', 'LB6', 'LB7', 'LB8'
    );


-- DB2ADMIN.ITXVIEW_LEBAR source

CREATE VIEW ITXVIEW_LEBAR AS
SELECT
    ADSTORAGE.NAMENAME,
    ADSTORAGE.VALUEDECIMAL,
    PRODUCT.ITEMTYPECODE,
    PRODUCT.SUBCODE01,
    PRODUCT.SUBCODE02,
    PRODUCT.SUBCODE03,
    PRODUCT.SUBCODE04,
    PRODUCT.SUBCODE05,
    PRODUCT.SUBCODE06,
    PRODUCT.SUBCODE07,
    PRODUCT.SUBCODE08
FROM
    DB2ADMIN.ADSTORAGE ADSTORAGE
RIGHT OUTER JOIN DB2ADMIN.PRODUCT PRODUCT ON
    ADSTORAGE.UNIQUEID = PRODUCT.ABSUNIQUEID
WHERE
    NAMENAME = 'Width';


-- DB2ADMIN.ITXVIEW_LEBARGRAMASI_BUKTIMUTASI_KNT source

CREATE VIEW ITXVIEW_LEBARGRAMASI_BUKTIMUTASI_KNT AS
SELECT
    ADSTORAGE.VALUEDECIMAL,
    ELEMENTSINSPECTION.ELEMENTCODE,
    ELEMENTSINSPECTION.WIDTHNET
FROM
    ADSTORAGE ADSTORAGE
LEFT OUTER JOIN DB2ADMIN.ELEMENTS ELEMENTS ON
    ADSTORAGE.UNIQUEID = ELEMENTS.ABSUNIQUEID
LEFT OUTER JOIN DB2ADMIN.ELEMENTSINSPECTION ELEMENTSINSPECTION ON
    ELEMENTS.CODE = ELEMENTSINSPECTION.ELEMENTCODE
    AND ELEMENTS.ENTRYDOCUMENTNUMBER = ELEMENTSINSPECTION.DEMANDCODE;


-- DB2ADMIN.ITXVIEW_LEBAR_KNT source

CREATE VIEW ITXVIEW_LEBAR_KNT AS
SELECT
    ADSTORAGE.UNIQUEID,
    ADSTORAGE.FIELDNAME,
    ADSTORAGE.VALUEDECIMAL
FROM
    DB2ADMIN.ADSTORAGE ADSTORAGE
RIGHT OUTER JOIN DB2ADMIN.PRODUCT PRODUCT ON
    ADSTORAGE.UNIQUEID = PRODUCT.ABSUNIQUEID
WHERE
    ADSTORAGE.FIELDNAME = 'lebar';


-- DB2ADMIN.ITXVIEW_LEGALNAME_SHIPPINGMARK source

CREATE VIEW ITXVIEW_LEGALNAME_SHIPPINGMARK AS
   SELECT
    DISTINCT 
  s.CODE,
    BUSINESSPARTNER.COUNTRYCODE AS PARTNER_COUNTRYCODE,
    BUSINESSPARTNER.LEGALNAME1 AS NM_MESSRS,
    UPPER(BUSINESSPARTNER.ADDRESSLINE1) AS PARTNER_ADDRES1,
    UPPER(BUSINESSPARTNER.ADDRESSLINE2) AS PARTNER_ADDRES2,
    UPPER(BUSINESSPARTNER.ADDRESSLINE3) AS PARTNER_ADDRES3,
    UPPER(BUSINESSPARTNER.ADDRESSLINE4) AS PARTNER_ADDRES4,
    UPPER(BUSINESSPARTNER.TOWN) AS PARTNER_TOWN,
    BUSINESSPARTNER.ADDRESSPHONENUMBER AS PARTNER_PHONE,
    UPPER(ADDRESS.ADDRESSEE) AS NM_CONSIGNEE,
    UPPER(ADDRESS.ADDRESSLINE1) AS ADDRESSLINE1,
    UPPER(ADDRESS.ADDRESSLINE2)AS ADDRESSLINE2,
    UPPER(ADDRESS.ADDRESSLINE3)AS ADDRESSLINE3,
    UPPER(ADDRESS.ADDRESSLINE4) AS ADDRESSLINE4,
    UPPER(ADDRESS.TOWN) AS TOWN,
    UPPER(ADDRESS.DISTRICT) AS DISTRICT,
    ADDRESS.ADDRESSPHONENUMBER
FROM
    SALESORDER s
LEFT JOIN SALESORDERLINE s2 ON
    s.CODE = s2.SALESORDERCODE
    AND s.COMPANYCODE = s2.SALESORDERCOMPANYCODE
    AND s.COUNTERCODE = s2.SALESORDERCOUNTERCODE
LEFT JOIN ADDRESS ADDRESS ON
    s.DELIVERYPOINTUNIQUEID = ADDRESS.UNIQUEID
    AND s.DELIVERYPOINTCODE = ADDRESS.CODE
LEFT JOIN ORDERPARTNER ORDERPARTNER ON
    s.FNCORDPRNCUSTOMERSUPPLIERCODE = ORDERPARTNER.CUSTOMERSUPPLIERCODE
LEFT JOIN PAYMENTMETHOD PAYMENTMETHOD ON
    ORDERPARTNER.PAYMENTMETHODCODE = PAYMENTMETHOD.CODE
LEFT JOIN BUSINESSPARTNER BUSINESSPARTNER ON
    ORDERPARTNER.ORDERBUSINESSPARTNERNUMBERID = BUSINESSPARTNER.NUMBERID
    --   WHERE s.CODE ='EXP2400283';


-- DB2ADMIN.ITXVIEW_LOSSORDER source

CREATE VIEW ITXVIEW_LOSSORDER AS
SELECT
    SALESORDER.COMPANYCODE,
    SALESORDER.EXTERNALREFERENCE,
    SALESORDERLINE.SALESORDERCODE,
    SALESORDERLINE.ORDERLINE,
    SALESORDERLINE.ITEMTYPEAFICODE,
    SALESORDERLINE.SUBCODE01,
    SALESORDERLINE.SUBCODE02,
    SALESORDERLINE.SUBCODE03,
    SALESORDERLINE.SUBCODE04,
    SALESORDERLINE.SUBCODE05,
    SALESORDERLINE.SUBCODE06,
    SALESORDERLINE.SUBCODE07,
    SALESORDERLINE.SUBCODE08,
    SALESORDERLINE.SUBCODE09,
    SALESORDERLINE.SUBCODE10,
    SALESORDERLINE.USERPRIMARYUOMCODE,
    SALESORDERLINE.USERSECONDARYUOMCODE,
    SALESORDERLINE.BASEPRIMARYUOMCODE,
    ORDERPARTNERBRAND.LONGDESCRIPTION,
    BUSINESSPARTNER.LEGALNAME1
FROM
    ORDERPARTNER ORDERPARTNER
RIGHT OUTER JOIN DB2ADMIN.SALESORDER SALESORDER ON
    ORDERPARTNER.CUSTOMERSUPPLIERCODE = SALESORDER.ORDPRNCUSTOMERSUPPLIERCODE
LEFT OUTER JOIN DB2ADMIN.SALESORDERLINE SALESORDERLINE ON
    SALESORDER.COMPANYCODE = SALESORDERLINE.SALESORDERCOMPANYCODE
    AND SALESORDER.COUNTERCODE = SALESORDERLINE.SALESORDERCOUNTERCODE
    AND SALESORDER.CODE = SALESORDERLINE.SALESORDERCODE
LEFT OUTER JOIN DB2ADMIN.ORDERPARTNERBRAND ORDERPARTNERBRAND ON
    SALESORDER.FNCORDPRNCUSTOMERSUPPLIERCODE = ORDERPARTNERBRAND.ORDPRNCUSTOMERSUPPLIERCODE
LEFT OUTER JOIN DB2ADMIN.BUSINESSPARTNER BUSINESSPARTNER ON
    ORDERPARTNER.ORDERBUSINESSPARTNERNUMBERID = BUSINESSPARTNER.NUMBERID
GROUP BY
    SALESORDER.COMPANYCODE,
    SALESORDER.EXTERNALREFERENCE,
    SALESORDERLINE.SALESORDERCODE,
    SALESORDERLINE.ORDERLINE,
    SALESORDERLINE.ITEMTYPEAFICODE,
    SALESORDERLINE.SUBCODE01,
    SALESORDERLINE.SUBCODE02,
    SALESORDERLINE.SUBCODE03,
    SALESORDERLINE.SUBCODE04,
    SALESORDERLINE.SUBCODE05,
    SALESORDERLINE.SUBCODE06,
    SALESORDERLINE.SUBCODE07,
    SALESORDERLINE.SUBCODE08,
    SALESORDERLINE.SUBCODE09,
    SALESORDERLINE.SUBCODE10,
    SALESORDERLINE.USERPRIMARYUOMCODE,
    SALESORDERLINE.USERSECONDARYUOMCODE,
    SALESORDERLINE.BASEPRIMARYUOMCODE,
    ORDERPARTNERBRAND.LONGDESCRIPTION,
    BUSINESSPARTNER.LEGALNAME1;


-- DB2ADMIN.ITXVIEW_LR source

CREATE VIEW ITXVIEW_LR AS
SELECT
    VIEWPRODUCTIONRESERVATION.PRODUCTIONORDERCODE,
    VIEWPRODUCTIONRESERVATION.PICKUPQUANTITY
FROM
    DB2ADMIN.VIEWPRODUCTIONRESERVATION VIEWPRODUCTIONRESERVATION
LEFT OUTER JOIN DB2ADMIN.VIEWPRODUCTIONDEMANDSTEP VIEWPRODUCTIONDEMANDSTEP ON
    VIEWPRODUCTIONRESERVATION.PRODUCTIONORDERCODE = VIEWPRODUCTIONDEMANDSTEP.PRODUCTIONORDERCODE
    AND VIEWPRODUCTIONRESERVATION.PRODRESERVATIONLINKGROUPCODE = VIEWPRODUCTIONDEMANDSTEP.OPERATIONCODE
WHERE
    VIEWPRODUCTIONRESERVATION.ITEMTYPEAFICODE = 'RFD';


-- DB2ADMIN.ITXVIEW_MACHINE source

CREATE VIEW ITXVIEW_MACHINE AS
SELECT
    p.PRODUCTIONORDERCODE,
    p.PROGRESSTEMPLATECODE,
    p.OPERATIONCODE,
    p.MACHINECODE,
    p.OPERATORCODE,
    r2.LONGDESCRIPTION AS NAMA_MESIN,
    r.LONGDESCRIPTION AS NAMA_OPERATOR,
    r.BATHVOLUME,
    p.PROGRESSSTARTPROCESSDATE,
    p.PROGRESSSTARTPROCESSTIME,
    p.PROGRESSENDDATE,
    p.PROGRESSENDTIME
FROM
    PRODUCTIONPROGRESS p
LEFT JOIN RESOURCES r ON
    p.OPERATORCODE = r.CODE
LEFT JOIN RESOURCES r2 ON
    p.MACHINECODE = r2.CODE
WHERE
    p.OPERATIONCODE IN (
        'DYE1', 'DYE2', 'DYE3', 'DYE4', 'DYE5', 'DYE6', 'DYE7', 'DYE8'
    );


-- DB2ADMIN.ITXVIEW_MAPPING_KK source

CREATE VIEW ITXVIEW_MAPPING_KK AS
SELECT
    TRIM(p2.PRODUCTIONORDERCODE) AS PRODUCTIONORDERCODE,
    TRIM(p2.PRODUCTIONDEMANDCODE) AS PRODUCTIONDEMANDCODE,
    RIGHT(a.VALUESTRING, 8) AS ORIGINALPDCODE
FROM
    PRODUCTIONDEMAND p
LEFT JOIN (
        SELECT
            DISTINCT PRODUCTIONDEMANDCODE,
            PRODUCTIONORDERCODE
        FROM
            PRODUCTIONDEMANDSTEP PRODUCTIONDEMANDSTEP
    ) p2 ON
      p2.PRODUCTIONDEMANDCODE = p.CODE
LEFT JOIN ADSTORAGE a ON
    a.UNIQUEID = p.ABSUNIQUEID
    AND a.FIELDNAME = 'OriginalPDCode';


-- DB2ADMIN.ITXVIEW_MEMOPENTINGPPC source

CREATE VIEW ITXVIEW_MEMOPENTINGPPC AS
SELECT
    DISTINCT
	i.ITEMTYPEAFICODE,
    i.ITEMTYPEAFICODE_YND,
    i.CREATIONDATETIME_PRODORDER AS ORDERDATE,
    ip.LANGGANAN || '|' || 
    CASE
        WHEN ip.BUYER IS NULL THEN 'Data tidak ditemukan, silahkan periksa kembali'
        ELSE ip.BUYER
    END AS PELANGGAN,
    ip.ORDPRNCUSTOMERSUPPLIERCODE,
    ip.LANGGANAN AS LANGGANAN,
    ip.BUYER AS BUYER,
    i.PROJECTCODE AS NO_ORDER,
    ik.EXTERNALREFERENCE AS NO_PO,
    TRIM(i.SUBCODE02) AS SUBCODE02,
    TRIM(i.SUBCODE03) AS SUBCODE03,
    TRIM(i.SUBCODE01) || '-' || TRIM(i.SUBCODE02) || '-' || TRIM(i.SUBCODE03) || '-' || TRIM(i.SUBCODE04) || '-' ||
    TRIM(i.SUBCODE05) || '-' || TRIM(i.SUBCODE06) || '-' || TRIM(i.SUBCODE07) || '-' || TRIM(i.SUBCODE08) AS KETERANGAN_PRODUCT,
    i.ITEMDESCRIPTION AS JENIS_KAIN,
    i.WARNA AS WARNA,
    i.SUBCODE05 AS NO_WARNA,
    i.DELIVERYDATE AS DELIVERY,
    p.USEDUSERPRIMARYQUANTITY AS QTY_BAGIKAIN,
    p.USEDUSERSECONDARYQUANTITY AS QTY_BAGIKAIN_YD_MTR,
    in2.USERPRIMARYQUANTITY AS NETTO,
    CASE
        WHEN DAYS(now()) - DAYS(Timestamp_Format(i.DELIVERYDATE, 'YYYY-MM-DD')) < 0 THEN 0
        ELSE DAYS(now()) - DAYS(Timestamp_Format(i.DELIVERYDATE, 'YYYY-MM-DD'))
    END AS DELAY,
    i.PRODUCTIONORDERCODE AS NO_KK,
    i.DEAMAND AS DEMAND,
    i.LOT,
    i.ORDERLINE,
    TRIM(i.PROGRESSSTATUS) AS PROGRESSSTATUS,
    CASE
        WHEN u.LONGDESCRIPTION IS NULL THEN ''
        ELSE u.LONGDESCRIPTION
    END || CASE
        WHEN a4.VALUESTRING IS NULL THEN ''
        ELSE a4.VALUESTRING
    END AS KETERANGAN,
    i.ABSUNIQUEID_DEMAND,
    i.REQUIREDDUEDATE,
    a2.VALUESTRING AS OriginalPDCode,
    a3.VALUESTRING AS SplittedFrom,
    i.CREATIONDATETIME_SALESORDER,
    i.PROGRESSSTATUS_DEMAND,
    i.EXTERNALITEM AS NO_ITEM
FROM
    --    ITXVIEWKK i
    ITXVIEWKK_UNTUK_MEMOPENTING_PPC i
LEFT JOIN (
        SELECT
            ik.CODE,
            ik.EXTERNALREFERENCE,
            ik.PROJECTCODE,
            ik.ORIGDLVSALORDERLINEORDERLINE
        FROM
            ITXVIEW_KGBRUTO ik
    ) ik ON
    ik.PROJECTCODE = i.PROJECTCODE
    AND ik.ORIGDLVSALORDERLINEORDERLINE = i.ORIGDLVSALORDERLINEORDERLINE
    AND ik.CODE = i.DEAMAND
LEFT JOIN (
        SELECT
            p.ORDERCODE,
            p.USEDUSERPRIMARYQUANTITY,
            p.USEDUSERSECONDARYQUANTITY
        FROM
            ITXVIEW_RESERVATION_KK p
    ) p ON
    p.ORDERCODE = i.PRODUCTIONDEMANDCODE
LEFT JOIN (
        SELECT
            a.UNIQUEID,
            a.FIELDNAME,
            a.VALUESTRING
        FROM
            ADSTORAGE a
    ) a ON
    a.UNIQUEID = i.ABSUNIQUEID_DEMAND
    AND a.FIELDNAME = 'DefectTypeCode'
LEFT JOIN (
        SELECT
            a2.UNIQUEID,
            a2.FIELDNAME,
            a2.VALUESTRING
        FROM
            ADSTORAGE a2
    ) a2 ON
    a2.UNIQUEID = i.ABSUNIQUEID_DEMAND
    AND a2.FIELDNAME = 'OriginalPDCode'
LEFT JOIN (
        SELECT
            a3.UNIQUEID,
            a3.FIELDNAME,
            a3.VALUESTRING
        FROM
            ADSTORAGE a3
    ) a3 ON
    a3.UNIQUEID = i.ABSUNIQUEID_DEMAND
    AND a3.FIELDNAME = 'SplittedFrom'
LEFT JOIN (
        SELECT
            u.CODE,
            u.USERGENERICGROUPTYPECODE,
            u.LONGDESCRIPTION
        FROM
            USERGENERICGROUP u
    ) u ON
    u.CODE = a.VALUESTRING
    AND u.USERGENERICGROUPTYPECODE = '006'
LEFT JOIN (
        SELECT
            a4.UNIQUEID,
            a4.FIELDNAME,
            a4.VALUESTRING
        FROM
            ADSTORAGE a4
    ) a4 ON
    a4.UNIQUEID = i.ABSUNIQUEID_DEMAND
    AND a4.FIELDNAME = 'DefectNote'
LEFT JOIN (
        SELECT
            in2.USERPRIMARYQUANTITY,
            in2.CODE,
            in2.SALESORDERLINESALESORDERCODE
        FROM
            ITXVIEW_NETTO in2
    ) in2 ON
    in2.CODE = i.DEAMAND
    AND in2.SALESORDERLINESALESORDERCODE = i.PROJECTCODE
LEFT JOIN (
        SELECT
            ip.ORDPRNCUSTOMERSUPPLIERCODE AS ORDPRNCUSTOMERSUPPLIERCODE2,
            ip.CODE,
            ip.ORDPRNCUSTOMERSUPPLIERCODE,
            ip.LANGGANAN,
            ip.BUYER
        FROM
            ITXVIEW_PELANGGAN ip
    ) ip ON
    ip.ORDPRNCUSTOMERSUPPLIERCODE = i.ORDPRNCUSTOMERSUPPLIERCODE
    AND ip.CODE = i.BONORDER
WHERE
    NOT i.ITEMTYPEAFICODE = 'KGF'
    --	(p.USEDUSERPRIMARYQUANTITY IS NOT NULL OR NOT p.USEDUSERPRIMARYQUANTITY = 0) 
    --	CASE
    --        WHEN i.ITEMTYPEAFICODE = 'KFF' THEN (p.USEDUSERPRIMARYQUANTITY IS NOT NULL OR NOT p.USEDUSERPRIMARYQUANTITY = 0)
    --        WHEN i.ITEMTYPEAFICODE = 'FKF' THEN i.ITEMTYPEAFICODE = 'FKF'
    --    END
    --    AND 
    --    i.PRODUCTIONORDERCODE = '00118771'
    --	AND
    --	TRIM(i.SUBCODE01) || '-' || TRIM(i.SUBCODE02) || '-' || TRIM(i.SUBCODE03) || '-' || TRIM(i.SUBCODE04) || '-' ||
    --    TRIM(i.SUBCODE05) || '-' || TRIM(i.SUBCODE06) || '-' || TRIM(i.SUBCODE07) || '-' || TRIM(i.SUBCODE08) = 'C-SJY-21046-L01-230577L-F106----'
    --    i4.WARNA = '15-4101 TCX'
    --	AND ik.EXTERNALREFERENCE = '230412-SS24-FI-00413'
    --	AND i.SUBCODE02 = 'DKI' AND i.SUBCODE03 = '18019'
    --	AND v.OPERATIONCODE = 'DYE2'
    --	i.DELIVERYDATE BETWEEN '2024-01-01' AND '2024-12-19';


-- DB2ADMIN.ITXVIEW_MEMOPENTINGPPC_WITHOPERATIONS source

CREATE VIEW ITXVIEW_MEMOPENTINGPPC_WITHOPERATIONS AS
SELECT
    DISTINCT v.OPERATIONCODE,
    o.OPERATIONGROUPCODE,
    i.ITEMTYPEAFICODE,
    i.ITEMTYPEAFICODE_YND,
    p2.CREATIONDATETIME AS ORDERDATE,
    TRIM(ip.LANGGANAN) || '|' || TRIM(ip.BUYER) AS PELANGGAN,
    i.PROJECTCODE AS NO_ORDER,
    ik.EXTERNALREFERENCE AS NO_PO,
    TRIM(i.SUBCODE01) || '-' || TRIM(i.SUBCODE02) || '-' || TRIM(i.SUBCODE03) || '-' || TRIM(i.SUBCODE04) || '-' || TRIM(i.SUBCODE05) || '-' || TRIM(i.SUBCODE06) || '-' || TRIM(i.SUBCODE07) || '-' || TRIM(i.SUBCODE08) AS KETERANGAN_PRODUCT,
    i4.WARNA AS WARNA,
    i.SUBCODE05 AS NO_WARNA,
    i.DELIVERYDATE AS DELIVERY,
    p.USEDUSERPRIMARYQUANTITY AS QTY_BAGIKAIN,
    in2.USERPRIMARYQUANTITY AS NETTO,
    CASE
        WHEN DAYS(now()) - DAYS(Timestamp_Format(i.DELIVERYDATE, 'YYYY-MM-DD')) < 0 THEN 0
        ELSE DAYS(now()) - DAYS(Timestamp_Format(i.DELIVERYDATE, 'YYYY-MM-DD'))
    END AS DELAY,
    i.PRODUCTIONORDERCODE AS NO_KK,
    i.DEAMAND AS DEMAND,
    i.ORDERLINE,
    TRIM(i.PROGRESSSTATUS) AS PROGRESSSTATUS,
    CASE
        WHEN u.LONGDESCRIPTION IS NULL THEN ''
        ELSE u.LONGDESCRIPTION
    END || CASE
        WHEN a4.VALUESTRING IS NULL THEN ''
        ELSE a4.VALUESTRING
    END AS KETERANGAN,
    i.ABSUNIQUEID_DEMAND,
    i.REQUIREDDUEDATE,
    a2.VALUESTRING AS OriginalPDCode,
    a3.VALUESTRING AS SplittedFrom,
    i.CREATIONDATETIME_SALESORDER,
    i.PROGRESSSTATUS_DEMAND
FROM
    ITXVIEWKK i
LEFT JOIN ITXVIEW_KGBRUTO ik ON
    ik.PROJECTCODE = i.PROJECTCODE
    AND ik.ORIGDLVSALORDERLINEORDERLINE = i.ORIGDLVSALORDERLINEORDERLINE
    AND ik.CODE = i.DEAMAND
LEFT JOIN ITXVIEW_RESERVATION_KK p ON
    p.ORDERCODE = i.PRODUCTIONDEMANDCODE
LEFT JOIN ADSTORAGE a ON
    a.UNIQUEID = i.ABSUNIQUEID_DEMAND
    AND a.FIELDNAME = 'DefectTypeCode'
LEFT JOIN ADSTORAGE a2 ON
    a2.UNIQUEID = i.ABSUNIQUEID_DEMAND
    AND a2.FIELDNAME = 'OriginalPDCode'
LEFT JOIN ADSTORAGE a3 ON
    a3.UNIQUEID = i.ABSUNIQUEID_DEMAND
    AND a3.FIELDNAME = 'SplittedFrom'
LEFT JOIN USERGENERICGROUP u ON
    u.CODE = a.VALUESTRING
    AND u.USERGENERICGROUPTYPECODE = '006'
LEFT JOIN ADSTORAGE a4 ON
    a4.UNIQUEID = i.ABSUNIQUEID_DEMAND
    AND a4.FIELDNAME = 'DefectNote'
LEFT JOIN ITXVIEWCOLOR i4 ON
    i4.ITEMTYPECODE = i.ITEMTYPEAFICODE
    AND i4.SUBCODE01 = i.SUBCODE01
    AND i4.SUBCODE02 = i.SUBCODE02
    AND i4.SUBCODE03 = i.SUBCODE03
    AND i4.SUBCODE04 = i.SUBCODE04
    AND i4.SUBCODE05 = i.SUBCODE05
    AND i4.SUBCODE06 = i.SUBCODE06
    AND i4.SUBCODE07 = i.SUBCODE07
    AND i4.SUBCODE08 = i.SUBCODE08
    AND i4.SUBCODE09 = i.SUBCODE09
    AND i4.SUBCODE10 = i.SUBCODE10
LEFT JOIN ITXVIEW_NETTO in2 ON
    in2.CODE = i.DEAMAND
    AND in2.SALESORDERLINESALESORDERCODE = i.PROJECTCODE
LEFT JOIN ITXVIEW_PELANGGAN ip ON
    ip.ORDPRNCUSTOMERSUPPLIERCODE = i.ORDPRNCUSTOMERSUPPLIERCODE
    AND ip.CODE = i.BONORDER
LEFT JOIN PRODUCTIONORDER p2 ON
    p2.CODE = i.PRODUCTIONORDERCODE
LEFT JOIN VIEWPRODUCTIONDEMANDSTEP v ON
    v.PRODUCTIONORDERCODE = i.PRODUCTIONORDERCODE
    AND NOT i.PROGRESSSTATUS = 6
LEFT JOIN OPERATION o ON
    o.CODE = v.OPERATIONCODE
WHERE
    CASE
        WHEN i.ITEMTYPEAFICODE = 'KFF' THEN (
            p.USEDUSERPRIMARYQUANTITY IS NOT NULL
                OR NOT p.USEDUSERPRIMARYQUANTITY = 0
        )
        WHEN i.ITEMTYPEAFICODE = 'FKF' THEN i.ITEMTYPEAFICODE = 'FKF'
    END;


-- DB2ADMIN.ITXVIEW_MRNDETAIL_TERIMA source

CREATE VIEW ITXVIEW_MRNDETAIL_TERIMA AS
SELECT
    TEMPLATECODE,
    ORDERCODE,
    STOCK_ORDRELINE,
    --    TRANSACTIONNUMBER,
    --    CREATIONDATETIME,
    DECOSUBCODE01,
    DECOSUBCODE02,
    DECOSUBCODE03,
    qty_order,
    sum(QTY_TERIMA) AS QTY_TERIMA,
    sum(qty_order_secon) AS qty_order_secon,
    qty_order - sum(QTY_TERIMA) AS QTY_SISA
FROM
    (
        SELECT
            S.TEMPLATECODE,
            S.ORDERCODE,
            S.ORDERLINE AS STOCK_ORDRELINE,
            S.TRANSACTIONNUMBER,
            S.CREATIONDATETIME,
            S.DECOSUBCODE01,
            S.DECOSUBCODE02,
            S.DECOSUBCODE03,
            sum(P.USERPRIMARYQUANTITY) AS qty_order,
            sum(S.USERPRIMARYQUANTITY) AS QTY_TERIMA,
            sum(S.USERSECONDARYQUANTITY) AS qty_order_secon
        FROM
            STOCKTRANSACTION S
        LEFT JOIN PURCHASEORDERLINE P ON
            P.PURCHASEORDERCODE = S.ORDERCODE
            AND P.ORDERLINE = S.ORDERLINE
        WHERE
            (
                TEMPLATECODE = 'QCT'
            )
        GROUP BY
            S.TEMPLATECODE,
            S.ORDERCODE,
            S.ORDERLINE,
            S.TRANSACTIONNUMBER,
            S.CREATIONDATETIME,
            S.DECOSUBCODE01,
            S.DECOSUBCODE02,
            S.DECOSUBCODE03
    )
GROUP BY
    TEMPLATECODE,
    ORDERCODE,
    STOCK_ORDRELINE,
    --    TRANSACTIONNUMBER,
    --    CREATIONDATETIME,
    DECOSUBCODE01,
    DECOSUBCODE02,
    DECOSUBCODE03,
    qty_order;


-- DB2ADMIN.ITXVIEW_MRNHEADER_NOINVOICE source

CREATE VIEW ITXVIEW_MRNHEADER_NOINVOICE AS
SELECT
    MRNHEADER.PURCHASEORDERCODE ,
    MRNHEADER.CHALLANNO AS no_sj,
    MRNHEADER.INVOICENO AS no_invoice,
    LISTAGG(
        MRNHEADER.INVOICEDATE,
        '|'
    ) WITHIN GROUP(
    ORDER BY
        MRNHEADER.INVOICEDATE DESC
    ) AS tgl_invoice,
    MRNHEADER.BASICVALUE AS nilai_invoice,
    MRNHEADER.GROSSVALUECC AS nilai_invoiceCC,
    MRNHEADER.CODE AS no_MRN,
    LISTAGG(
        MRNHEADER.CHALLANDATE,
        '|'
    ) WITHIN GROUP(
    ORDER BY
        MRNHEADER.CHALLANDATE DESC
    ) AS TGL_SJ
FROM
    MRNHEADER MRNHEADER
GROUP BY
    MRNHEADER.PURCHASEORDERCODE,
    MRNHEADER.CHALLANNO,
    MRNHEADER.INVOICENO,
    MRNHEADER.BASICVALUE,
    MRNHEADER.GROSSVALUECC,
    MRNHEADER.CODE;


-- DB2ADMIN.ITXVIEW_NETTO source

CREATE VIEW ITXVIEW_NETTO AS
SELECT
    p.CODE,
    s.SALESORDERLINESALESORDERCODE,
    --    s2.ORDERLINE,
    --    p.ORIGDLVSALORDERLINEORDERLINE,
    s2.PRICEUNITOFMEASURECODE,
    s2.USERPRIMARYQUANTITY,
    s2.USERPRIMARYUOMCODE,
    s2.USERSECONDARYQUANTITY,
    s2.USERSECONDARYUOMCODE,
    s2.BASESECONDARYQUANTITY,
    s2.BASESECONDARYUOMCODE,
    p2.SECONDARYUNSTEADYCVSFACTOR
FROM
    PRODUCTIONDEMAND p
LEFT JOIN SALESORDERDELIVERY s ON
    s.SALORDLINESALORDERCOMPANYCODE = p.COMPANYCODE
    AND s.SALORDLINESALORDERCOUNTERCODE = p.DLVSALORDLINESALORDCNTCODE
    AND s.SALESORDERLINESALESORDERCODE = p.DLVSALORDERLINESALESORDERCODE
    AND s.SALESORDERLINEORDERLINE = p.DLVSALESORDERLINEORDERLINE
    AND s.SALESORDERLINEORDERSUBLINE = p.DLVSALESORDERLINEORDERSUBLINE
    AND s.SALORDLINECOMPONENTORDERLINE = p.DLVSALORDLINECMPORDERLINE
    AND s.DELIVERYLINE = p.DELIVERYDELIVERYLINE
LEFT JOIN SALESORDERLINE s2 ON
    s2.SALESORDERCODE = s.SALESORDERLINESALESORDERCODE
    AND s2.ORDERLINE = s.SALESORDERLINEORDERLINE
LEFT JOIN PRODUCT p2 ON
    p2.SUBCODE01 = s.SUBCODE01
    AND p2.SUBCODE02 = s.SUBCODE02
    AND p2.SUBCODE03 = s.SUBCODE03
    AND p2.SUBCODE04 = s.SUBCODE04
    AND p2.SUBCODE05 = s.SUBCODE05
    AND p2.SUBCODE06 = s.SUBCODE06
    AND p2.SUBCODE07 = s.SUBCODE07
    AND p2.SUBCODE08 = s.SUBCODE08
    AND p2.SUBCODE09 = s.SUBCODE09
    AND p2.SUBCODE10 = s.SUBCODE10
    --WHERE
    --	p.CODE = '00274453';


-- DB2ADMIN.ITXVIEW_NETTO_1 source

CREATE VIEW ITXVIEW_NETTO_1 AS
SELECT
    PROJECTCODE,
    ITEMTYPEAFICODE,
    NAMENAME,
    VALUESTRING,
    CASE
        WHEN ITEMTYPEAFICODE IN (
            'KFF', 'KGF'
        ) THEN
    	SUM(USERPRIMARYQUANTITY)
        ELSE 0
    END AS NETTO,   
    CASE
        WHEN ITEMTYPEAFICODE IN (
            'FKF', 'FKG'
        ) THEN
    	SUM(USERPRIMARYQUANTITY)
        ELSE 0
    END AS NETTO_FK, 
    USERPRIMARYUOMCODE
FROM
    (
        SELECT
            s.SALESORDERLINESALESORDERCODE AS PROJECTCODE,
            s.ITEMTYPEAFICODE AS ITEMTYPEAFICODE,
            a.NAMENAME AS NAMENAME,
            a.VALUESTRING AS VALUESTRING,
            s2.USERPRIMARYQUANTITY AS USERPRIMARYQUANTITY,
            s2.USERPRIMARYUOMCODE AS USERPRIMARYUOMCODE
        FROM
            SALESORDERDELIVERY s
        LEFT JOIN SALESORDERLINE s2 ON
            s2.SALESORDERCODE = s.SALESORDERLINESALESORDERCODE
            AND s2.ORDERLINE = s.SALESORDERLINEORDERLINE
        LEFT JOIN ADSTORAGE a ON
            a.UNIQUEID = s.ABSUNIQUEID
            AND a.NAMENAME = 'SampleComments5'
        WHERE
            s2.ITEMTYPEAFICODE IN (
                'FKF', 'FKG', 'KFF', 'KGF'
            )
            --    AND s.SALESORDERLINESALESORDERCODE LIKE '%EXP23%'
            AND a.VALUESTRING IS NULL
        GROUP BY
            s.SALESORDERLINESALESORDERCODE,
            s.ITEMTYPEAFICODE,
            a.NAMENAME,
            a.VALUESTRING,
            s2.USERPRIMARYQUANTITY,
            s2.USERPRIMARYUOMCODE
    )
GROUP BY
    PROJECTCODE,
    ITEMTYPEAFICODE,
    NAMENAME,
    VALUESTRING,
    USERPRIMARYUOMCODE;


-- DB2ADMIN.ITXVIEW_NETTO_SALINAN source

CREATE VIEW ITXVIEW_NETTO_SALINAN AS
SELECT
    p.CODE,
    s.SALESORDERLINESALESORDERCODE,
    s2.PRICEUNITOFMEASURECODE,
    p.USERPRIMARYQUANTITY,
    s2.USERPRIMARYUOMCODE,
    p.USERSECONDARYQUANTITY,
    s2.USERSECONDARYUOMCODE,
    p.BASESECONDARYQUANTITY,
    s2.BASESECONDARYUOMCODE,
    p2.SECONDARYUNSTEADYCVSFACTOR
FROM
    PRODUCTIONDEMAND p
LEFT JOIN SALESORDERDELIVERY s ON
    s.SALORDLINESALORDERCOMPANYCODE = p.COMPANYCODE
    AND s.SALORDLINESALORDERCOUNTERCODE = p.DLVSALORDLINESALORDCNTCODE
    AND s.SALESORDERLINESALESORDERCODE = p.DLVSALORDERLINESALESORDERCODE
    AND s.SALESORDERLINEORDERLINE = p.DLVSALESORDERLINEORDERLINE
    AND s.SALESORDERLINEORDERSUBLINE = p.DLVSALESORDERLINEORDERSUBLINE
    AND s.SALORDLINECOMPONENTORDERLINE = p.DLVSALORDLINECMPORDERLINE
    AND s.DELIVERYLINE = p.DELIVERYDELIVERYLINE
LEFT JOIN SALESORDERLINE s2 ON
    s2.PROJECTCODE = s.SALESORDERLINESALESORDERCODE
    AND s2.ORDERLINE = s.SALESORDERLINEORDERLINE
LEFT JOIN PRODUCT p2 ON
    p2.SUBCODE01 = s.SUBCODE01
    AND p2.SUBCODE02 = s.SUBCODE02
    AND p2.SUBCODE03 = s.SUBCODE03
    AND p2.SUBCODE04 = s.SUBCODE04
    AND p2.SUBCODE05 = s.SUBCODE05
    AND p2.SUBCODE06 = s.SUBCODE06
    AND p2.SUBCODE07 = s.SUBCODE07
    AND p2.SUBCODE08 = s.SUBCODE08
    AND p2.SUBCODE09 = s.SUBCODE09
    AND p2.SUBCODE10 = s.SUBCODE10;


-- DB2ADMIN.ITXVIEW_NOITEM source

CREATE VIEW ITXVIEW_NOITEM AS
SELECT
    s.CODE,
    s.ORDPRNCUSTOMERSUPPLIERCODE,
    s2.ORDERLINE,
    s2.ITEMTYPEAFICODE,
    s2.SUBCODE01,
    s2.SUBCODE02,
    s2.SUBCODE03,
    s2.SUBCODE04,
    s2.SUBCODE05,
    s2.SUBCODE06,
    s2.SUBCODE07,
    s2.SUBCODE08,
    s2.SUBCODE09,
    s2.SUBCODE10,
    s2.EXTERNALITEM
FROM
    SALESORDER s
LEFT JOIN SALESORDERLINE s2 ON
    s2.SALESORDERCODE = s.CODE
    AND s2.SALESORDERCOUNTERCODE = s.COUNTERCODE;


-- DB2ADMIN.ITXVIEW_NOTEBUKTIMUTASI_KNT source

CREATE VIEW ITXVIEW_NOTEBUKTIMUTASI_KNT AS
SELECT
    ADSTORAGE.FIELDNAME,
    ADSTORAGE.VALUESTRING,
    ADSTORAGE.UNIQUEID,
    ELEMENTS.CODE
FROM
    DB2ADMIN.ELEMENTS ELEMENTS
LEFT OUTER JOIN DB2ADMIN.ADSTORAGE ADSTORAGE ON
    ELEMENTS.ABSUNIQUEID = ADSTORAGE.UNIQUEID
WHERE
    ADSTORAGE.NAMENAME = 'Note';


-- DB2ADMIN.ITXVIEW_NOTE_BENANG source

CREATE VIEW ITXVIEW_NOTE_BENANG AS
SELECT
    s.*,
    a.VALUESTRING AS SP,
    a1.VALUESTRING AS NT,
    a2.VALUEDATE AS TG,
    ft.SUMMARIZEDDESCRIPTION
FROM
    STOCKTRANSACTION s
LEFT OUTER JOIN ADSTORAGE a ON
    s.ABSUNIQUEID = a.UNIQUEID
    AND a.NAMENAME = 'CodeSupp'
LEFT OUTER JOIN ADSTORAGE a1 ON
    s.ABSUNIQUEID = a1.UNIQUEID
    AND a1.NAMENAME = 'NoteGYR'
LEFT OUTER JOIN ADSTORAGE a2 ON
    s.ABSUNIQUEID = a2.UNIQUEID
    AND a2.NAMENAME = 'ProdDate'
LEFT OUTER JOIN DB2ADMIN.FULLITEMKEYDECODER ft ON
    s.FULLITEMIDENTIFIER = ft.IDENTIFIER;


-- DB2ADMIN.ITXVIEW_NO_ORDER_EXIM source

CREATE VIEW ITXVIEW_NO_ORDER_EXIM AS
SELECT
    ITXVIEW_SURATJALAN_EXIM.PROVISIONALCODE,
    TRIM(ITXVIEW_SURATJALAN_EXIM.PROJECTCODE) AS NO_ORDER
FROM
    ITXVIEW_SURATJALAN_EXIM ITXVIEW_SURATJALAN_EXIM
GROUP BY
    ITXVIEW_SURATJALAN_EXIM.PROVISIONALCODE,
    ITXVIEW_SURATJALAN_EXIM.PROJECTCODE;


-- DB2ADMIN.ITXVIEW_NO_PROJECTS_EXIM source

CREATE VIEW ITXVIEW_NO_PROJECTS_EXIM AS
SELECT
    ITXVIEW_SURATJALAN_EXIM2A.PROVISIONALCODE,
    LISTAGG(
        DISTINCT(
            TRIM(ITXVIEW_SURATJALAN_EXIM2A.PROJECTCODE)
        ),
        ', '
    ) AS PROJECT
FROM
    ITXVIEW_SURATJALAN_EXIM2A ITXVIEW_SURATJALAN_EXIM2A
GROUP BY
    ITXVIEW_SURATJALAN_EXIM2A.PROVISIONALCODE;


-- DB2ADMIN.ITXVIEW_NO_PR_PURCHASE source

--DROP VIEW ITXVIEW_NO_PR_PURCHASE
CREATE VIEW ITXVIEW_NO_PR_PURCHASE AS
SELECT
    REPLENISHMENTREQUISITION.LINEPURCHASEORDERCODE ,
    LISTAGG(
        DISTINCT(
            TRIM(REPLENISHMENTREQUISITION.HEADERCODE)
        ),
        ', '
    ) AS HEADER_CODE,
    LISTAGG(
        DISTINCT(
            TRIM(REPLENISHMENTREQUISITION.RFQDETAILRFQHEADERCODE)
        ),
        ', '
    ) AS RFQHEADER_CODE
FROM
    REPLENISHMENTREQUISITION REPLENISHMENTREQUISITION
WHERE
    LINEPURCHASEORDERCODE <> ''
GROUP BY
    REPLENISHMENTREQUISITION.LINEPURCHASEORDERCODE;


-- DB2ADMIN.ITXVIEW_OPENTICKET_MTC source

CREATE VIEW ITXVIEW_OPENTICKET_MTC AS
SELECT
    p.CODE,
    p.CREATIONUSER,
    p.CREATIONDATETIME,
    p.PMBOMCODE,
    p.DEPARTMENTCODE,
    d.LONGDESCRIPTION AS DEPTNAME,
    p.RESPONSIBLEOFSCHEDULINGUSERID,
    p.DEFAULTASSIGNEDTOUSERID,
    CASE
        WHEN p.PRIORITYLEVEL = '0' THEN 'Very High'
        WHEN p.PRIORITYLEVEL = '1' THEN 'High'
        WHEN p.PRIORITYLEVEL = '2' THEN 'Medium'
        WHEN p.PRIORITYLEVEL = '3' THEN 'Normal'
        WHEN p.PRIORITYLEVEL = '4' THEN 'Low'
    END AS PRIORITYLEVEL,
    CASE
        WHEN p.STATUS = '1' THEN 'Open'
        WHEN p.STATUS = '2' THEN 'In Progress'
        WHEN p.STATUS = '3' THEN 'Closed'
        WHEN p.STATUS = '4' THEN 'Suspended'
    END AS STATUS,
    p.SYMPTOM AS PERMASALAHAN,
    p2.REMARKS AS PERBAIKAN
FROM
    PMBREAKDOWNENTRY p
LEFT JOIN PMWORKORDER p2 ON
    p2.PMBREAKDOWNENTRYCODE = p.CODE
LEFT JOIN DEPARTMENT d ON
    d.CODE = p.DEPARTMENTCODE
    --WHERE
    --	TRIM(p.DEPARTMENTCODE) = 'D005';


-- DB2ADMIN.ITXVIEW_ORDER_INVOICE source

CREATE VIEW ITXVIEW_ORDER_INVOICE AS
SELECT
    ITXVIEW_HEADERINVOICE.NO_INVOICE,
    ITXVIEW_HEADERINVOICE.COMPANYCODE,
    ITXVIEW_HEADERINVOICE.DIVISIONCODE,
    LISTAGG(
        DISTINCT(
            TRIM(ITXVIEW_HEADERINVOICE.BON_ORDER)
        ),
        ', '
    ) AS BON_ORDER
FROM
    ITXVIEW_HEADERINVOICE ITXVIEW_HEADERINVOICE
GROUP BY
    ITXVIEW_HEADERINVOICE.NO_INVOICE,
    ITXVIEW_HEADERINVOICE.COMPANYCODE,
    ITXVIEW_HEADERINVOICE.DIVISIONCODE;


-- DB2ADMIN.ITXVIEW_PACKINGLIST_EXIM source

CREATE VIEW ITXVIEW_PACKINGLIST_EXIM AS
SELECT
    SALESDOCUMENT.PROVISIONALCODE,
    SALESDOCUMENT.COMPANYCODE,
    SALESDOCUMENT.PROVISIONALCOUNTERCODE,
    SALESDOCUMENT.PROVISIONALDOCUMENTDATE,
    SALESDOCUMENT.NUMBERPLATE AS VESSEL_NM,
    SALESDOCUMENT.TRANSPORTSTARTDATE,
    SALESDOCUMENT.TERMSOFSHIPPINGCODE,
    SALESDOCUMENT.DELIVERYPOINTUNIQUEID,
    SALESDOCUMENT.PAYMENTCUSTOMERCODE,
    SALESDOCUMENT.PAYMENTMETHODCODE,
    SALESDOCUMENT.ABSUNIQUEID,
    SALESORDER.CODE AS PROJECTCODE,
    SALESDOCUMENTLINE.EXTERNALREFERENCE,
    SALESDOCUMENTLINE.EXTERNALITEM,
    SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE,
    LOGICALWAREHOUSE.CODE AS LOGICALWAREHOUSE_CODE,
    LOGICALWAREHOUSE.LONGDESCRIPTION,
    ALLOCATION.CODE,
    ALLOCATION.LOTCODE,
    ALLOCATION.DESTINATIONTYPE,
    ALLOCATION.ORDERCODE,
    ALLOCATION.ORDERLINE,
    ALLOCATION.ITEMELEMENTCODE,
    BUSINESSPARTNER.COUNTRYCODE AS PARTNER_COUNTRYCODE,
    BUSINESSPARTNER.NUMBERID AS MESSRS_ID,
    BUSINESSPARTNER.LEGALNAME1,
    BUSINESSPARTNER.ADDRESSLINE1 AS PARTNER_ADDRES1,
    BUSINESSPARTNER.ADDRESSLINE2 AS PARTNER_ADDRES2,
    BUSINESSPARTNER.ADDRESSLINE3 AS PARTNER_ADDRES3,
    BUSINESSPARTNER.ADDRESSLINE4 AS PARTNER_ADDRES4,
    BUSINESSPARTNER.TOWN AS PARTNER_TOWN,
    BUSINESSPARTNER.DISTRICT AS PARTNER_DISTRICT,
    BUSINESSPARTNER.ADDRESSPHONENUMBER AS PARTNER_PHONE,
    PAYMENTMETHOD.LONGDESCRIPTION AS TERM_DESC,
    USERGENERICGROUP.LONGDESCRIPTION AS COLOR_DESC,
    SALESDOCUMENTLINE.SALDOCPROVISIONALCOUNTERCODE,
    SALESDOCUMENTLINE.PRICE,
    SALESDOCUMENTLINE.ITEMDESCRIPTION,
    SALESDOCUMENTLINE.ITEMTYPEAFICODE,
    SALESDOCUMENTLINE.SUBCODE01,
    SALESDOCUMENTLINE.SUBCODE02,
    SALESDOCUMENTLINE.SUBCODE03,
    SALESDOCUMENTLINE.SUBCODE04,
    SALESDOCUMENTLINE.SUBCODE05,
    SALESDOCUMENTLINE.SUBCODE06,
    SALESDOCUMENTLINE.SUBCODE07,
    SALESDOCUMENTLINE.SUBCODE08,
    ADDRESS.CODE AS CONSIGNEE_ID,
    ADDRESS.ADDRESSEE,
    ADDRESS.ADDRESSLINE1,
    ADDRESS.ADDRESSLINE2,
    ADDRESS.ADDRESSLINE3,
    ADDRESS.ADDRESSLINE4,
    ADDRESS.TOWN,
    ADDRESS.DISTRICT,
    ADDRESS.ADDRESSPHONENUMBER,
    COUNTRY.LONGDESCRIPTION AS COUNTRY_NM
FROM
    SALESDOCUMENT SALESDOCUMENT
LEFT JOIN SALESDOCUMENTLINE SALESDOCUMENTLINE ON
    SALESDOCUMENT.PROVISIONALCODE = SALESDOCUMENTLINE.SALESDOCUMENTPROVISIONALCODE
    AND SALESDOCUMENT.PROVISIONALCOUNTERCODE = SALESDOCUMENTLINE.SALDOCPROVISIONALCOUNTERCODE
    AND SALESDOCUMENT.COMPANYCODE = SALESDOCUMENTLINE.SALESDOCUMENTCOMPANYCODE
LEFT JOIN SALESORDER SALESORDER ON
    SALESDOCUMENTLINE.DLVSALORDERLINESALESORDERCODE = SALESORDER.CODE
    AND SALESDOCUMENTLINE.DLVSALORDLINESALORDCNTCODE = SALESORDER.COUNTERCODE
LEFT JOIN ADDRESS ADDRESS ON
    SALESDOCUMENT.DELIVERYPOINTUNIQUEID = ADDRESS.UNIQUEID
    AND SALESDOCUMENT.DELIVERYPOINTCODE = ADDRESS.CODE
LEFT JOIN ORDERPARTNER ORDERPARTNER ON
    SALESDOCUMENT.FNCORDPRNCUSTOMERSUPPLIERCODE = ORDERPARTNER.CUSTOMERSUPPLIERCODE
    AND SALESDOCUMENT.COMPANYCODE = ORDERPARTNER.CUSTOMERSUPPLIERCOMPANYCODE
LEFT JOIN PAYMENTMETHOD PAYMENTMETHOD ON
    ORDERPARTNER.PAYMENTMETHODCODE = PAYMENTMETHOD.CODE
LEFT JOIN USERGENERICGROUP USERGENERICGROUP ON
    SALESDOCUMENTLINE.SUBCODE05 = USERGENERICGROUP.CODE
LEFT JOIN LOGICALWAREHOUSE LOGICALWAREHOUSE ON
    SALESDOCUMENTLINE.WAREHOUSECODE = LOGICALWAREHOUSE.CODE
LEFT JOIN BUSINESSPARTNER BUSINESSPARTNER ON
    ORDERPARTNER.ORDERBUSINESSPARTNERNUMBERID = BUSINESSPARTNER.NUMBERID
LEFT JOIN COUNTRY COUNTRY ON
    ADDRESS.COUNTRYCODE = COUNTRY.CODE
LEFT JOIN (
        SELECT
            *
        FROM
            ALLOCATION ALLOCATION
        WHERE
            ALLOCATION.DETAILTYPE = '1'
    )ALLOCATION ON
    SALESDOCUMENTLINE.SUBCODE01 = ALLOCATION.DECOSUBCODE01
    AND SALESDOCUMENTLINE.SUBCODE02 = ALLOCATION.DECOSUBCODE02
    AND SALESDOCUMENTLINE.SUBCODE03 = ALLOCATION.DECOSUBCODE03
    AND SALESDOCUMENTLINE.SUBCODE04 = ALLOCATION.DECOSUBCODE04
    AND SALESDOCUMENTLINE.SUBCODE05 = ALLOCATION.DECOSUBCODE05
    AND SALESDOCUMENTLINE.SUBCODE06 = ALLOCATION.DECOSUBCODE06
    AND SALESDOCUMENTLINE.SUBCODE07 = ALLOCATION.DECOSUBCODE07
    AND SALESDOCUMENTLINE.SUBCODE08 = ALLOCATION.DECOSUBCODE08
    AND SALESDOCUMENT.PROVISIONALCODE = ALLOCATION.ORDERCODE
    AND SALESDOCUMENTLINE.ORDERLINE = ALLOCATION.ORDERLINE
WHERE
    ALLOCATION.ORDERCODE IS NOT NULL;


-- DB2ADMIN.ITXVIEW_PACKINGLIST_EXIM_SINTEX source

CREATE VIEW ITXVIEW_PACKINGLIST_EXIM_SINTEX AS
SELECT
    SALESDOCUMENT.PROVISIONALCODE,
    SALESDOCUMENT.COMPANYCODE,
    SALESDOCUMENT.PROVISIONALCOUNTERCODE,
    SALESDOCUMENT.PROVISIONALDOCUMENTDATE,
    SALESDOCUMENT.NUMBERPLATE AS VESSEL_NM,
    SALESDOCUMENT.TRANSPORTSTARTDATE,
    SALESDOCUMENT.TERMSOFSHIPPINGCODE,
    SALESDOCUMENT.DELIVERYPOINTUNIQUEID,
    SALESDOCUMENT.PAYMENTCUSTOMERCODE,
    SALESDOCUMENT.PAYMENTMETHODCODE,
    SALESDOCUMENT.ABSUNIQUEID,
    SALESORDER.CODE AS PROJECTCODE,
    SALESDOCUMENTLINE.EXTERNALREFERENCE,
    LEFT(SALESDOCUMENTLINE.EXTERNALREFERENCE, 12) AS SP#,
    RIGHT(SALESDOCUMENTLINE.EXTERNALREFERENCE, 2) AS SEQ1,
    RIGHT(SALESDOCUMENTLINE.EXTERNALREFERENCE, 2) AS SEQ2,
    CASE
        WHEN SALESDOCUMENTLINE.EXTERNALITEM IS NULL THEN TRIM(SALESDOCUMENTLINE.SUBCODE02)|| TRIM(SALESDOCUMENTLINE.SUBCODE03)
        ELSE SALESDOCUMENTLINE.EXTERNALITEM
    END AS EXTERNALITEM,
    CASE
        WHEN SALESDOCUMENTLINE.EXTERNALITEM IS NULL THEN TRIM(SALESDOCUMENTLINE.SUBCODE02)|| TRIM(SALESDOCUMENTLINE.SUBCODE03)
    END AS ket_ref#,
    SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE,
    LOGICALWAREHOUSE.CODE AS LOGICALWAREHOUSE_CODE,
    LOGICALWAREHOUSE.LONGDESCRIPTION,
    ALLOCATION.CODE,
    ALLOCATION2.LOTCODE,
    ALLOCATION.DESTINATIONTYPE,
    ALLOCATION.ORDERCODE,
    ALLOCATION.ORDERLINE,
    E.CODE AS ELEMENTCODE,
    USERGENERICGROUP.LONGDESCRIPTION AS COLOR_DESC,
    SALESDOCUMENTLINE.SALDOCPROVISIONALCOUNTERCODE,
    SALESDOCUMENTLINE.PRICE,
    SALESDOCUMENTLINE.ITEMDESCRIPTION,
    SALESDOCUMENTLINE.ITEMTYPEAFICODE,
    SALESDOCUMENTLINE.SUBCODE01,
    SALESDOCUMENTLINE.SUBCODE02,
    SALESDOCUMENTLINE.SUBCODE03,
    SALESDOCUMENTLINE.SUBCODE04,
    SALESDOCUMENTLINE.SUBCODE05,
    SALESDOCUMENTLINE.SUBCODE06,
    SALESDOCUMENTLINE.SUBCODE07,
    SALESDOCUMENTLINE.SUBCODE08,
    count(ALLOCATION.CODE) AS jml_roll,
    ALLOCATION2.USERPRIMARYQUANTITY AS jml_kg,
    ALLOCATION2.USERSECONDARYQUANTITY AS jml_yd,
    ALLOCATION2.USERPRIMARYQUANTITY + 0.6 AS jml_gw,
    round(ALLOCATION2.USERSECONDARYQUANTITY * 0.9144 , 2) AS jml_meter,
    CASE
            WHEN E.QUALITYREASONCODE = 'FOC' THEN ALLOCATION2.USERPRIMARYQUANTITY
        ELSE 0
    END AS QTY_FOC_kg,
        CASE
            WHEN E.QUALITYREASONCODE = 'FOC' THEN ALLOCATION2.USERSECONDARYQUANTITY
        ELSE 0
    END AS QTY_FOC_yd,
        CASE
        WHEN E.QUALITYREASONCODE = 'FOC' THEN E.QUALITYREASONCODE
        ELSE '-'
    END AS QUALITYREASON,
    i.EXTERNALREFERENCE AS hscode,
    e2.WIDTHGROSS
FROM
    SALESDOCUMENT SALESDOCUMENT
LEFT JOIN SALESDOCUMENTLINE SALESDOCUMENTLINE ON
    SALESDOCUMENT.PROVISIONALCODE = SALESDOCUMENTLINE.SALESDOCUMENTPROVISIONALCODE
    AND SALESDOCUMENT.PROVISIONALCOUNTERCODE = SALESDOCUMENTLINE.SALDOCPROVISIONALCOUNTERCODE
    AND SALESDOCUMENT.COMPANYCODE = SALESDOCUMENTLINE.SALESDOCUMENTCOMPANYCODE
LEFT JOIN SALESORDER SALESORDER ON
    SALESDOCUMENTLINE.DLVSALORDERLINESALESORDERCODE = SALESORDER.CODE
    AND SALESDOCUMENTLINE.DLVSALORDLINESALORDCNTCODE = SALESORDER.COUNTERCODE
LEFT JOIN USERGENERICGROUP USERGENERICGROUP ON
    SALESDOCUMENTLINE.SUBCODE05 = USERGENERICGROUP.CODE
LEFT JOIN LOGICALWAREHOUSE LOGICALWAREHOUSE ON
    SALESDOCUMENTLINE.WAREHOUSECODE = LOGICALWAREHOUSE.CODE
LEFT JOIN (
        SELECT
            *
        FROM
            ALLOCATION ALLOCATION
        WHERE
            ALLOCATION.DETAILTYPE = '1'
    )ALLOCATION ON
    SALESDOCUMENTLINE.SUBCODE01 = ALLOCATION.DECOSUBCODE01
    AND SALESDOCUMENTLINE.SUBCODE02 = ALLOCATION.DECOSUBCODE02
    AND SALESDOCUMENTLINE.SUBCODE03 = ALLOCATION.DECOSUBCODE03
    AND SALESDOCUMENTLINE.SUBCODE04 = ALLOCATION.DECOSUBCODE04
    AND SALESDOCUMENTLINE.SUBCODE05 = ALLOCATION.DECOSUBCODE05
    AND SALESDOCUMENTLINE.SUBCODE06 = ALLOCATION.DECOSUBCODE06
    AND SALESDOCUMENTLINE.SUBCODE07 = ALLOCATION.DECOSUBCODE07
    AND SALESDOCUMENTLINE.SUBCODE08 = ALLOCATION.DECOSUBCODE08
    AND SALESDOCUMENT.PROVISIONALCODE = ALLOCATION.ORDERCODE
    AND SALESDOCUMENTLINE.ORDERLINE = ALLOCATION.ORDERLINE
LEFT JOIN ITXVIEWORDERITEMLINKACTIVE i ON
    ALLOCATION.ITEMTYPECODE = i.ITEMTYPEAFICODE
    AND ALLOCATION.DECOSUBCODE01 = i.SUBCODE01
    AND ALLOCATION.DECOSUBCODE02 = i.SUBCODE02
    AND ALLOCATION.DECOSUBCODE03 = i.SUBCODE03
    AND ALLOCATION.DECOSUBCODE04 = i.SUBCODE04
    AND ALLOCATION.DECOSUBCODE05 = i.SUBCODE05
    AND ALLOCATION.DECOSUBCODE06 = i.SUBCODE06
    AND ALLOCATION.DECOSUBCODE07 = i.SUBCODE07
    AND ALLOCATION.DECOSUBCODE08 = i.SUBCODE08
LEFT JOIN (
        SELECT
            *
        FROM
            ALLOCATION ALLOCATION
        WHERE
            ALLOCATION.DETAILTYPE = '0'
    )ALLOCATION2 ON
        ALLOCATION.CODE = ALLOCATION2.CODE
    AND ALLOCATION.DECOSUBCODE01 = ALLOCATION2.DECOSUBCODE01
    AND ALLOCATION.DECOSUBCODE02 = ALLOCATION2.DECOSUBCODE02
    AND ALLOCATION.DECOSUBCODE03 = ALLOCATION2.DECOSUBCODE03
    AND ALLOCATION.DECOSUBCODE04 = ALLOCATION2.DECOSUBCODE04
    AND ALLOCATION.DECOSUBCODE05 = ALLOCATION2.DECOSUBCODE05
    AND ALLOCATION.DECOSUBCODE06 = ALLOCATION2.DECOSUBCODE06
    AND ALLOCATION.DECOSUBCODE07 = ALLOCATION2.DECOSUBCODE07
    AND ALLOCATION.DECOSUBCODE08 = ALLOCATION2.DECOSUBCODE08
LEFT JOIN ELEMENTS E ON
        E.CODE = ALLOCATION2.ITEMELEMENTCODE
LEFT JOIN (
        SELECT
            ELEMENTSINSPECTION.ELEMENTCODE,
            ELEMENTSINSPECTION.COMPANYCODE ,
            ELEMENTSINSPECTION.ELEMENTITEMTYPECODE ,
            ELEMENTSINSPECTION.WIDTHGROSS
        FROM
            ELEMENTSINSPECTION ELEMENTSINSPECTION
    ) e2 ON
    e2.ELEMENTCODE = E.CODE
    AND e2.COMPANYCODE = E.COMPANYCODE
    AND e2.ELEMENTITEMTYPECODE = E.ITEMTYPECODE
WHERE
    ALLOCATION.ORDERCODE IS NOT NULL
    AND ALLOCATION.ORIGINTRNTRANSACTIONNUMBER IS NULL
    --            AND SALESDOCUMENT.PROVISIONALCODE = 'ESP2400413'
GROUP BY 
    SALESDOCUMENT.PROVISIONALCODE,
    SALESDOCUMENT.COMPANYCODE,
    SALESDOCUMENT.PROVISIONALCOUNTERCODE,
    SALESDOCUMENT.PROVISIONALDOCUMENTDATE,
    SALESDOCUMENT.NUMBERPLATE,
    SALESDOCUMENT.TRANSPORTSTARTDATE,
    SALESDOCUMENT.TERMSOFSHIPPINGCODE,
    SALESDOCUMENT.DELIVERYPOINTUNIQUEID,
    SALESDOCUMENT.PAYMENTCUSTOMERCODE,
    SALESDOCUMENT.PAYMENTMETHODCODE,
    SALESDOCUMENT.ABSUNIQUEID,
    SALESORDER.CODE,
    SALESDOCUMENTLINE.EXTERNALREFERENCE,
    SALESDOCUMENTLINE.EXTERNALITEM,
    SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE,
    LOGICALWAREHOUSE.CODE,
    LOGICALWAREHOUSE.LONGDESCRIPTION,
    ALLOCATION.CODE,
    ALLOCATION2.LOTCODE,
    ALLOCATION.DESTINATIONTYPE,
    ALLOCATION.ORDERCODE,
    ALLOCATION.ORDERLINE,
    E.CODE,
    USERGENERICGROUP.LONGDESCRIPTION,
    SALESDOCUMENTLINE.SALDOCPROVISIONALCOUNTERCODE,
    SALESDOCUMENTLINE.PRICE,
    SALESDOCUMENTLINE.ITEMDESCRIPTION,
    SALESDOCUMENTLINE.ITEMTYPEAFICODE,
    SALESDOCUMENTLINE.SUBCODE01,
    SALESDOCUMENTLINE.SUBCODE02,
    SALESDOCUMENTLINE.SUBCODE03,
    SALESDOCUMENTLINE.SUBCODE04,
    SALESDOCUMENTLINE.SUBCODE05,
    SALESDOCUMENTLINE.SUBCODE06,
    SALESDOCUMENTLINE.SUBCODE07,
    SALESDOCUMENTLINE.SUBCODE08,
    E.QUALITYREASONCODE,
    i.EXTERNALREFERENCE,
    ALLOCATION2.USERSECONDARYQUANTITY,
    ALLOCATION2.USERPRIMARYQUANTITY,
    e2.WIDTHGROSS;


-- DB2ADMIN.ITXVIEW_PACKINGLIST_PPC source

CREATE VIEW ITXVIEW_PACKINGLIST_PPC AS
SELECT
    DISTINCT 
    BUSINESSPARTNER.LEGALNAME1,
    ALLOCATION.CODE,
    ALLOCATION.PROJECTCODE,
    SALESDOCUMENTLINE.DLVSALESORDERLINEORDERLINE,
    ALLOCATION.THEORETICISSUEDATE,
    ALLOCATION.DECOSUBCODE01,
    ALLOCATION.DECOSUBCODE02,
    ALLOCATION.DECOSUBCODE03,
    ALLOCATION.DECOSUBCODE04,
    ALLOCATION.DECOSUBCODE05,
    ALLOCATION.DECOSUBCODE06,
    ALLOCATION.DECOSUBCODE07,
    ALLOCATION.DECOSUBCODE08,
    ALLOCATION.DECOSUBCODE09,
    ALLOCATION.DECOSUBCODE10,
    ALLOCATION.LOTCODE,
    ALLOCATION.BASESECONDARYUOMCODE,
    SALESDOCUMENT.PROVISIONALCODE,
    SALESDOCUMENT.PROVISIONALDOCUMENTDATE,
    SALESDOCUMENT.ORDPRNCUSTOMERSUPPLIERCODE,
    SALESDOCUMENT.ORDERPARTNERBRANDCODE,
    SALESDOCUMENT.GOODSISSUEDATE,
    CASE
        WHEN SALESDOCUMENT.EXTERNALREFERENCE IS NULL THEN SALESDOCUMENTLINE.EXTERNALREFERENCE
        ELSE SALESDOCUMENT.EXTERNALREFERENCE
    END AS PO_NUMBER,
    SALESDOCUMENTLINE.ITEMTYPEAFICODE,
    SALESDOCUMENTLINE.SUBCODE01,
    SALESDOCUMENTLINE.SUBCODE02,
    SALESDOCUMENTLINE.SUBCODE03,
    SALESDOCUMENTLINE.SUBCODE04,
    SALESDOCUMENTLINE.SUBCODE05,
    SALESDOCUMENTLINE.SUBCODE06,
    SALESDOCUMENTLINE.SUBCODE07,
    SALESDOCUMENTLINE.SUBCODE08,
    SALESDOCUMENTLINE.SUBCODE09,
    SALESDOCUMENTLINE.SUBCODE10,
    SALESDOCUMENTLINE.ITEMDESCRIPTION,
    SALESDOCUMENTLINE.PREVIOUSCODE,
    SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE,
    ORDERPARTNERBRAND.LONGDESCRIPTION
FROM
    DB2ADMIN.ALLOCATION ALLOCATION
LEFT OUTER JOIN CUSTOMERSUPPLIERDATA CUSTOMERSUPPLIERDATA ON
    CUSTOMERSUPPLIERDATA.CODE = ALLOCATION.CUSTOMERCODE
LEFT OUTER JOIN BUSINESSPARTNER BUSINESSPARTNER ON
    BUSINESSPARTNER.NUMBERID = CUSTOMERSUPPLIERDATA.BUSINESSPARTNERNUMBERID
LEFT OUTER JOIN DB2ADMIN.SALESDOCUMENT SALESDOCUMENT ON
    ALLOCATION.ORDERCODE = SALESDOCUMENT.PROVISIONALCODE
LEFT OUTER JOIN DB2ADMIN.SALESDOCUMENTLINE SALESDOCUMENTLINE ON
    SALESDOCUMENT.PROVISIONALCODE = SALESDOCUMENTLINE.SALESDOCUMENTPROVISIONALCODE
    AND ALLOCATION.ITEMTYPECODE = SALESDOCUMENTLINE.ITEMTYPEAFICODE
    AND ALLOCATION.DECOSUBCODE01 = SALESDOCUMENTLINE.SUBCODE01
    AND ALLOCATION.DECOSUBCODE02 = SALESDOCUMENTLINE.SUBCODE02
    AND ALLOCATION.DECOSUBCODE03 = SALESDOCUMENTLINE.SUBCODE03
    AND ALLOCATION.DECOSUBCODE04 = SALESDOCUMENTLINE.SUBCODE04
    AND ALLOCATION.DECOSUBCODE05 = SALESDOCUMENTLINE.SUBCODE05
    AND ALLOCATION.DECOSUBCODE06 = SALESDOCUMENTLINE.SUBCODE06
    AND ALLOCATION.DECOSUBCODE07 = SALESDOCUMENTLINE.SUBCODE07
    AND ALLOCATION.DECOSUBCODE08 = SALESDOCUMENTLINE.SUBCODE08
    AND ALLOCATION.DECOSUBCODE09 = SALESDOCUMENTLINE.SUBCODE09
    AND ALLOCATION.DECOSUBCODE10 = SALESDOCUMENTLINE.SUBCODE10
    AND ALLOCATION.ORDERLINE = SALESDOCUMENTLINE.ORDERLINE
LEFT OUTER JOIN DB2ADMIN.ORDERPARTNERBRAND ORDERPARTNERBRAND ON
    SALESDOCUMENT.ORDERPARTNERBRANDCODE = ORDERPARTNERBRAND.CODE
    AND SALESDOCUMENT.ORDPRNCUSTOMERSUPPLIERCODE = ORDERPARTNERBRAND.ORDPRNCUSTOMERSUPPLIERCODE
WHERE
    ALLOCATION.ORIGINTRNTRANSACTIONNUMBER IS NULL;


-- DB2ADMIN.ITXVIEW_PACKINGLIST_PPCX source

CREATE VIEW ITXVIEW_PACKINGLIST_PPCX AS
SELECT
    BUSINESSPARTNER.LEGALNAME1,
    ALLOCATION.CODE,
    ALLOCATION.PROJECTCODE,
    ALLOCATION.THEORETICISSUEDATE,
    ALLOCATION.DECOSUBCODE01,
    ALLOCATION.DECOSUBCODE02,
    ALLOCATION.DECOSUBCODE03,
    ALLOCATION.DECOSUBCODE04,
    ALLOCATION.DECOSUBCODE05,
    ALLOCATION.DECOSUBCODE06,
    ALLOCATION.DECOSUBCODE07,
    ALLOCATION.DECOSUBCODE08,
    ALLOCATION.DECOSUBCODE09,
    ALLOCATION.DECOSUBCODE10,
    ITXVIEWALLOCATION0.LOTCODE,
    ALLOCATION.BASESECONDARYUOMCODE,
    SALESDOCUMENT.PROVISIONALCODE,
    SALESDOCUMENT.PROVISIONALDOCUMENTDATE,
    SALESDOCUMENT.ORDPRNCUSTOMERSUPPLIERCODE,
    SALESDOCUMENT.ORDERPARTNERBRANDCODE,
    SALESDOCUMENTLINE.EXTERNALREFERENCE,
    SALESDOCUMENTLINE.ITEMTYPEAFICODE,
    SALESDOCUMENTLINE.SUBCODE01,
    SALESDOCUMENTLINE.SUBCODE02,
    SALESDOCUMENTLINE.SUBCODE03,
    SALESDOCUMENTLINE.SUBCODE04,
    SALESDOCUMENTLINE.SUBCODE05,
    SALESDOCUMENTLINE.SUBCODE06,
    SALESDOCUMENTLINE.SUBCODE07,
    SALESDOCUMENTLINE.SUBCODE08,
    SALESDOCUMENTLINE.SUBCODE09,
    SALESDOCUMENTLINE.SUBCODE10,
    SALESDOCUMENTLINE.ITEMDESCRIPTION,
    ORDERPARTNERBRAND.LONGDESCRIPTION
FROM
    BUSINESSPARTNER BUSINESSPARTNER
LEFT OUTER JOIN DB2ADMIN.CUSTOMERSUPPLIERDATA CUSTOMERSUPPLIERDATA ON
    BUSINESSPARTNER.NUMBERID = CUSTOMERSUPPLIERDATA.BUSINESSPARTNERNUMBERID
LEFT OUTER JOIN DB2ADMIN.ALLOCATION ALLOCATION ON
    CUSTOMERSUPPLIERDATA.CODE = ALLOCATION.CUSTOMERCODE
RIGHT OUTER JOIN DB2ADMIN.WRKDOCUMENTPRINT WRKDOCUMENTPRINT ON
    ALLOCATION.PROJECTCODE = WRKDOCUMENTPRINT.PROJECTLONGDESCRIPTION
    AND ALLOCATION.ORDERCODE = WRKDOCUMENTPRINT.SALESDOCUMENTPROVISIONALCODE
LEFT OUTER JOIN DB2ADMIN.SALESDOCUMENT SALESDOCUMENT ON
    WRKDOCUMENTPRINT.SALESDOCUMENTPROVISIONALCODE = SALESDOCUMENT.PROVISIONALCODE
    AND WRKDOCUMENTPRINT.PROJECTLONGDESCRIPTION = SALESDOCUMENT.PROJECTCODE
RIGHT OUTER JOIN DB2ADMIN.SALESDOCUMENTLINE SALESDOCUMENTLINE ON
    SALESDOCUMENT.PROVISIONALCODE = SALESDOCUMENTLINE.SALESDOCUMENTPROVISIONALCODE
LEFT OUTER JOIN DB2ADMIN.ORDERPARTNERBRAND ORDERPARTNERBRAND ON
    SALESDOCUMENT.ORDERPARTNERBRANDCODE = ORDERPARTNERBRAND.CODE
    AND SALESDOCUMENT.ORDPRNCUSTOMERSUPPLIERCODE = ORDERPARTNERBRAND.ORDPRNCUSTOMERSUPPLIERCODE
LEFT OUTER JOIN ITXVIEWALLOCATION0 ON
    ALLOCATION.CODE = ITXVIEWALLOCATION0.CODE
GROUP BY
    BUSINESSPARTNER.LEGALNAME1,
    ALLOCATION.THEORETICISSUEDATE,
    ALLOCATION.CODE,
    ALLOCATION.DECOSUBCODE01,
    ALLOCATION.DECOSUBCODE02,
    ALLOCATION.DECOSUBCODE03,
    ALLOCATION.DECOSUBCODE04,
    ALLOCATION.DECOSUBCODE05,
    ALLOCATION.DECOSUBCODE06,
    ALLOCATION.DECOSUBCODE07,
    ALLOCATION.DECOSUBCODE08,
    ALLOCATION.DECOSUBCODE09,
    ALLOCATION.DECOSUBCODE10,
    ITXVIEWALLOCATION0.LOTCODE,
    ALLOCATION.PROJECTCODE,
    ALLOCATION.BASESECONDARYUOMCODE,
    SALESDOCUMENT.PROVISIONALCODE,
    SALESDOCUMENT.PROVISIONALDOCUMENTDATE,
    SALESDOCUMENT.ORDPRNCUSTOMERSUPPLIERCODE,
    SALESDOCUMENT.ORDERPARTNERBRANDCODE,
    SALESDOCUMENTLINE.EXTERNALREFERENCE,
    SALESDOCUMENTLINE.ITEMTYPEAFICODE,
    SALESDOCUMENTLINE.SUBCODE01,
    SALESDOCUMENTLINE.SUBCODE02,
    SALESDOCUMENTLINE.SUBCODE03,
    SALESDOCUMENTLINE.SUBCODE04,
    SALESDOCUMENTLINE.SUBCODE05,
    SALESDOCUMENTLINE.SUBCODE06,
    SALESDOCUMENTLINE.SUBCODE07,
    SALESDOCUMENTLINE.SUBCODE08,
    SALESDOCUMENTLINE.SUBCODE09,
    SALESDOCUMENTLINE.SUBCODE10,
    SALESDOCUMENTLINE.ITEMDESCRIPTION,
    ORDERPARTNERBRAND.LONGDESCRIPTION;


-- DB2ADMIN.ITXVIEW_PACKINGLIST_PPC_PFD source

CREATE VIEW ITXVIEW_PACKINGLIST_PPC_PFD AS
SELECT
    BUSINESSPARTNER.LEGALNAME1,
    ALLOCATION.CODE,
    ALLOCATION.PROJECTCODE,
    ALLOCATION.THEORETICISSUEDATE,
    ALLOCATION.DECOSUBCODE01,
    ALLOCATION.DECOSUBCODE02,
    ALLOCATION.DECOSUBCODE03,
    ALLOCATION.DECOSUBCODE04,
    ALLOCATION.DECOSUBCODE05,
    ALLOCATION.DECOSUBCODE06,
    ALLOCATION.DECOSUBCODE07,
    ALLOCATION.DECOSUBCODE08,
    ALLOCATION.DECOSUBCODE09,
    ALLOCATION.DECOSUBCODE10,
    ALLOCATION.LOTCODE,
    ALLOCATION.BASESECONDARYUOMCODE,
    SALESDOCUMENT.PROVISIONALCODE,
    SALESDOCUMENT.PROVISIONALDOCUMENTDATE,
    SALESDOCUMENT.ORDPRNCUSTOMERSUPPLIERCODE,
    SALESDOCUMENT.ORDERPARTNERBRANDCODE,
    SALESDOCUMENT.GOODSISSUEDATE,
    CASE
        WHEN SALESDOCUMENT.EXTERNALREFERENCE IS NULL THEN SALESDOCUMENTLINE.EXTERNALREFERENCE
        ELSE SALESDOCUMENT.EXTERNALREFERENCE
    END AS PO_NUMBER,
    SALESDOCUMENTLINE.ITEMTYPEAFICODE,
    SALESDOCUMENTLINE.SUBCODE01,
    SALESDOCUMENTLINE.SUBCODE02,
    SALESDOCUMENTLINE.SUBCODE03,
    SALESDOCUMENTLINE.SUBCODE04,
    SALESDOCUMENTLINE.SUBCODE05,
    SALESDOCUMENTLINE.SUBCODE06,
    SALESDOCUMENTLINE.SUBCODE07,
    SALESDOCUMENTLINE.SUBCODE08,
    SALESDOCUMENTLINE.SUBCODE09,
    SALESDOCUMENTLINE.SUBCODE10,
    SALESDOCUMENTLINE.ITEMDESCRIPTION,
    SALESDOCUMENTLINE.PREVIOUSCODE,
    SALESDOCUMENTLINE.DLVSALORDERLINESALESORDERCODE,
    SALESDOCUMENTLINE.DLVSALESORDERLINEORDERLINE,
    ORDERPARTNERBRAND.LONGDESCRIPTION
FROM
    DB2ADMIN.ALLOCATION ALLOCATION
LEFT OUTER JOIN CUSTOMERSUPPLIERDATA CUSTOMERSUPPLIERDATA ON
    CUSTOMERSUPPLIERDATA.CODE = ALLOCATION.CUSTOMERCODE
LEFT OUTER JOIN BUSINESSPARTNER BUSINESSPARTNER ON
    BUSINESSPARTNER.NUMBERID = CUSTOMERSUPPLIERDATA.BUSINESSPARTNERNUMBERID
RIGHT OUTER JOIN DB2ADMIN.WRKDOCUMENTPRINT WRKDOCUMENTPRINT ON
    ALLOCATION.PROJECTCODE = WRKDOCUMENTPRINT.PROJECTLONGDESCRIPTION
    AND ALLOCATION.ORDERCODE = WRKDOCUMENTPRINT.SALESDOCUMENTPROVISIONALCODE
LEFT OUTER JOIN DB2ADMIN.SALESDOCUMENT SALESDOCUMENT ON
    ALLOCATION.ORDERCODE = SALESDOCUMENT.PROVISIONALCODE
LEFT OUTER JOIN DB2ADMIN.SALESDOCUMENTLINE SALESDOCUMENTLINE ON
    SALESDOCUMENT.PROVISIONALCODE = SALESDOCUMENTLINE.SALESDOCUMENTPROVISIONALCODE
    AND ALLOCATION.ITEMTYPECODE = SALESDOCUMENTLINE.ITEMTYPEAFICODE
    AND ALLOCATION.DECOSUBCODE01 = SALESDOCUMENTLINE.SUBCODE01
    AND ALLOCATION.DECOSUBCODE02 = SALESDOCUMENTLINE.SUBCODE02
    AND ALLOCATION.DECOSUBCODE03 = SALESDOCUMENTLINE.SUBCODE03
    AND ALLOCATION.DECOSUBCODE04 = SALESDOCUMENTLINE.SUBCODE04
    AND ALLOCATION.DECOSUBCODE05 = SALESDOCUMENTLINE.SUBCODE05
    AND ALLOCATION.DECOSUBCODE06 = SALESDOCUMENTLINE.SUBCODE06
    AND ALLOCATION.DECOSUBCODE07 = SALESDOCUMENTLINE.SUBCODE07
    AND ALLOCATION.DECOSUBCODE08 = SALESDOCUMENTLINE.SUBCODE08
    AND ALLOCATION.DECOSUBCODE09 = SALESDOCUMENTLINE.SUBCODE09
    AND ALLOCATION.DECOSUBCODE10 = SALESDOCUMENTLINE.SUBCODE10
LEFT OUTER JOIN DB2ADMIN.ORDERPARTNERBRAND ORDERPARTNERBRAND ON
    SALESDOCUMENT.ORDERPARTNERBRANDCODE = ORDERPARTNERBRAND.CODE
    AND SALESDOCUMENT.ORDPRNCUSTOMERSUPPLIERCODE = ORDERPARTNERBRAND.ORDPRNCUSTOMERSUPPLIERCODE
WHERE
    ALLOCATION.ORIGINTRNTRANSACTIONNUMBER IS NULL
GROUP BY
    BUSINESSPARTNER.LEGALNAME1,
    ALLOCATION.CODE,
    ALLOCATION.THEORETICISSUEDATE,
    ALLOCATION.DECOSUBCODE01,
    ALLOCATION.DECOSUBCODE02,
    ALLOCATION.DECOSUBCODE03,
    ALLOCATION.DECOSUBCODE04,
    ALLOCATION.DECOSUBCODE05,
    ALLOCATION.DECOSUBCODE06,
    ALLOCATION.DECOSUBCODE07,
    ALLOCATION.DECOSUBCODE08,
    ALLOCATION.DECOSUBCODE09,
    ALLOCATION.DECOSUBCODE10,
    ALLOCATION.LOTCODE,
    ALLOCATION.PROJECTCODE,
    ALLOCATION.BASESECONDARYUOMCODE,
    SALESDOCUMENT.PROVISIONALCODE,
    SALESDOCUMENT.PROVISIONALDOCUMENTDATE,
    SALESDOCUMENT.ORDPRNCUSTOMERSUPPLIERCODE,
    SALESDOCUMENT.ORDERPARTNERBRANDCODE,
    SALESDOCUMENT.EXTERNALREFERENCE,
    SALESDOCUMENT.GOODSISSUEDATE,
    SALESDOCUMENTLINE.EXTERNALREFERENCE,
    SALESDOCUMENTLINE.ITEMTYPEAFICODE,
    SALESDOCUMENTLINE.SUBCODE01,
    SALESDOCUMENTLINE.SUBCODE02,
    SALESDOCUMENTLINE.SUBCODE03,
    SALESDOCUMENTLINE.SUBCODE04,
    SALESDOCUMENTLINE.SUBCODE05,
    SALESDOCUMENTLINE.SUBCODE06,
    SALESDOCUMENTLINE.SUBCODE07,
    SALESDOCUMENTLINE.SUBCODE08,
    SALESDOCUMENTLINE.SUBCODE09,
    SALESDOCUMENTLINE.SUBCODE10,
    SALESDOCUMENTLINE.ITEMDESCRIPTION,
    SALESDOCUMENTLINE.PREVIOUSCODE,
    SALESDOCUMENTLINE.DLVSALORDERLINESALESORDERCODE,
    SALESDOCUMENTLINE.DLVSALESORDERLINEORDERLINE,
    ORDERPARTNERBRAND.LONGDESCRIPTION;


-- DB2ADMIN.ITXVIEW_PANJANGKAIN source

CREATE VIEW ITXVIEW_PANJANGKAIN AS
SELECT
    ir.ORDERCODE,
    ir.USERPRIMARYQUANTITY,
    in2.SECONDARYUNSTEADYCVSFACTOR,
    (
        (ir.USERPRIMARYQUANTITY) * (in2.SECONDARYUNSTEADYCVSFACTOR) * 0.9144
    ) AS PANJANG_KAIN
FROM
    ITXVIEW_RESERVATION ir
LEFT JOIN ITXVIEW_NETTO in2 ON
    in2.CODE = ir.ORDERCODE;


-- DB2ADMIN.ITXVIEW_PAYMENTINV source

CREATE VIEW ITXVIEW_PAYMENTINV AS
SELECT
    ITXVIEW_ALLOCATION_SURATJALAN_PPC.CODE,
    trim(PLANTINVOICE.CODE) AS Invoice,
    trim(SALESDOCUMENTLINE.PREVIOUSCODE) AS no_sj,
    trim(PLANTINVOICE.INVOICEDATE) AS tgl_inv,
    trim(PLANTINVOICE.TERMSOFPAYMENTCODE) AS payment_terms,
    trim(PLANTINVOICE.CONTRACTNOCODE) AS NO_ORDER,
    trim(PLANTINVOICE.CONSIGNEECUSTOMERSUPPLIERCODE) AS kode_cus,
    trim(BUSINESSPARTNER.LEGALNAME1) AS nama_cus,
    trim(PLANTINVOICE.ORDERCURRENCYCODE) AS curr,
    trim(PLANTINVOICE.EXCHANGERATEOFCONTRACT) AS rate,
    trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) AS unit,
    trim(PLANTINVOICELINE.TAXTEMPLATECODE) AS PPN,
    trim(PLANTINVOICE.BLNUMBER)AS FAKTUR_PAJAK,
    trim(BUSINESSPARTNER.TAXREGISTRATIONNUMBER) AS NPWP,
    SUM(round(ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASEPRIMARYQUANTITY, 2))AS BERAT,
    SUM(round(ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASESECONDARYQUANTITY * 0.9144, 2))AS BERAT_LAIN,
    trim(SALESDOCUMENTLINE.price) AS harga_satuan
FROM
    PLANTINVOICE PLANTINVOICE
LEFT JOIN PLANTINVOICELINE PLANTINVOICELINE ON
    PLANTINVOICE.CODE = PLANTINVOICELINE.PLANTINVOICECODE
LEFT JOIN SALESORDER SALESORDER ON
    PLANTINVOICE.CONTRACTNOCODE = SALESORDER.CODE
LEFT JOIN SALESDOCUMENT SALESDOCUMENT ON
    PLANTINVOICE.CODE = SALESDOCUMENT.PROVISIONALCODE
    AND PLANTINVOICE.CODE = SALESDOCUMENT.DEFINITIVECODE
LEFT JOIN PAYMENTMETHOD PAYMENTMETHOD ON
    PLANTINVOICE.TERMSOFPAYMENTCODE = PAYMENTMETHOD.CODE
LEFT JOIN PAYMENTMETHODIE PAYMENTMETHODIE ON
    PLANTINVOICE.TERMSOFPAYMENTCODE = PAYMENTMETHODIE.CODE
LEFT JOIN ORDERPARTNERIE ORDERPARTNERIE ON
    SALESORDER.FNCORDPRNCUSTOMERSUPPLIERCODE = ORDERPARTNERIE.CUSTOMERSUPPLIERCODE
LEFT JOIN GLMASTER GLMASTER ON
    ORDERPARTNERIE.GLCODE = GLMASTER.CODE
LEFT JOIN ORDERPARTNER ORDERPARTNER ON
    SALESDOCUMENT.FNCORDPRNCUSTOMERSUPPLIERCODE = ORDERPARTNER.CUSTOMERSUPPLIERCODE
LEFT JOIN BUSINESSPARTNER BUSINESSPARTNER ON
    ORDERPARTNER.ORDERBUSINESSPARTNERNUMBERID = BUSINESSPARTNER.NUMBERID
LEFT JOIN SALESDOCUMENTLINE SALESDOCUMENTLINE ON
    SALESDOCUMENTLINE.SALESDOCUMENTPROVISIONALCODE = SALESDOCUMENT.PROVISIONALCODE
LEFT JOIN (
        SELECT
            *
        FROM
            ALLOCATION ALLOCATION
        WHERE
            ALLOCATION.DETAILTYPE = '1'
    )ALLOCATION ON
    SALESDOCUMENTLINE.SUBCODE01 = ALLOCATION.DECOSUBCODE01
    AND SALESDOCUMENTLINE.SUBCODE02 = ALLOCATION.DECOSUBCODE02
    AND SALESDOCUMENTLINE.SUBCODE03 = ALLOCATION.DECOSUBCODE03
    AND SALESDOCUMENTLINE.SUBCODE04 = ALLOCATION.DECOSUBCODE04
    AND SALESDOCUMENTLINE.SUBCODE05 = ALLOCATION.DECOSUBCODE05
    AND SALESDOCUMENTLINE.SUBCODE06 = ALLOCATION.DECOSUBCODE06
    AND SALESDOCUMENTLINE.SUBCODE07 = ALLOCATION.DECOSUBCODE07
    AND SALESDOCUMENTLINE.PROJECTCODE = ALLOCATION.PROJECTCODE
    AND SALESDOCUMENTLINE.PREVIOUSCODE = ALLOCATION.ORDERCODE
LEFT JOIN ITXVIEW_ALLOCATION_SURATJALAN_PPC ITXVIEW_ALLOCATION_SURATJALAN_PPC ON
    ITXVIEW_ALLOCATION_SURATJALAN_PPC.CODE = ALLOCATION.CODE
GROUP BY
    ITXVIEW_ALLOCATION_SURATJALAN_PPC.CODE,
    PLANTINVOICE.CODE,
    SALESDOCUMENTLINE.PREVIOUSCODE,
    PLANTINVOICE.INVOICEDATE,
    PLANTINVOICE.TERMSOFPAYMENTCODE,
    PLANTINVOICE.CONTRACTNOCODE,
    PLANTINVOICE.CONSIGNEECUSTOMERSUPPLIERCODE,
    BUSINESSPARTNER.LEGALNAME1,
    PLANTINVOICE.ORDERCURRENCYCODE,
    PLANTINVOICE.EXCHANGERATEOFCONTRACT,
    SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE,
    PLANTINVOICELINE.TAXTEMPLATECODE,
    PLANTINVOICE.BLNUMBER,
    BUSINESSPARTNER.TAXREGISTRATIONNUMBER,
    SALESDOCUMENTLINE.price;


-- DB2ADMIN.ITXVIEW_PELANGGAN source

CREATE VIEW ITXVIEW_PELANGGAN AS
SELECT
    s.CODE,
    s.ORDPRNCUSTOMERSUPPLIERCODE,
    trim(b.LEGALNAME1) AS LANGGANAN,
    trim(s.ORDERPARTNERBRANDCODE) AS BUYER
FROM
    SALESORDER s
LEFT JOIN ORDERPARTNER o ON
    o.CUSTOMERSUPPLIERCODE = s.ORDPRNCUSTOMERSUPPLIERCODE
LEFT JOIN BUSINESSPARTNER b ON
    b.NUMBERID = o.ORDERBUSINESSPARTNERNUMBERID
LEFT JOIN ORDERPARTNERBRAND o2 ON
    o2.ORDPRNCUSTOMERSUPPLIERCODE = s.ORDPRNCUSTOMERSUPPLIERCODE
GROUP BY
    s.CODE,
    s.ORDPRNCUSTOMERSUPPLIERCODE,
    b.LEGALNAME1,
    s.ORDERPARTNERBRANDCODE;


-- DB2ADMIN.ITXVIEW_PENGIRIMAN source

CREATE VIEW ITXVIEW_PENGIRIMAN AS 
SELECT
    DISTINCT
    i.PROVISIONALCODE,
    TRIM(i.PRICEUNITOFMEASURECODE) AS PRICEUNITOFMEASURECODE,
    i.DEFINITIVECOUNTERCODE,
    i.DEFINITIVEDOCUMENTDATE,
    i.ORDERPARTNERBRANDCODE,
    CASE
        WHEN TRIM(i.DEFINITIVECOUNTERCODE) = 'CESDEF'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'CESPROV'
        OR
            TRIM(i.DEFINITIVECOUNTERCODE) = 'DREDEF'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'DREPROV'
        OR 
            TRIM(i.DEFINITIVECOUNTERCODE) = 'DSEDEF'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'EXDDEF'
        OR
            TRIM(i.DEFINITIVECOUNTERCODE) = 'EXDPROV'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'EXPDEF'
        OR
            TRIM(i.DEFINITIVECOUNTERCODE) = 'EXPPROV'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'GSEDEF'
        OR 
            TRIM(i.DEFINITIVECOUNTERCODE) = 'GSEPROV'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'PSEPROV' THEN ''
        ELSE i.PO_NUMBER
    END AS PO_NUMBER,
    i.PROJECTCODE,
    DAY(i.GOODSISSUEDATE) || '-' || MONTHNAME(i.GOODSISSUEDATE) || '-' || YEAR(i.GOODSISSUEDATE) AS GOODSISSUEDATE,
    i.ORDPRNCUSTOMERSUPPLIERCODE,
    i.PAYMENTMETHODCODE,   
    i.ITEMTYPEAFICODE,
    i.DLVSALORDERLINESALESORDERCODE AS NO_ORDER,
    CASE
        WHEN TRIM(i.DEFINITIVECOUNTERCODE) = 'CESDEF'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'CESPROV'
        OR
            TRIM(i.DEFINITIVECOUNTERCODE) = 'DREDEF'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'DREPROV'
        OR 
            TRIM(i.DEFINITIVECOUNTERCODE) = 'DSEDEF'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'EXDDEF'
        OR
            TRIM(i.DEFINITIVECOUNTERCODE) = 'EXDPROV'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'EXPDEF'
        OR
            TRIM(i.DEFINITIVECOUNTERCODE) = 'EXPPROV'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'GSEDEF'
        OR 
            TRIM(i.DEFINITIVECOUNTERCODE) = 'GSEPROV'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'PSEPROV' THEN ''
        ELSE i.DLVSALORDERLINESALESORDERCODE
    END AS DLVSALORDERLINESALESORDERCODE,
    CASE
        WHEN TRIM(i.DEFINITIVECOUNTERCODE) = 'CESDEF'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'CESPROV'
        OR
            TRIM(i.DEFINITIVECOUNTERCODE) = 'DREDEF'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'DREPROV'
        OR 
            TRIM(i.DEFINITIVECOUNTERCODE) = 'DSEDEF'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'EXDDEF'
        OR
            TRIM(i.DEFINITIVECOUNTERCODE) = 'EXDPROV'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'EXPDEF'
        OR
            TRIM(i.DEFINITIVECOUNTERCODE) = 'EXPPROV'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'GSEDEF'
        OR 
            TRIM(i.DEFINITIVECOUNTERCODE) = 'GSEPROV'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'PSEPROV' THEN 0
        ELSE i.DLVSALESORDERLINEORDERLINE
    END AS DLVSALESORDERLINEORDERLINE,
    CASE
        WHEN TRIM(i.DEFINITIVECOUNTERCODE) = 'CESDEF'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'CESPROV'
        OR
            TRIM(i.DEFINITIVECOUNTERCODE) = 'DREDEF'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'DREPROV'
        OR 
            TRIM(i.DEFINITIVECOUNTERCODE) = 'DSEDEF'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'EXDDEF'
        OR
            TRIM(i.DEFINITIVECOUNTERCODE) = 'EXDPROV'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'EXPDEF'
        OR
            TRIM(i.DEFINITIVECOUNTERCODE) = 'EXPPROV'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'GSEDEF'
        OR 
            TRIM(i.DEFINITIVECOUNTERCODE) = 'GSEPROV'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'PSEPROV' THEN ''
        ELSE 
            TRIM(i.SUBCODE01) || '-' || TRIM(i.SUBCODE02) || '-' || TRIM(i.SUBCODE03) || '-' || TRIM(i.SUBCODE04) || '-' ||
            TRIM(i.SUBCODE05) || '-' || TRIM(i.SUBCODE06) || '-' || TRIM(i.SUBCODE07) || '-' || TRIM(i.SUBCODE08)
    END AS ITEMDESCRIPTION,
    CASE
        WHEN TRIM(i.DEFINITIVECOUNTERCODE) = 'CESDEF'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'CESPROV'
        OR
	        TRIM(i.DEFINITIVECOUNTERCODE) = 'DREDEF'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'DREPROV'
        OR 
	        TRIM(i.DEFINITIVECOUNTERCODE) = 'DSEDEF'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'EXDDEF'
        OR
	        TRIM(i.DEFINITIVECOUNTERCODE) = 'EXDPROV'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'EXPDEF'
        OR
	        TRIM(i.DEFINITIVECOUNTERCODE) = 'EXPPROV'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'GSEDEF'
        OR 
	        TRIM(i.DEFINITIVECOUNTERCODE) = 'GSEPROV'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'PSEPROV' THEN ''
        ELSE iasp.LOTCODE
    END AS LOTCODE,
    CASE
        WHEN TRIM(i.DEFINITIVECOUNTERCODE) = 'CESDEF'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'CESPROV'
        OR
            TRIM(i.DEFINITIVECOUNTERCODE) = 'DREDEF'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'DREPROV'
        OR 
            TRIM(i.DEFINITIVECOUNTERCODE) = 'DSEDEF'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'EXDDEF'
        OR
            TRIM(i.DEFINITIVECOUNTERCODE) = 'EXDPROV'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'EXPDEF'
        OR
            TRIM(i.DEFINITIVECOUNTERCODE) = 'EXPPROV'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'GSEDEF'
        OR 
            TRIM(i.DEFINITIVECOUNTERCODE) = 'GSEPROV'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'PSEPROV' THEN ''
        ELSE i2.WARNA
    END AS WARNA,
    i.LEGALNAME1,
    CASE
        WHEN TRIM(i.DEFINITIVECOUNTERCODE) = 'CESDEF'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'CESPROV'
        OR
            TRIM(i.DEFINITIVECOUNTERCODE) = 'DREDEF'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'DREPROV'
        OR 
            TRIM(i.DEFINITIVECOUNTERCODE) = 'DSEDEF'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'EXDDEF'
        OR
            TRIM(i.DEFINITIVECOUNTERCODE) = 'EXDPROV'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'EXPDEF'
        OR
            TRIM(i.DEFINITIVECOUNTERCODE) = 'EXPPROV'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'GSEDEF'
        OR 
            TRIM(i.DEFINITIVECOUNTERCODE) = 'GSEPROV'
        OR TRIM(i.DEFINITIVECOUNTERCODE) = 'PSEPROV' THEN 'EXPORT'
        ELSE i.CODE
    END AS CODE
FROM 
    ITXVIEW_SURATJALAN_PPC_FOR_POSELESAI i
LEFT JOIN ITXVIEW_ALLOCATION_SURATJALAN_PPC iasp ON
    iasp.CODE = i.CODE
LEFT JOIN ITXVIEWCOLOR i2 ON
    i2.ITEMTYPECODE = i.ITEMTYPEAFICODE
    AND i2.SUBCODE01 = i.SUBCODE01
    AND i2.SUBCODE02 = i.SUBCODE02
    AND i2.SUBCODE03 = i.SUBCODE03
    AND i2.SUBCODE04 = i.SUBCODE04
    AND i2.SUBCODE05 = i.SUBCODE05
    AND i2.SUBCODE06 = i.SUBCODE06
    AND i2.SUBCODE07 = i.SUBCODE07
    AND i2.SUBCODE08 = i.SUBCODE08
    AND i2.SUBCODE09 = i.SUBCODE09
    AND i2.SUBCODE10 = i.SUBCODE10
WHERE
    --    i.DLVSALORDERLINESALESORDERCODE = 'RFD2300070' 
    --    AND
    i.DOCUMENTTYPETYPE = 05
    AND NOT i.CODE IS NULL
    AND i.PROGRESSSTATUS_SALDOC = 2
GROUP BY
    i.PROVISIONALCODE,
    i.PRICEUNITOFMEASURECODE,
    i.DEFINITIVEDOCUMENTDATE,
    i.ORDERPARTNERBRANDCODE,
    i.PO_NUMBER,
    i.PROJECTCODE,
    i.GOODSISSUEDATE,
    i.ORDPRNCUSTOMERSUPPLIERCODE,
    i.PAYMENTMETHODCODE,
    i.PO_NUMBER,    
    i.ITEMTYPEAFICODE,
    i.DLVSALORDERLINESALESORDERCODE,
    i.DLVSALESORDERLINEORDERLINE,
    i.ITEMDESCRIPTION,
    iasp.LOTCODE,
    i.DEFINITIVECOUNTERCODE,
    i2.WARNA,
    i.LEGALNAME1,
    i.CODE,
    i.SUBCODE01,
    i.SUBCODE02,
    i.SUBCODE03,
    i.SUBCODE04,
    i.SUBCODE05,
    i.SUBCODE06,
    i.SUBCODE07,
    i.SUBCODE08,
    i.SUBCODE09,
    i.SUBCODE10
    --ORDER BY 
    --    i.PROVISIONALCODE ASC;


-- DB2ADMIN.ITXVIEW_PERSEDIAANGKJ source

CREATE VIEW ITXVIEW_PERSEDIAANGKJ AS
SELECT
    VARCHAR_FORMAT(BALANCE.CREATIONDATETIME, 'dd MONTH yyyy') AS TGL_BALANCE,
    trim(BALANCE.DECOSUBCODE02) || trim(BALANCE.DECOSUBCODE03) AS NO_ITEM,
    trim(BUSINESSPARTNER.LEGALNAME1) AS LANGGANAN,
    CASE 
        WHEN trim(SALESORDER.ORDERPARTNERBRANDCODE) IS NULL THEN 'Periksa kembali kolom BRAND di SALESORDER. User : ' || trim(SALESORDER.CREATIONUSER)
        ELSE trim(SALESORDER.ORDERPARTNERBRANDCODE)
    END AS BUYER,
    CASE 
        WHEN trim(SALESORDER.EXTERNALREFERENCE) IS NULL THEN trim(SALESORDERLINE.EXTERNALREFERENCE)
        ELSE trim(SALESORDER.EXTERNALREFERENCE)
    END AS PO,
    BALANCE.PROJECTCODE AS NO_ORDER,
    trim(SALESORDERLINE.ITEMDESCRIPTION) AS JENIS_KAIN,
    BALANCE.DECOSUBCODE05 AS NO_WARNA,
    USERGENERICGROUP.LONGDESCRIPTION AS WARNA,
    CASE 
        WHEN trim(SALESORDER.REQUIREDDUEDATE) IS NULL THEN 'Periksa kembali kolom REQUEST DUE DATE & CONFIRM DUE DATE di SALESORDER. User : ' || trim(SALESORDER.CREATIONUSER)
        ELSE VARCHAR_FORMAT(SALESORDER.REQUIREDDUEDATE, 'dd MONTH yyyy')
    END AS DELIVERY,	
    BALANCE.LOTCODE AS LOT,
    BALANCE.ELEMENTSCODE AS SN ,
    BALANCE.BASEPRIMARYQUANTITYUNIT AS KG,
    CASE 
        WHEN BALANCE.QUALITYLEVELCODE = '1' THEN 'A'
        WHEN BALANCE.QUALITYLEVELCODE = '2' THEN 'B'
        ELSE 'C'
    END AS GRADE,
    BALANCE.BASESECONDARYQUANTITYUNIT AS LENGTH,
    BALANCE.BASESECONDARYUNITCODE AS SATUAN,
    BALANCE.WAREHOUSELOCATIONCODE AS LOKASI,
    trim(SALESORDER.CREATIONUSER) AS USER_SALESORDER,
    CASE
        WHEN STOCKTRANSACTION.QUALITYREASONCODE IS NULL THEN 
        CASE 
            WHEN SUBSTRING(STOCKTRANSACTION.PROJECTCODE, 0, 4) = 'OPN' THEN 'Booking'
            WHEN SUBSTRING(STOCKTRANSACTION.PROJECTCODE, 0, 4) = 'STO' THEN 'Booking'
            WHEN SUBSTRING(STOCKTRANSACTION.PROJECTCODE, 0, 4) = 'RPE' THEN 'Ganti Kain '
            ELSE 'Tunggu Kirim'
        END
        ELSE QUALITYREASON.LONGDESCRIPTION
    END AS STATUS_KAIN
FROM
    BALANCE BALANCE
LEFT JOIN SALESORDER SALESORDER ON
    BALANCE.PROJECTCODE = SALESORDER.CODE
LEFT JOIN USERGENERICGROUP USERGENERICGROUP ON
    BALANCE.DECOSUBCODE05 = USERGENERICGROUP.CODE
LEFT JOIN ORDERPARTNER ORDERPARTNER ON
    ORDERPARTNER.CUSTOMERSUPPLIERCODE = SALESORDER.ORDPRNCUSTOMERSUPPLIERCODE
LEFT JOIN BUSINESSPARTNER BUSINESSPARTNER ON
    BUSINESSPARTNER.NUMBERID = ORDERPARTNER.ORDERBUSINESSPARTNERNUMBERID
LEFT JOIN PRODUCTIONRESERVATION PRODUCTIONRESERVATION ON
    PRODUCTIONRESERVATION.PRODUCTIONORDERCODE = BALANCE.LOTCODE
    AND PRODUCTIONRESERVATION.PROJECTCODE = BALANCE.PROJECTCODE
LEFT JOIN PRODUCTIONDEMAND PRODUCTIONDEMAND ON
    PRODUCTIONDEMAND.CODE = PRODUCTIONRESERVATION.ORDERCODE
LEFT JOIN SALESORDERLINE SALESORDERLINE ON
    SALESORDERLINE.SALESORDERCODE = BALANCE.PROJECTCODE
    AND BALANCE.DECOSUBCODE01 = SALESORDERLINE.SUBCODE01
    AND BALANCE.DECOSUBCODE02 = SALESORDERLINE.SUBCODE02
    AND BALANCE.DECOSUBCODE03 = SALESORDERLINE.SUBCODE03
    AND BALANCE.DECOSUBCODE04 = SALESORDERLINE.SUBCODE04
    AND BALANCE.DECOSUBCODE05 = SALESORDERLINE.SUBCODE05
    AND BALANCE.DECOSUBCODE06 = SALESORDERLINE.SUBCODE06
    AND BALANCE.DECOSUBCODE07 = SALESORDERLINE.SUBCODE07
    AND BALANCE.DECOSUBCODE08 = SALESORDERLINE.SUBCODE08
    AND SALESORDERLINE.ORDERLINE = PRODUCTIONDEMAND.DLVSALESORDERLINEORDERLINE
LEFT JOIN (
        SELECT
            *
        FROM
            (
                SELECT
                    ROW_NUMBER() OVER(
                    ORDER BY
                        STOCKTRANSACTION.CREATIONDATETIME DESC
                    ) AS MYROW,
                    STOCKTRANSACTION.ITEMELEMENTCODE,
                    STOCKTRANSACTION.PROJECTCODE,
                    STOCKTRANSACTION.QUALITYREASONCODE
                FROM
                    STOCKTRANSACTION
            )
    )STOCKTRANSACTION ON
    STOCKTRANSACTION.ITEMELEMENTCODE = BALANCE.ELEMENTSCODE
    AND STOCKTRANSACTION.PROJECTCODE = BALANCE.PROJECTCODE
LEFT JOIN QUALITYREASON QUALITYREASON ON
    STOCKTRANSACTION.QUALITYREASONCODE = QUALITYREASON.CODE
WHERE
    BALANCE.ITEMTYPECODE = 'KFF'
    AND BALANCE.LOGICALWAREHOUSECODE = 'M031'
    AND BALANCE.LOTCODE LIKE '%000%'
    AND VARCHAR_FORMAT(BALANCE.CREATIONDATETIME, 'yyyy') = '2022'
    AND NOT SALESORDER.CODE IS NULL
GROUP BY 
    BALANCE.CREATIONDATETIME,
    BALANCE.DECOSUBCODE02,
    BALANCE.DECOSUBCODE03,
    BUSINESSPARTNER.LEGALNAME1,
    SALESORDER.ORDERPARTNERBRANDCODE,
    SALESORDER.EXTERNALREFERENCE,
    SALESORDERLINE.EXTERNALREFERENCE,
    SALESORDERLINE.ITEMDESCRIPTION,
    BALANCE.PROJECTCODE,
    BALANCE.DECOSUBCODE05,
    USERGENERICGROUP.LONGDESCRIPTION,
    SALESORDER.REQUIREDDUEDATE,	
    BALANCE.LOTCODE,
    BALANCE.ELEMENTSCODE,
    BALANCE.BASEPRIMARYQUANTITYUNIT,
    BALANCE.QUALITYLEVELCODE,
    BALANCE.BASESECONDARYQUANTITYUNIT,
    BALANCE.BASESECONDARYUNITCODE,
    BALANCE.WAREHOUSELOCATIONCODE,
    SALESORDER.CREATIONUSER,
    STOCKTRANSACTION.QUALITYREASONCODE,
    STOCKTRANSACTION.PROJECTCODE,
    QUALITYREASON.LONGDESCRIPTION;


-- DB2ADMIN.ITXVIEW_PERSEDIAANKAINJADI source

CREATE VIEW ITXVIEW_PERSEDIAANKAINJADI AS
SELECT
    VARCHAR_FORMAT (
        BALANCE.CREATIONDATETIME,
        'dd MONTH yyyy'
    ) AS TGL_BALANCE,
    trim(BALANCE.DECOSUBCODE02) || trim(BALANCE.DECOSUBCODE03) AS NO_ITEM,
    trim(BUSINESSPARTNER.LEGALNAME1) AS LANGGANAN,
    CASE
        WHEN trim(SALESORDER.ORDERPARTNERBRANDCODE) IS NULL THEN 'Periksa kembali kolom BRAND di SALESORDER. User : ' || trim(SALESORDER.CREATIONUSER)
        ELSE trim(SALESORDER.ORDERPARTNERBRANDCODE)
    END AS BUYER,
    CASE
        WHEN trim(SALESORDER.EXTERNALREFERENCE) IS NULL THEN trim(SALESORDERLINE.EXTERNALREFERENCE)
        ELSE trim(SALESORDER.EXTERNALREFERENCE)
    END AS PO,
    BALANCE.PROJECTCODE AS NO_ORDER,
    trim(SALESORDERLINE.ITEMDESCRIPTION) AS JENIS_KAIN,
    BALANCE.DECOSUBCODE05 AS NO_WARNA,
    USERGENERICGROUP.LONGDESCRIPTION AS WARNA,
    CASE
        WHEN trim(SALESORDER.REQUIREDDUEDATE) IS NULL THEN 'Periksa kembali kolom REQUEST DUE DATE & CONFIRM DUE DATE di SALESORDER. User : ' || trim(SALESORDER.CREATIONUSER)
        ELSE VARCHAR_FORMAT (
            SALESORDER.REQUIREDDUEDATE,
            'dd MONTH yyyy'
        )
    END AS DELIVERY,
    BALANCE.LOTCODE AS LOT,
    BALANCE.ELEMENTSCODE AS SN,
    BALANCE.BASEPRIMARYQUANTITYUNIT AS KG,
    CASE
        WHEN BALANCE.QUALITYLEVELCODE = '1' THEN 'A'
        WHEN BALANCE.QUALITYLEVELCODE = '2' THEN 'B'
        ELSE 'C'
    END AS GRADE,
    BALANCE.BASESECONDARYQUANTITYUNIT AS LENGTH,
    BALANCE.BASESECONDARYUNITCODE AS SATUAN,
    BALANCE.WAREHOUSELOCATIONCODE AS LOKASI,
    trim(SALESORDER.CREATIONUSER) AS USER_SALESORDER,
    CASE
        WHEN STOCKTRANSACTION.QUALITYREASONCODE IS NULL THEN CASE
            WHEN SUBSTRING( STOCKTRANSACTION.PROJECTCODE, 0, 4 ) = 'OPN' THEN 'Booking'
            WHEN SUBSTRING( STOCKTRANSACTION.PROJECTCODE, 0, 4 ) = 'STO' THEN 'Booking'
            WHEN SUBSTRING( STOCKTRANSACTION.PROJECTCODE, 0, 4 ) = 'RPE' THEN 'Ganti Kain '
            ELSE 'Tunggu Kirim'
        END
        ELSE QUALITYREASON.LONGDESCRIPTION
    END AS STATUS_KAIN
FROM
    BALANCE BALANCE
LEFT JOIN SALESORDER SALESORDER ON
    BALANCE.PROJECTCODE = SALESORDER. CODE
LEFT JOIN USERGENERICGROUP USERGENERICGROUP ON
    BALANCE.DECOSUBCODE05 = USERGENERICGROUP. CODE
LEFT JOIN ORDERPARTNER ORDERPARTNER ON
    ORDERPARTNER.CUSTOMERSUPPLIERCODE = SALESORDER.ORDPRNCUSTOMERSUPPLIERCODE
LEFT JOIN BUSINESSPARTNER BUSINESSPARTNER ON
    BUSINESSPARTNER.NUMBERID = ORDERPARTNER.ORDERBUSINESSPARTNERNUMBERID
LEFT JOIN PRODUCTIONRESERVATION PRODUCTIONRESERVATION ON
    PRODUCTIONRESERVATION.PRODUCTIONORDERCODE = BALANCE.LOTCODE
    AND PRODUCTIONRESERVATION.PROJECTCODE = BALANCE.PROJECTCODE
LEFT JOIN PRODUCTIONDEMAND PRODUCTIONDEMAND ON
    PRODUCTIONDEMAND.CODE = PRODUCTIONRESERVATION.ORDERCODE
LEFT JOIN SALESORDERLINE SALESORDERLINE ON
    SALESORDERLINE.SALESORDERCODE = BALANCE.PROJECTCODE
    AND BALANCE.DECOSUBCODE01 = SALESORDERLINE.SUBCODE01
    AND BALANCE.DECOSUBCODE02 = SALESORDERLINE.SUBCODE02
    AND BALANCE.DECOSUBCODE03 = SALESORDERLINE.SUBCODE03
    AND BALANCE.DECOSUBCODE04 = SALESORDERLINE.SUBCODE04
    AND BALANCE.DECOSUBCODE05 = SALESORDERLINE.SUBCODE05
    AND BALANCE.DECOSUBCODE06 = SALESORDERLINE.SUBCODE06
    AND BALANCE.DECOSUBCODE07 = SALESORDERLINE.SUBCODE07
    AND BALANCE.DECOSUBCODE08 = SALESORDERLINE.SUBCODE08
    AND SALESORDERLINE.ORDERLINE = PRODUCTIONDEMAND.DLVSALESORDERLINEORDERLINE
LEFT JOIN (
        SELECT
            *
        FROM
            (
                SELECT
                    ROW_NUMBER() OVER (
                    ORDER BY
                        STOCKTRANSACTION.CREATIONDATETIME DESC
                    ) AS MYROW,
                    STOCKTRANSACTION.ITEMELEMENTCODE,
                    STOCKTRANSACTION.PROJECTCODE,
                    STOCKTRANSACTION.QUALITYREASONCODE
                FROM
                    STOCKTRANSACTION
            )
    ) STOCKTRANSACTION ON
    STOCKTRANSACTION.ITEMELEMENTCODE = BALANCE.ELEMENTSCODE
    AND STOCKTRANSACTION.PROJECTCODE = BALANCE.PROJECTCODE
LEFT JOIN QUALITYREASON QUALITYREASON ON
    STOCKTRANSACTION.QUALITYREASONCODE = QUALITYREASON.CODE
WHERE
    BALANCE.ITEMTYPECODE = 'KFF'
    AND BALANCE.LOGICALWAREHOUSECODE = 'M031'
    AND BALANCE.LOTCODE LIKE '%$lot%'
    AND VARCHAR_FORMAT (
        BALANCE.CREATIONDATETIME,
        'yyyy'
    ) = '$thn'
    AND NOT SALESORDER.CODE IS NULL
GROUP BY
    BALANCE.CREATIONDATETIME,
    BALANCE.DECOSUBCODE02,
    BALANCE.DECOSUBCODE03,
    BUSINESSPARTNER.LEGALNAME1,
    SALESORDER.ORDERPARTNERBRANDCODE,
    SALESORDER.EXTERNALREFERENCE,
    SALESORDERLINE.EXTERNALREFERENCE,
    SALESORDERLINE.ITEMDESCRIPTION,
    BALANCE.PROJECTCODE,
    BALANCE.DECOSUBCODE05,
    USERGENERICGROUP.LONGDESCRIPTION,
    SALESORDER.REQUIREDDUEDATE,
    BALANCE.LOTCODE,
    BALANCE.ELEMENTSCODE,
    BALANCE.BASEPRIMARYQUANTITYUNIT,
    BALANCE.QUALITYLEVELCODE,
    BALANCE.BASESECONDARYQUANTITYUNIT,
    BALANCE.BASESECONDARYUNITCODE,
    BALANCE.WAREHOUSELOCATIONCODE,
    SALESORDER.CREATIONUSER,
    STOCKTRANSACTION.QUALITYREASONCODE,
    STOCKTRANSACTION.PROJECTCODE,
    QUALITYREASON.LONGDESCRIPTION;


-- DB2ADMIN.ITXVIEW_PI_BIAYATAMBAHAN source

CREATE VIEW ITXVIEW_PI_BIAYATAMBAHAN AS
SELECT
    SALESORDERCODE,
    KET,
    sum(BIAYA_TAMBAHAN) AS BIAYA_TAMBAHAN,
    JUDUL
FROM
    (
        SELECT
            s.SALESORDERCODE AS SALESORDERCODE,
            i.ITAXCODE AS KET,
            sum(i.VALUE)AS BIAYA_TAMBAHAN,
            CASE
                WHEN i.ITAXCODE = 'SUR'
                OR i.ITAXCODE = 'CFR'
                AND i.VALUE <> 0 THEN 'Total Surcharge MOQ'
                WHEN i.ITAXCODE = 'MCQ'
                OR i.ITAXCODE = 'SCR'
                OR i.ITAXCODE = 'CRF'
                AND i.VALUE <> 0 THEN 'Total Surcharge MCQ'
                WHEN i.ITAXCODE = 'SUS'
                AND i.VALUE <> 0 THEN 'Total Surcharge'
            END AS JUDUL
        FROM
            SALESORDERLINE s
        LEFT JOIN INDTAXDETAIL i ON
            i.ABSUNIQUEID = s.ABSUNIQUEID
        WHERE
            (
                i.ITAXCODE = 'SUR'
                    OR i.ITAXCODE = 'SCR'
                    OR i.ITAXCODE = 'MCQ'
                    OR i.ITAXCODE = 'SUS'
                    OR i.ITAXCODE = 'CRF'
                    OR i.ITAXCODE = 'CFR'
            )
            AND NOT i.value = 0
            AND NOT s.LINESTATUS = 2
        GROUP BY
            i.ITAXCODE,
            i.VALUE,
            s.SALESORDERCODE
    )
GROUP BY
    SALESORDERCODE,
    KET,
    JUDUL;


-- DB2ADMIN.ITXVIEW_PI_BIAYATAMBAHAN2 source

CREATE VIEW ITXVIEW_PI_BIAYATAMBAHAN2 AS
	SELECT
    DISTINCT 
	s.ABSUNIQUEID,
    s.SALESORDERCODE,
    i.VALUE AS bank_charge,
    CASE
        WHEN i.ITAXCODE IN(
            'OH1', 'OH3'
        )
        AND i.VALUE <> 0 THEN i.ITAXCODE
        WHEN i2.ITAXCODE IN(
            'SUR', 'MCQ', 'SCR'
        )
        AND i2.VALUE <> 0 THEN i2.ITAXCODE
        WHEN i3.ITAXCODE IN (
            'FR1', 'CFR', 'SUS'
        )
        AND i3.VALUE <> 0 THEN i3.ITAXCODE
    END AS ket,
    CASE
        WHEN i.ITAXCODE IN(
            'OH1', 'OH3'
        ) THEN 'Bank Charge'
    END AS ket_bankCharge,
    CASE
        WHEN i2.VALUE <> 0 THEN i2.VALUE
    END AS surcharge,
    CASE
        WHEN i2.ITAXCODE = 'SUR'
        AND i2.VALUE <> 0 THEN 'Total Surcharge MOQ'
        WHEN i2.ITAXCODE = 'MCQ'
        OR i2.ITAXCODE = 'SCR'
        AND i2.VALUE <> 0 THEN 'Total Surcharge MCQ'
    END AS ket_surCharge,
    CASE
        WHEN i3.value <> 0 THEN i3.value
    END AS freight,
    CASE
        WHEN i3.ITAXCODE = 'FR1'
        OR i3.ITAXCODE = 'CFR'
        OR i3.ITAXCODE = 'SUS'
        AND i3.VALUE <> 0 THEN 'Surcharge Export'
    END AS ket_Freight
FROM
    SALESORDERLINE s
LEFT JOIN INDTAXDETAIL i ON
    i.ABSUNIQUEID = s.ABSUNIQUEID
    AND i.ITAXCODE IN(
        'OH1', 'OH3'
    )
    AND i.VALUE <> 0
LEFT JOIN INDTAXDETAIL i2 ON
    i2.ABSUNIQUEID = s.ABSUNIQUEID
    AND i2.ITAXCODE IN(
        'SCR', 'MCQ', 'SUR'
    )
    AND i2.VALUE <> 0
LEFT JOIN INDTAXDETAIL i3 ON
    i3.ABSUNIQUEID = s.ABSUNIQUEID
    AND i3.ITAXCODE IN(
        'FR1', 'CFR', 'SUS', 'CRF'
    )
    AND i3.VALUE <> 0
WHERE
    (
        i.VALUE <> 0
            OR i2.VALUE <> 0
            OR i3.VALUE <> 0
    );


-- DB2ADMIN.ITXVIEW_PI_GRAMASI source

CREATE VIEW ITXVIEW_PI_GRAMASI AS 
SELECT
    s2.SALESORDERCODE,
    p.ITEMTYPECODE,
    p.LONGDESCRIPTION,
    p.SUBCODE01,
    p.SUBCODE02,
    p.SUBCODE03,
    p.SUBCODE04,
    p.SUBCODE05,
    p.SUBCODE06,
    p.SUBCODE07,
    p.SUBCODE08,
    p.SUBCODE09,
    p.SUBCODE10,
    CASE
        WHEN p.ITEMTYPECODE = 'FKF' THEN CAST(
            SUBSTR(p.SUBCODE04, 1, LOCATE('-', p.SUBCODE04)-1) AS CHARACTER(10)
        )
        WHEN p.ITEMTYPECODE = 'KFF' THEN a6.VALUEDECIMAL
    END width,
    CASE
        WHEN p.ITEMTYPECODE = 'FKF' THEN SUBSTR(SUBSTR(p.SUBCODE04, 3, LOCATE('-', p.SUBCODE04)+ 1), LOCATE('-', p.SUBCODE04)- 1)
        WHEN p.ITEMTYPECODE = 'KFF' THEN a5.VALUEDECIMAL
    END AS GSM
FROM
    SALESORDER s
LEFT JOIN SALESORDERLINE s2 ON
    s2.SALESORDERCODE = s.CODE
LEFT JOIN PRODUCT p ON
    p.ITEMTYPECODE = s2.ITEMTYPEAFICODE
    AND p.SUBCODE01 = s2.SUBCODE01
    AND p.SUBCODE02 = s2.SUBCODE02
    AND p.SUBCODE03 = s2.SUBCODE03
    AND p.SUBCODE04 = s2.SUBCODE04
    AND p.SUBCODE05 = s2.SUBCODE05
    AND p.SUBCODE06 = s2.SUBCODE06
    AND p.SUBCODE07 = s2.SUBCODE07
    AND p.SUBCODE08 = s2.SUBCODE08
    AND p.SUBCODE09 = s2.SUBCODE09
    AND p.SUBCODE10 = s2.SUBCODE10
LEFT JOIN ADSTORAGE a5 ON
    p.ABSUNIQUEID = a5.UNIQUEID
    AND a5.NAMENAME = 'GSM'
LEFT JOIN ADSTORAGE a6 ON
    p.ABSUNIQUEID = a6.UNIQUEID
    AND a6.NAMENAME = 'Width'
    --WHERE 
    --s2.SALESORDERCODE ='SME2300384';


-- DB2ADMIN.ITXVIEW_PI_KETBIAYATAMBAHAN source

CREATE VIEW ITXVIEW_PI_KETBIAYATAMBAHAN AS
    SELECT
       	i.ABSUNIQUEID,
        i.ITAXCODE AS KET,
        sum(i.VALUE)AS BIAYA_TAMBAHAN,
        CASE
            WHEN i.ITAXCODE = 'SUR'
        AND i.VALUE <> 0 THEN 'Surcharge MOQ'
        WHEN i.ITAXCODE = 'MCQ'
        OR i.ITAXCODE = 'SCR'
        AND i.VALUE <> 0 THEN 'Surcharge MCQ'
    END AS JUDUL
FROM
       INDTAXDETAIL i
WHERE
        (
        i.ITAXCODE = 'SUR'
            OR i.ITAXCODE = 'SCR'
            OR i.ITAXCODE = 'MCQ'
    )
    AND NOT i.value = 0
    --        	    AND s.SALESORDERCODE ='EXP2300538'
GROUP BY
        i.ITAXCODE,
        i.ABSUNIQUEID,
        i.VALUE;


-- DB2ADMIN.ITXVIEW_PLY_KNT source

CREATE VIEW ITXVIEW_PLY_KNT AS
SELECT
    ADSTORAGE.UNIQUEID,
    ADSTORAGE.FIELDNAME,
    ADSTORAGE.VALUEDECIMAL
FROM
    DB2ADMIN.ADSTORAGE ADSTORAGE
RIGHT OUTER JOIN DB2ADMIN.PRODUCT PRODUCT ON
    ADSTORAGE.UNIQUEID = PRODUCT.ABSUNIQUEID
WHERE
    ADSTORAGE.FIELDNAME = 'ply';


-- DB2ADMIN.ITXVIEW_POBUYER source

CREATE VIEW ITXVIEW_POBUYER AS
SELECT
    ADSTORAGE.NAMENAME,
    ADSTORAGE.VALUESTRING,
    SALESORDER.CODE
FROM
    DB2ADMIN.ADSTORAGE ADSTORAGE
RIGHT OUTER JOIN DB2ADMIN.SALESORDER SALESORDER ON
    ADSTORAGE.UNIQUEID = SALESORDER.ABSUNIQUEID
WHERE
    NAMENAME = 'BuyersPONumber';


-- DB2ADMIN.ITXVIEW_POSELESAI source

CREATE VIEW ITXVIEW_POSELESAI AS
SELECT
    NO_ORDER,
    PO_NUMBER,
    LEGALNAME1,
    WARNA,
    SUM(QTY_KEBUTUHAN_KG) AS QTY_KEBUTUHAN_KG,
    SUM(QTY_KEBUTUHAN_YD_MTR) AS QTY_KEBUTUHAN_YD_MTR,
    SUM(QTY_PACKING_KG) AS QTY_PACKING_KG,
    SUM(QTY_PACKING_YD_MTR) AS QTY_PACKING_YD_MTR,
    SUM(QTY_KEBUTUHAN_KG) - SUM(QTY_KIRIM_KG) AS QTY_KURANG_KG,
    SUM(QTY_KEBUTUHAN_YD_MTR) - SUM(QTY_KIRIM_YD_MTR) AS QTY_KURANG_YD_MTR,
    NO_SJ,
    CASE
        WHEN FOC = 'FOC' THEN FOC
        ELSE ''
    END AS FOC,
    TGL_KIRIM,
    SUM(QTY_KIRIM_KG) AS QTY_KIRIM_KG,
    SUM(QTY_KIRIM_YD_MTR) AS QTY_KIRIM_YD_MTR
FROM
    (
        SELECT
            isp.DLVSALORDERLINESALESORDERCODE AS NO_ORDER,
            isp.PO_NUMBER,
            isp.LEGALNAME1,
            TRIM(isp.DECOSUBCODE01) || '-' || TRIM(isp.DECOSUBCODE02) || '-' || TRIM(isp.DECOSUBCODE03) || '-' || TRIM(isp.DECOSUBCODE04) || '-' || TRIM(isp.DECOSUBCODE05) || '-' || TRIM(isp.DECOSUBCODE06) || '-' || TRIM(isp.DECOSUBCODE07) || '-' || TRIM(isp.DECOSUBCODE08) || '-' || TRIM(isp.DECOSUBCODE09) || '-' || TRIM(isp.DECOSUBCODE10) AS KODE_ITEM,
            i.WARNA,
            ik.QTY_KEBUTUHAN_KG,
            ik.QTY_KEBUTUHAN_YD_MTR,
            QTY_PACKING_KG,
            QTY_PACKING_YD_MTR,
            isp.PROVISIONALCODE AS NO_SJ,
            isp.PAYMENTMETHODCODE AS FOC,
            isp.GOODSISSUEDATE AS TGL_KIRIM,
            SUM(iasp.BASEPRIMARYQUANTITY) AS QTY_KIRIM_KG,
            CASE
                WHEN isp.PRICEUNITOFMEASURECODE = 'yd' THEN SUM(iasp.BASESECONDARYQUANTITY)
                WHEN isp.PRICEUNITOFMEASURECODE = 'kg' THEN SUM(iasp.BASESECONDARYQUANTITY)
                WHEN isp.PRICEUNITOFMEASURECODE = 'm' THEN SUM(round(iasp.BASESECONDARYQUANTITY, 2) * 0.9144)
            END AS QTY_KIRIM_YD_MTR
        FROM
            ITXVIEW_SURATJALAN_PPC isp
        LEFT JOIN ITXVIEW_ALLOCATION_SURATJALAN_PPC iasp ON
            iasp.CODE = isp.CODE
        LEFT JOIN ITXVIEWCOLOR i ON
            i.ITEMTYPECODE = isp.ITEMTYPEAFICODE
            AND i.SUBCODE01 = isp.DECOSUBCODE01
            AND i.SUBCODE02 = isp.DECOSUBCODE02
            AND i.SUBCODE03 = isp.DECOSUBCODE03
            AND i.SUBCODE04 = isp.DECOSUBCODE04
            AND i.SUBCODE05 = isp.DECOSUBCODE05
            AND i.SUBCODE06 = isp.DECOSUBCODE06
            AND i.SUBCODE07 = isp.DECOSUBCODE07
            AND i.SUBCODE08 = isp.DECOSUBCODE08
            AND i.SUBCODE09 = isp.DECOSUBCODE09
            AND i.SUBCODE10 = isp.DECOSUBCODE10
        LEFT JOIN (
                SELECT
                    ik.PROJECTCODE,
                    ik.ORIGDLVSALORDERLINEORDERLINE,
                    SUM(ik.USERPRIMARYQUANTITY) AS QTY_KEBUTUHAN_KG,
                    SUM(ik.USERSECONDARYQUANTITY) AS QTY_KEBUTUHAN_YD_MTR
                FROM
                    ITXVIEW_KGBRUTO ik
                WHERE
                    ik.VALUESTRING IS NULL
                GROUP BY
                    ik.PROJECTCODE,
                    ik.ORIGDLVSALORDERLINEORDERLINE
            ) ik ON
            ik.PROJECTCODE = isp.DLVSALORDERLINESALESORDERCODE
            AND ik.ORIGDLVSALORDERLINEORDERLINE = isp.DLVSALESORDERLINEORDERLINE
        LEFT JOIN (
                SELECT
                    QTY_PACKING.PRODUCTIONORDERCODE,
                    QTY_PACKING.DLVSALESORDERLINEORDERLINE,
                    SUM(QTY_PACKING_KG) AS QTY_PACKING_KG,
                    SUM(QTY_PACKING_YD_MTR) AS QTY_PACKING_YD_MTR
                FROM
                    (
                        SELECT
                            p.PRODUCTIONORDERCODE,
                            p.PRODUCTIONDEMANDCODE,
                            p2.DLVSALESORDERLINEORDERLINE,
                            p2.ENTEREDUSERPRIMARYQUANTITY AS QTY_PACKING_KG,
                            p2.ENTEREDUSERSECONDARYQUANTITY AS QTY_PACKING_YD_MTR
                        FROM
                            PRODUCTIONDEMANDSTEP p
                        LEFT JOIN PRODUCTIONDEMAND p2 ON
                            p2.CODE = p.PRODUCTIONDEMANDCODE
                        GROUP BY
                            p.PRODUCTIONORDERCODE,
                            p2.DLVSALESORDERLINEORDERLINE,
                            p.PRODUCTIONDEMANDCODE,
                            p2.ENTEREDUSERPRIMARYQUANTITY,
                            p2.ENTEREDUSERSECONDARYQUANTITY
                    ) QTY_PACKING
                GROUP BY
                    QTY_PACKING.PRODUCTIONORDERCODE,
                    QTY_PACKING.DLVSALESORDERLINEORDERLINE
            ) QTY_PACKING ON
            QTY_PACKING.PRODUCTIONORDERCODE = iasp.LOTCODE
            AND QTY_PACKING.DLVSALESORDERLINEORDERLINE = isp.DLVSALESORDERLINEORDERLINE
        GROUP BY
            isp.DLVSALORDERLINESALESORDERCODE,
            isp.PO_NUMBER,
            isp.LEGALNAME1,
            isp.DECOSUBCODE01,
            isp.DECOSUBCODE02,
            isp.DECOSUBCODE03,
            isp.DECOSUBCODE04,
            isp.DECOSUBCODE05,
            isp.DECOSUBCODE06,
            isp.DECOSUBCODE07,
            isp.DECOSUBCODE08,
            isp.DECOSUBCODE09,
            isp.DECOSUBCODE10,
            i.WARNA,
            ik.QTY_KEBUTUHAN_KG,
            ik.QTY_KEBUTUHAN_YD_MTR,
            QTY_PACKING_KG,
            QTY_PACKING_YD_MTR,
            isp.PRICEUNITOFMEASURECODE,
            isp.PROVISIONALCODE,
            isp.GOODSISSUEDATE,
            isp.PAYMENTMETHODCODE
    )
WHERE
    NOT NO_ORDER IS NULL
GROUP BY
    NO_ORDER,
    PO_NUMBER,
    LEGALNAME1,
    WARNA,
    NO_SJ,
    TGL_KIRIM,
    FOC;


-- DB2ADMIN.ITXVIEW_POSISIKK source

CREATE VIEW ITXVIEW_POSISIKK AS
SELECT
    *
FROM
    (
        SELECT
            p.PRODUCTIONORDERCODE,
            p.PRODUCTIONDEMANDCODE,
            p.STEPNUMBER,
            TRIM(p.OPERATIONCODE) AS OPERATIONCODE,
            (iptip.MULAI) AS MULAI,
            (iptop.SELESAI) AS SELESAI
        FROM
            PRODUCTIONDEMANDSTEP p
        LEFT JOIN ITXVIEW_POSISIKK_TGL_IN_PRODORDER iptip ON
            iptip.PRODUCTIONORDERCODE = p.PRODUCTIONORDERCODE
            AND iptip.DEMANDSTEPSTEPNUMBER = p.STEPNUMBER
        LEFT JOIN ITXVIEW_POSISIKK_TGL_OUT_PRODORDER iptop ON
            iptop.PRODUCTIONORDERCODE = p.PRODUCTIONORDERCODE
            AND iptop.DEMANDSTEPSTEPNUMBER = p.STEPNUMBER
        ORDER BY
            p.STEPNUMBER ASC
    );


-- DB2ADMIN.ITXVIEW_POSISIKK_MUTASI source

CREATE VIEW ITXVIEW_POSISIKK_MUTASI AS
SELECT
    DISTINCT 
	p.PROGRESSSTARTPROCESSDATE,
    p.OPERATIONCODE,
    p.PRODUCTIONORDERCODE,
    p2.DEMANDSTEPPRODUCTIONDEMANDCODE
FROM
    PRODUCTIONPROGRESS p
LEFT JOIN PRODUCTIONPROGRESSSTEPUPDATED p2 ON
    p2.PROPROGRESSPROGRESSNUMBER = p.PROGRESSNUMBER
    AND p.PROGRESSTEMPLATECODE = 'S01'
WHERE
    --	p.PROGRESSSTARTPROCESSDATE BETWEEN '2023-10-01' AND '2023-10-07'
    --	AND
    p.OPERATIONCODE = 'GKJ1';


-- DB2ADMIN.ITXVIEW_POSISIKK_TGL_IN_PRODDEMAND source

CREATE VIEW ITXVIEW_POSISIKK_TGL_IN_PRODDEMAND AS
SELECT
    p.DEMANDSTEPPRODUCTIONDEMANDCODE,
    p.PROPROGRESSPROGRESSNUMBER,
    p.DEMANDSTEPSTEPNUMBER,
    LISTAGG(
        p2.PROGRESSSTARTPROCESSDATE || ' ' || PROGRESSSTARTPROCESSTIME ,
        ','
    ) AS MULAI
FROM
    PRODUCTIONPROGRESSSTEPUPDATED p
RIGHT JOIN PRODUCTIONPROGRESS p2 ON
    p2.PROGRESSNUMBER = p.PROPROGRESSPROGRESSNUMBER
    AND p2.PROGRESSTEMPLATECODE = 'S01'
    --WHERE p.DEMANDSTEPPRODUCTIONDEMANDCODE = '$rowdb2[PRODUCTIONDEMANDCODE]' AND p.DEMANDSTEPSTEPNUMBER = '$rowdb2[STEPNUMBER]'
GROUP BY
    p.DEMANDSTEPPRODUCTIONDEMANDCODE,
    p.PROPROGRESSPROGRESSNUMBER,
    p.DEMANDSTEPSTEPNUMBER;


-- DB2ADMIN.ITXVIEW_POSISIKK_TGL_IN_PRODORDER source

CREATE VIEW ITXVIEW_POSISIKK_TGL_IN_PRODORDER AS
SELECT
    DISTINCT 
    v.PRODUCTIONORDERCODE,
    v.OPERATIONCODE,
    p.PROPROGRESSPROGRESSNUMBER,
    p.DEMANDSTEPSTEPNUMBER,
    p2.PROGRESSTEMPLATECODE,
    p2.PROGRESSSTARTPROCESSDATE,
    p2.PROGRESSSTARTPROCESSTIME,
    (
        p2.PROGRESSSTARTPROCESSDATE || ' ' || p2.PROGRESSSTARTPROCESSTIME
    ) AS MULAI,
    p2.MACHINECODE,
    p2.INACTIVE,
    r.LONGDESCRIPTION
FROM
    PRODUCTIONDEMANDSTEP v
LEFT JOIN PRODUCTIONPROGRESSSTEPUPDATED p ON
    p.DEMANDSTEPPRODUCTIONDEMANDCODE = v.PRODUCTIONDEMANDCODE
RIGHT JOIN PRODUCTIONPROGRESS p2 ON
    p2.PROGRESSNUMBER = p.PROPROGRESSPROGRESSNUMBER
    AND p2.PROGRESSTEMPLATECODE = 'S01'
LEFT JOIN RESOURCES r ON
    r.CODE = p2.OPERATORCODE
WHERE
    p2.INACTIVE = 1
    --	AND p2.PROGRESSSTARTPROCESSDATE BETWEEN '2024-04-01' AND '2024-04-01'
    --	AND v.OPERATIONCODE = 'BAT1'
    --	AND v.PRODUCTIONORDERCODE  = '00084354' 
    --		AND p.DEMANDSTEPSTEPNUMBER = '600';


-- DB2ADMIN.ITXVIEW_POSISIKK_TGL_IN_PRODORDER_CNP1 source

CREATE VIEW ITXVIEW_POSISIKK_TGL_IN_PRODORDER_CNP1 AS
SELECT
    DISTINCT 
    v.PRODUCTIONORDERCODE,
    p2.OPERATIONCODE,
    p.PROPROGRESSPROGRESSNUMBER,
    p.DEMANDSTEPSTEPNUMBER,
    p2.PROGRESSTEMPLATECODE,
    (
        p2.PROGRESSPARTIALENDDATE || ' ' || p2.PROGRESSPARTIALENDTIME
    ) AS MULAI,
    r.LONGDESCRIPTION AS OP
FROM
    PRODUCTIONDEMANDSTEP v
LEFT JOIN PRODUCTIONPROGRESSSTEPUPDATED p ON
    p.DEMANDSTEPPRODUCTIONDEMANDCODE = v.PRODUCTIONDEMANDCODE
RIGHT JOIN PRODUCTIONPROGRESS p2 ON
    p2.PROGRESSNUMBER = p.PROPROGRESSPROGRESSNUMBER
    AND p2.PROGRESSTEMPLATECODE = 'P01'
    AND p2.OPERATIONCODE = 'CNP1'
LEFT JOIN RESOURCES r ON
    r.CODE = p2.OPERATORCODE
    --WHERE 
    --	v.PRODUCTIONORDERCODE = '00076899' 
    --		AND p.DEMANDSTEPSTEPNUMBER = '600';


-- DB2ADMIN.ITXVIEW_POSISIKK_TGL_IN_PRODORDER_INS3 source

CREATE VIEW ITXVIEW_POSISIKK_TGL_IN_PRODORDER_INS3 AS
SELECT
    DISTINCT 
    v.PRODUCTIONORDERCODE,
    p2.OPERATIONCODE,
    p.PROPROGRESSPROGRESSNUMBER,
    p.DEMANDSTEPSTEPNUMBER,
    p2.PROGRESSTEMPLATECODE,
    (
        p2.PROGRESSPARTIALENDDATE || ' ' || p2.PROGRESSPARTIALENDTIME
    ) AS MULAI,
    r.LONGDESCRIPTION AS OP
FROM
    PRODUCTIONDEMANDSTEP v
LEFT JOIN PRODUCTIONPROGRESSSTEPUPDATED p ON
    p.DEMANDSTEPPRODUCTIONDEMANDCODE = v.PRODUCTIONDEMANDCODE
RIGHT JOIN PRODUCTIONPROGRESS p2 ON
    p2.PROGRESSNUMBER = p.PROPROGRESSPROGRESSNUMBER
    AND p2.PROGRESSTEMPLATECODE = 'P01'
    AND p2.OPERATIONCODE = 'INS3'
LEFT JOIN RESOURCES r ON
    r.CODE = p2.OPERATORCODE
    --WHERE 
    --	v.PRODUCTIONORDERCODE = '00083822' 
    --		AND p.DEMANDSTEPSTEPNUMBER = '600';


-- DB2ADMIN.ITXVIEW_POSISIKK_TGL_OUT_PRODDEMAND source

CREATE VIEW ITXVIEW_POSISIKK_TGL_OUT_PRODDEMAND AS
SELECT
    p.DEMANDSTEPPRODUCTIONDEMANDCODE,
    p.PROPROGRESSPROGRESSNUMBER,
    p.DEMANDSTEPSTEPNUMBER,
    LISTAGG(
        p2.PROGRESSENDDATE || ' ' || PROGRESSENDTIME,
        ','
    ) AS SELESAI
FROM
    PRODUCTIONPROGRESSSTEPUPDATED p
RIGHT JOIN PRODUCTIONPROGRESS p2 ON
    p2.PROGRESSNUMBER = p.PROPROGRESSPROGRESSNUMBER
    AND p2.PROGRESSTEMPLATECODE = 'E01'
    --WHERE p.DEMANDSTEPPRODUCTIONDEMANDCODE = '$rowdb2[PRODUCTIONDEMANDCODE]' AND p.DEMANDSTEPSTEPNUMBER = '$rowdb2[STEPNUMBER]'
GROUP BY
    p.DEMANDSTEPPRODUCTIONDEMANDCODE,
    p.PROPROGRESSPROGRESSNUMBER,
    p.DEMANDSTEPSTEPNUMBER;


-- DB2ADMIN.ITXVIEW_POSISIKK_TGL_OUT_PRODORDER source

CREATE VIEW ITXVIEW_POSISIKK_TGL_OUT_PRODORDER AS
SELECT
    DISTINCT
	v.PRODUCTIONORDERCODE,
    p.PROPROGRESSPROGRESSNUMBER,
    p.DEMANDSTEPSTEPNUMBER,
    p2.PROGRESSTEMPLATECODE,
    --    p2.PROGRESSENDDATE,
    --    p2.PROGRESSENDTIME,
    (
        p2.PROGRESSENDDATE || ' ' || PROGRESSENDTIME
    ) AS SELESAI,
    p2.MACHINECODE,
    r.LONGDESCRIPTION
FROM
    PRODUCTIONDEMANDSTEP v
LEFT JOIN PRODUCTIONPROGRESSSTEPUPDATED p ON
    p.DEMANDSTEPPRODUCTIONDEMANDCODE = v.PRODUCTIONDEMANDCODE
RIGHT JOIN PRODUCTIONPROGRESS p2 ON
    p2.PROGRESSNUMBER = p.PROPROGRESSPROGRESSNUMBER
    AND p2.PROGRESSTEMPLATECODE = 'E01'
LEFT JOIN RESOURCES r ON
    r.CODE = p2.OPERATORCODE
WHERE
    p2.INACTIVE = 1
    --AND v.PRODUCTIONORDERCODE  = '00083822' 
    --		AND p.DEMANDSTEPSTEPNUMBER = '600';


-- DB2ADMIN.ITXVIEW_POSISI_KARTU_KERJA source

CREATE VIEW ITXVIEW_POSISI_KARTU_KERJA AS 
SELECT
    *
FROM
    (
        SELECT
            p.PRODUCTIONORDERCODE,
            p.STEPNUMBER AS STEPNUMBER,
            CASE
                WHEN TRIM(p.PRODRESERVATIONLINKGROUPCODE) IS NULL
                OR TRIM(p.PRODRESERVATIONLINKGROUPCODE) = '' THEN TRIM(p.OPERATIONCODE)
                ELSE TRIM(p.PRODRESERVATIONLINKGROUPCODE)
            END AS OPERATIONCODE,
            TRIM(o.OPERATIONGROUPCODE) AS DEPT,
            o.LONGDESCRIPTION,
            CASE
                WHEN p.PROGRESSSTATUS = 0 THEN 'Entered'
                WHEN p.PROGRESSSTATUS = 1 THEN 'Planned'
                WHEN p.PROGRESSSTATUS = 2 THEN 'Progress'
                WHEN p.PROGRESSSTATUS = 3 THEN 'Closed'
            END AS STATUS_OPERATION,
            iptip.MULAI,
            CASE
                WHEN p.PROGRESSSTATUS = 3 THEN COALESCE(iptop.SELESAI, SUBSTRING(p.LASTUPDATEDATETIME, 1, 19) || '(Run Manual Closures)')
                ELSE iptop.SELESAI
            END AS SELESAI,
            p.PRODUCTIONDEMANDCODE,
            iptip.LONGDESCRIPTION AS OP1,
            iptop.LONGDESCRIPTION AS OP2,
            CASE
                WHEN a.VALUEBOOLEAN = 1 THEN 'Tidak Perlu Gerobak'
                ELSE 
            CASE
                    WHEN LISTAGG(
                        DISTINCT FLOOR(idqd.VALUEQUANTITY),
                        ', '
                    ) = '1' THEN 'PLASTIK'
                    WHEN LISTAGG(
                        DISTINCT FLOOR(idqd.VALUEQUANTITY),
                        ', '
                    ) = '2' THEN 'TONG'
                    WHEN LISTAGG(
                        DISTINCT FLOOR(idqd.VALUEQUANTITY),
                        ', '
                    ) = '3' THEN 'DALAM MESIN'
                    ELSE LISTAGG(
                        DISTINCT FLOOR(idqd.VALUEQUANTITY),
                        ', '
                    )
                END
            END AS GEROBAK,
            idqd.WORKCENTERCODE
        FROM
            PRODUCTIONDEMANDSTEP p
        LEFT JOIN OPERATION o ON
            o.CODE = p.OPERATIONCODE
        LEFT JOIN ADSTORAGE a ON
            a.UNIQUEID = o.ABSUNIQUEID
            AND a.FIELDNAME = 'Gerobak'
        LEFT JOIN ITXVIEW_POSISIKK_TGL_IN_PRODORDER iptip ON
            iptip.PRODUCTIONORDERCODE = p.PRODUCTIONORDERCODE
            AND iptip.DEMANDSTEPSTEPNUMBER = p.STEPNUMBER
        LEFT JOIN ITXVIEW_POSISIKK_TGL_OUT_PRODORDER iptop ON
            iptop.PRODUCTIONORDERCODE = p.PRODUCTIONORDERCODE
            AND iptop.DEMANDSTEPSTEPNUMBER = p.STEPNUMBER
        LEFT JOIN ITXVIEW_DETAIL_QA_DATA idqd ON
            idqd.PRODUCTIONDEMANDCODE = p.PRODUCTIONDEMANDCODE
            AND idqd.PRODUCTIONORDERCODE = p.PRODUCTIONORDERCODE
            -- AND idqd.OPERATIONCODE = COALESCE(p.PRODRESERVATIONLINKGROUPCODE, p.OPERATIONCODE)
            AND idqd.OPERATIONCODE = CASE
                                                                WHEN TRIM(p.PRODRESERVATIONLINKGROUPCODE) IS NULL
                OR TRIM(p.PRODRESERVATIONLINKGROUPCODE) = '' THEN TRIM(p.OPERATIONCODE)
                ELSE TRIM(p.PRODRESERVATIONLINKGROUPCODE)
            END
            AND (
                idqd.VALUEINT = p.STEPNUMBER
                    OR idqd.VALUEINT = p.GROUPSTEPNUMBER
            )
            AND (
                idqd.CHARACTERISTICCODE = 'GRB1'
                    OR
                                        idqd.CHARACTERISTICCODE = 'GRB2'
                    OR
                                        idqd.CHARACTERISTICCODE = 'GRB3'
                    OR
                                        idqd.CHARACTERISTICCODE = 'GRB4'
                    OR
                                        idqd.CHARACTERISTICCODE = 'GRB5'
                    OR
                                        idqd.CHARACTERISTICCODE = 'GRB6'
                    OR
                                        idqd.CHARACTERISTICCODE = 'GRB7'
                    OR
                                        idqd.CHARACTERISTICCODE = 'GRB8'
                    OR
                                        idqd.CHARACTERISTICCODE = 'GRB9'
                    OR
                                        idqd.CHARACTERISTICCODE = 'GRB10'
                    OR
                                        idqd.CHARACTERISTICCODE = 'GRB11'
                    OR
                                        idqd.CHARACTERISTICCODE = 'GRB12'
                    OR
                                        idqd.CHARACTERISTICCODE = 'AREA'
            )
            AND NOT (
                idqd.VALUEQUANTITY = 999
                    OR idqd.VALUEQUANTITY = 9999
                    OR idqd.VALUEQUANTITY = 99999
                    OR idqd.VALUEQUANTITY = 99
                    OR idqd.VALUEQUANTITY = 91
            )
            --WHERE
            --    p.PRODUCTIONORDERCODE  = '$prod_order' AND p.PRODUCTIONDEMANDCODE = '$demand'  
        GROUP BY
            p.PRODUCTIONORDERCODE,
            p.STEPNUMBER,
            p.OPERATIONCODE,
            p.PRODRESERVATIONLINKGROUPCODE,
            o.OPERATIONGROUPCODE,
            o.LONGDESCRIPTION,
            p.PROGRESSSTATUS,
            iptip.MULAI,
            iptop.SELESAI,
            p.LASTUPDATEDATETIME,
            p.PRODUCTIONORDERCODE,
            p.PRODUCTIONDEMANDCODE,
            iptip.LONGDESCRIPTION,
            iptop.LONGDESCRIPTION,
            a.VALUEBOOLEAN,
            idqd.WORKCENTERCODE
        ORDER BY
            p.STEPNUMBER ASC
    );


-- DB2ADMIN.ITXVIEW_PO_INVOICE source

CREATE VIEW ITXVIEW_PO_INVOICE AS
SELECT
    p.CODE AS NO_INVOICE,
    p.COMPANYCODE,
    p.DIVISIONCODE,
    p.INVOICEDATE AS TGL_INVOICE,
    TRIM(SALESDOCUMENT2.GOODSISSUEDATE) AS issue_date,
    CASE
        WHEN p.INVOICEDATE <= DATE('2022-08-15') THEN CASE
            WHEN TRIM(SALESDOCUMENT2.GOODSISSUEDATE) IS NULL THEN p.INVOICEDATE
            ELSE TRIM(SALESDOCUMENT2.GOODSISSUEDATE)
        END
        ELSE TRIM(SALESDOCUMENT2.GOODSISSUEDATE)
    END AS TANGGAL_INV,
    LISTAGG(
        DISTINCT TRIM(s2.DLVSALORDERLINESALESORDERCODE),
        ', '
    ) AS BON_ORDER,
    LISTAGG(
        DISTINCT TRIM( CASE WHEN s2.EXTERNALREFERENCE IS NULL AND s.ORDERPARTNERBRANDCODE IS NOT NULL THEN s4.EXTERNALREFERENCE || ' (' || TRIM(s.ORDERPARTNERBRANDCODE) || ')' WHEN s2.EXTERNALREFERENCE IS NOT NULL AND s.ORDERPARTNERBRANDCODE IS NOT NULL THEN s2.EXTERNALREFERENCE || ' (' || TRIM(s.ORDERPARTNERBRANDCODE) || ')' ELSE s2.EXTERNALREFERENCE END ),
        ', '
    ) AS NO_PO,
    p2.NOOFDAYS AS jatuh_tempo,
    p3.LONGDESCRIPTION
FROM
    PLANTINVOICE p
LEFT JOIN SALESDOCUMENT s4 ON
    s4.PROVISIONALCODE = p.CODE
    AND s4.COMPANYCODE = p.COMPANYCODE
    AND s4.PROVISIONALCOUNTERCODE = p.SALINVOICEPRVCOUNTERCODE
    AND s4.DIVISIONCODE = p.DIVISIONCODE
LEFT JOIN SALESDOCUMENTLINE s2 ON
    s2.SALESDOCUMENTPROVISIONALCODE = p.CODE
    AND s2.SALESDOCUMENTCOMPANYCODE = s4.COMPANYCODE
LEFT JOIN SALESDOCUMENT SALESDOCUMENT2 ON
    SALESDOCUMENT2.PROVISIONALCODE = s2.PREVIOUSCODE
    AND SALESDOCUMENT2.COMPANYCODE = s2.SALESDOCUMENTCOMPANYCODE
    AND SALESDOCUMENT2.DOCUMENTTYPETYPE = s2.PREVIOUSDOCUMENTTYPETYPE
LEFT JOIN SALESORDER s ON
    s.CODE = p.CONTRACTNOCODE
    AND s.COMPANYCODE = p.COMPANYCODE
    AND s.COUNTERCODE = p.CONTRACTNOCOUNTERCODE
LEFT JOIN SALESORDERLINE s3 ON
    s3.SALESORDERCODE = s.CODE
    AND s3.ORDERLINE = s2.DLVSALESORDERLINEORDERLINE
    AND s3.SALESORDERCOMPANYCODE = s2.SALESDOCUMENTCOMPANYCODE
LEFT JOIN PAYMENTMETHODIE p2 ON
    p2.CODE = p.TERMSOFPAYMENTCODE
LEFT JOIN PAYMENTMETHOD p3 ON
    p3.CODE = p.TERMSOFPAYMENTCODE
GROUP BY
    p.CODE,
    p.COMPANYCODE,
    p.DIVISIONCODE,
    p.INVOICEDATE,
    SALESDOCUMENT2.GOODSISSUEDATE,
    p2.NOOFDAYS,
    p3.LONGDESCRIPTION;


-- DB2ADMIN.ITXVIEW_PO_INVOICE2 source

CREATE VIEW ITXVIEW_PO_INVOICE2 AS
SELECT
    DISTINCT
    NO_INVOICE,
    COMPANYCODE,
    DIVISIONCODE,    
    LISTAGG(
        DISTINCT(
            TRIM(NO_PO)
        ),
        ', '
    ) AS NO_PO,
    SALDOCPROVISIONALCOUNTERCODE,
    LISTAGG(
        DISTINCT(
            TRIM(ITEMTYPEAFICODE)
        ),
        ', '
    ) AS ITEMTYPEAFICODE
FROM
    (
        SELECT
            p.CODE AS NO_INVOICE,
            p.COMPANYCODE,
            p.DIVISIONCODE,
            SALESDOCUMENT2.SALDOCPROVISIONALCOUNTERCODE,
            SALESDOCUMENT2.ITEMTYPEAFICODE,
            CASE
                WHEN s2.EXTERNALREFERENCE IS NULL
                AND s.ORDERPARTNERBRANDCODE IS NOT NULL THEN s4.EXTERNALREFERENCE || ' (' || trim(s.ORDERPARTNERBRANDCODE) || ')'
                WHEN s2.EXTERNALREFERENCE IS NOT NULL
                AND s.ORDERPARTNERBRANDCODE IS NOT NULL THEN s2.EXTERNALREFERENCE || ' (' || trim(s.ORDERPARTNERBRANDCODE) || ')'
                ELSE s2.EXTERNALREFERENCE
            END AS NO_PO
        FROM
            PLANTINVOICE p
        LEFT JOIN SALESDOCUMENT s4 ON
            s4.PROVISIONALCODE = p.CODE
            AND s4.COMPANYCODE = p.COMPANYCODE
            AND s4.PROVISIONALCOUNTERCODE = p.SALINVOICEPRVCOUNTERCODE
        LEFT JOIN SALESDOCUMENTLINE s2 ON
            s2.SALESDOCUMENTPROVISIONALCODE = p.CODE
            AND s2.SALESDOCUMENTCOMPANYCODE = s4.COMPANYCODE
            AND s2.SALDOCPROVISIONALCOUNTERCODE = s4.PROVISIONALCOUNTERCODE
        LEFT JOIN SALESDOCUMENTLINE SALESDOCUMENT2 ON
            SALESDOCUMENT2.SALESDOCUMENTPROVISIONALCODE = s2.PREVIOUSCODE
        LEFT JOIN SALESORDER s ON
            s.CODE = p.CONTRACTNOCODE
            AND s.COMPANYCODE = p.COMPANYCODE
            AND s.COUNTERCODE = p.CONTRACTNOCOUNTERCODE
        LEFT JOIN SALESORDERLINE s3 ON
            s3.SALESORDERCODE = s.CODE
            AND s3.ORDERLINE = s2.DLVSALESORDERLINEORDERLINE
            AND s3.SALESORDERCOMPANYCODE = s2.SALESDOCUMENTCOMPANYCODE
        GROUP BY
            s.ORDERPARTNERBRANDCODE,
            s2.PREVIOUSCODE,
            p.CODE,
            p.COMPANYCODE,
            p.DIVISIONCODE,
            SALESDOCUMENT2.ITEMTYPEAFICODE,
            SALESDOCUMENT2.SALDOCPROVISIONALCOUNTERCODE,
            s2.DLVSALORDERLINESALESORDERCODE,
            s4.EXTERNALREFERENCE,
            s2.EXTERNALREFERENCE
    )
    --                    WHERE NO_INVOICE = 'CA24010005'
GROUP BY 
    NO_INVOICE,
    COMPANYCODE,
    SALDOCPROVISIONALCOUNTERCODE,
    DIVISIONCODE;


-- DB2ADMIN.ITXVIEW_PO_SHIPPING_MARK source

CREATE VIEW ITXVIEW_PO_SHIPPING_MARK AS
SELECT
    DISTINCT 
s.*,
    p.DLVSALORDERLINESALESORDERCODE,
    p.DLVSALESORDERLINEORDERLINE,
    p2.PRODUCTIONORDERCODE,
    CASE
        WHEN s3.EXTERNALREFERENCE = ''
        OR s3.EXTERNALREFERENCE IS NULL THEN s2.EXTERNALREFERENCE
        ELSE s3.EXTERNALREFERENCE
    END AS EXTERNALREFERENCE,
    CASE
        WHEN s3.INTERNALREFERENCE = ''
        OR s3.INTERNALREFERENCE IS NULL THEN s2.INTERNALREFERENCE
        ELSE s3.INTERNALREFERENCE
    END AS INTERNALREFERENCE,
    s2.EXTERNALITEM AS ITEM
FROM
    (
        SELECT
            DISTINCT 	
    b.PROJECTCODE,
            b.ELEMENTSCODE,
            CASE
                WHEN LEFT(b.ELEMENTSCODE, 1)= '8' THEN b.LOTCODE
                ELSE LEFT(b.ELEMENTSCODE, 8)
            END AS DEMAND
        FROM
            BALANCE b
    ) s
LEFT JOIN PRODUCTIONDEMAND p ON
    p.CODE = s.DEMAND
LEFT JOIN PRODUCTIONDEMANDSTEP p2 ON
    p2.PRODUCTIONDEMANDCODE = p.CODE
LEFT JOIN SALESORDERLINE s2 ON
    s2.SALESORDERCODE = p.DLVSALORDERLINESALESORDERCODE
    AND s2.ORDERLINE = p.DLVSALESORDERLINEORDERLINE
LEFT JOIN SALESORDER s3 ON
    s3.CODE = p.DLVSALORDERLINESALESORDERCODE
    --    WHERE s.PROJECTCODE= 'SME2400227     '
    --WHERE s.ELEMENTSCODE='0026178600101';


-- DB2ADMIN.ITXVIEW_PO_SHIPPING_MARK_ELEMENT source

CREATE VIEW ITXVIEW_PO_SHIPPING_MARK_ELEMENT AS 
SELECT
    --   p.CODE,
    p.DLVSALORDERLINESALESORDERCODE,
    P.ORIGDLVSALORDLINESALORDERCODE,
    e.ELEMENTCODE,
    CASE
        WHEN s2.EXTERNALREFERENCE = NULL
        OR s2.EXTERNALREFERENCE = '' THEN s.EXTERNALREFERENCE
        ELSE s2.EXTERNALREFERENCE
    END AS EXTERNALREFERENCE,
    CASE
        WHEN s2.INTERNALREFERENCE = NULL
        OR s2.INTERNALREFERENCE = '' THEN s.INTERNALREFERENCE
        ELSE s2.INTERNALREFERENCE
    END AS INTERNALREFERENCE
FROM
    PRODUCTIONDEMAND p
LEFT JOIN ELEMENTSINSPECTION e ON
    e.DEMANDCODE = p.CODE
LEFT JOIN SALESORDERLINE s ON
    s.SALESORDERCODE = p.ORIGDLVSALORDLINESALORDERCODE
    AND s.ORDERLINE = p.ORIGDLVSALORDERLINEORDERLINE
    AND s.SUBCODE01 = p.SUBCODE01
    AND s.SUBCODE02 = p.SUBCODE02
    AND s.SUBCODE03 = p.SUBCODE03
    AND s.SUBCODE04 = p.SUBCODE04
    AND s.SUBCODE05 = p.SUBCODE05
    AND s.SUBCODE06 = p.SUBCODE06
    AND s.SUBCODE07 = p.SUBCODE07
    AND s.SUBCODE08 = p.SUBCODE08
    AND s.SUBCODE09 = p.SUBCODE09
    AND s.SUBCODE10 = p.SUBCODE10
LEFT JOIN SALESORDER s2 ON
    s2.CODE = p.ORIGDLVSALORDLINESALORDERCODE
WHERE
    e.ELEMENTCODE IS NOT NULL
    --   AND p.DLVSALORDERLINESALESORDERCODE ='EXP2400161'
    --   AND e.ELEMENTCODE ='00233680001';


-- DB2ADMIN.ITXVIEW_PO_SURATJALAN_PPC source

CREATE VIEW ITXVIEW_PO_SURATJALAN_PPC AS 
        SELECT 
        PROVISIONALCODE,
        PROVISIONALCOUNTERCODE,
         LISTAGG(
        DISTINCT(
            TRIM(PO_NUMBER)
        ),
        ', '
    ) AS PO_NUMBER,
          LISTAGG(
        DISTINCT(
            TRIM(SAP_CODE)
        ),
        ', '
    ) AS SAP_CODE
FROM
        (
        SELECT
            s.PROVISIONALCODE,
            s.PROVISIONALCOUNTERCODE,
            CASE
                WHEN s2.EXTERNALREFERENCE IS NULL THEN s.EXTERNALREFERENCE
                ELSE s2.EXTERNALREFERENCE
            END AS PO_NUMBER,
            a.EXTERNALDRAWINGNUMBER AS SAP_CODE
        FROM
            SALESDOCUMENT s
        LEFT JOIN SALESDOCUMENTLINE s2 ON
            s2.SALESDOCUMENTPROVISIONALCODE = s.PROVISIONALCODE
        LEFT JOIN ITXVIEWORDERPARTNERLINKACTIVE a ON
            s.ORDPRNCUSTOMERSUPPLIERCODE = a.ORDPRNCUSTOMERSUPPLIERCODE
            AND s2.SUBCODE01 = a.SUBCODE01
            AND s2.SUBCODE02 = a.SUBCODE02
            AND s2.SUBCODE03 = a.SUBCODE03
            AND s2.SUBCODE04 = a.SUBCODE04
            AND s2.SUBCODE05 = a.SUBCODE05
            AND s2.SUBCODE06 = a.SUBCODE06
            AND s2.SUBCODE07 = a.SUBCODE07
            AND s2.SUBCODE08 = a.SUBCODE08
            AND s2.SUBCODE09 = a.SUBCODE09
            AND s2.SUBCODE10 = a.SUBCODE10
            --        WHERE  s.PROVISIONALCODE = 'POD2400998'
    )
GROUP BY 
        PROVISIONALCODE,
        PROVISIONALCOUNTERCODE;


-- DB2ADMIN.ITXVIEW_PPA_DIT source

CREATE VIEW ITXVIEW_PPA_DIT AS 
SELECT
    p.IDENTIFIEDDATE,
    p.CREATIONDATETIME AS TGL_BUAT_BD,
    p.CODE AS NO_BD,
    p3.CODE AS NO_WO,
    'PPA' || SUBSTR(p3.CREATIONDATETIME, 3, 2) || SUBSTR(p3.CREATIONDATETIME, 6, 2) || LTRIM(SUBSTR(p3.CODE, 6, 6), '0') AS NO_PPA,
    --    CASE
    --    	WHEN d.LONGDESCRIPTION = 'ALL' THEN SUBSTR(a5.VALUESTRING, 1,3)
    --    	ELSE SUBSTR(d.LONGDESCRIPTION, 1, 4)
    --    END AS DEPT,
    SUBSTR(a5.VALUESTRING, 1, 3) AS DEPT,
    CASE
        WHEN a17.VALUESTRING = 1 THEN 'MAYOR'
        WHEN a17.VALUESTRING = 2 THEN 'MINOR'
        ELSE ''
    END AS JENIS_KERUSAKAN,
    p2.LONGDESCRIPTION AS NAMA_APLIKASI,
    CASE
        WHEN a2.VALUESTRING = '1' THEN 'Baru'
        WHEN a2.VALUESTRING = '2' THEN 'Penambahan'
        WHEN a2.VALUESTRING = '3' THEN 'Perubahan'
        WHEN a2.VALUESTRING = '4' THEN 'Perbaikan'
    END AS JENIS_PERMOHONAN,
    SUBSTR(p3.STARTDATE, 1, 10) AS TGL_MULAI,
    CASE
        --        WHEN DAYOFWEEK_ISO(p3.STARTDATE) = 1 THEN SUBSTR(p3.STARTDATE  + 3 DAYS, 1,10)
        --        WHEN DAYOFWEEK_ISO(p3.STARTDATE) = 2 THEN SUBSTR(p3.STARTDATE  + 3 DAYS, 1,10)
        --        WHEN DAYOFWEEK_ISO(p3.STARTDATE) = 3 THEN SUBSTR(p3.STARTDATE  + 5 DAYS, 1,10)
        --        WHEN DAYOFWEEK_ISO(p3.STARTDATE) = 4 THEN SUBSTR(p3.STARTDATE  + 5 DAYS, 1,10)
        --        WHEN DAYOFWEEK_ISO(p3.STARTDATE) = 5 THEN SUBSTR(p3.STARTDATE  + 6 DAYS, 1,10)
	    WHEN DAYOFWEEK_ISO(a6.VALUEDATE) = 1 THEN SUBSTR(a6.VALUEDATE + 3 DAYS, 1, 10)
        WHEN DAYOFWEEK_ISO(a6.VALUEDATE) = 2 THEN SUBSTR(a6.VALUEDATE + 3 DAYS, 1, 10)
        WHEN DAYOFWEEK_ISO(a6.VALUEDATE) = 3 THEN SUBSTR(a6.VALUEDATE + 5 DAYS, 1, 10)
        WHEN DAYOFWEEK_ISO(a6.VALUEDATE) = 4 THEN SUBSTR(a6.VALUEDATE + 5 DAYS, 1, 10)
        WHEN DAYOFWEEK_ISO(a6.VALUEDATE) = 5 THEN SUBSTR(a6.VALUEDATE + 5 DAYS, 1, 10)
    END AS TGL_TARGET,
    p.SYMPTOM AS DESKRIPSI_PEMOHON,
    p.CREATIONUSER AS DIBUAT_OLEH,
    a4.MENUDESCR AS JABATAN_DIBUATOLEH,
    SUBSTR(p.CREATIONDATETIME, 1, 10) AS TGL_DIBUATOLEH,
    TIMESTAMP(
        SUBSTR(p.CREATIONDATETIME, 1, 10)
    ) AS TGL_DIBUATOLEH_CONV_DATE,
    u.LONGDESCRIPTION AS KEPALA_DEPT_PEMOHON,
    u.SEARCHDESCRIPTION AS JABATAN_KEPALA_DEPT,
    a6.VALUEDATE AS TGL_KEPALA_DEPT_PEMOHON,
    p3.ASSIGNEDBYUSERID AS DITERIMA_OLEH_DIT,
    a8.MENUDESCR AS JABATAN_DITERIMA_DIT,
    --    p3.PLANNEDSCHDDATE AS TGL_DITERIMA_DIT,
    a6.VALUEDATE AS TGL_DITERIMA_DIT,
    u2.LONGDESCRIPTION AS DIKETAHUI_OLEH_DIT,
    u2.SEARCHDESCRIPTION AS JABATAN_DEPT_DIT,
    a10.VALUEDATE AS TGL_DIKETAHUI_DIT,
    SUBSTR(p3.ENDDATE, 1, 10) AS TGL_SELESAI,
    p3.ASSIGNEDTOUSERID AS PROGRAMMER,
    a11.SENDEREMAIL AS EMAIL_PROGRAMMER,
    a13.MENUDESCR AS JABATAN_PROGRAMMER,
    u3.LONGDESCRIPTION AS KEPALA_DEPT_USER_SELESAI,
    u3.SEARCHDESCRIPTION AS JABATAN_DEPT_USER_SELESAI,
    u4.LONGDESCRIPTION AS KEPALA_DEPT_DIT_SELESAI,
    u4.SEARCHDESCRIPTION AS JABATAN_DEPT_DIT_SELESAI,
    CASE
        WHEN p3.STATUS = 3 THEN 'Done'
        WHEN p3.STATUS = 2 THEN 'In Progress'
    END AS STATUS
FROM
    PMBREAKDOWNENTRY p
LEFT JOIN DEPARTMENT d ON
    d.CODE = p.DEPARTMENTCODE
LEFT JOIN PMBOM p2 ON
    p2.CODE = p.PMBOMCODE
RIGHT JOIN PMWORKORDER p3 ON
    p3.PMBREAKDOWNENTRYCODE = p.CODE
    AND NOT p3.ASSIGNEDTOUSERID IS NULL
LEFT JOIN ABSUSERDEF a ON
    a.USERID = p3.ASSIGNEDTOUSERID
LEFT JOIN ADSTORAGE a2 ON
    a2.UNIQUEID = p.ABSUNIQUEID
    AND a2.FIELDNAME = 'JenisPermohonan'
LEFT JOIN ABSUIINITIALMENU a3 ON
    a3.USERUSERID = p.CREATIONUSER
LEFT JOIN ABSUIMENU a4 ON
    a4.CODE = a3.MENU4CODE
LEFT JOIN ADSTORAGE a5 ON
    a5.UNIQUEID = p.ABSUNIQUEID
    AND a5.FIELDNAME = 'ApprovalDeptUserCode'
LEFT JOIN ADSTORAGE a6 ON
    a6.UNIQUEID = p.ABSUNIQUEID
    AND a6.FIELDNAME = 'TglApprvDeptUser'
LEFT JOIN USERGENERICGROUP u ON
    u.CODE = a5.VALUESTRING
    AND u.USERGENERICGROUPTYPECODE = 'HED'
LEFT JOIN ABSUIINITIALMENU a7 ON
    a7.USERUSERID = p3.ASSIGNEDBYUSERID
LEFT JOIN ABSUIMENU a8 ON
    a8.CODE = a7.MENU4CODE
LEFT JOIN ADSTORAGE a9 ON
    a9.UNIQUEID = p.ABSUNIQUEID
    AND a9.FIELDNAME = 'ApprovalDeptDITCode'
LEFT JOIN ADSTORAGE a10 ON
    a10.UNIQUEID = p.ABSUNIQUEID
    AND a10.FIELDNAME = 'TglApprvDeptDIT'
LEFT JOIN USERGENERICGROUP u2 ON
    u2.CODE = a9.VALUESTRING
    AND u2.USERGENERICGROUPTYPECODE = 'DIT'
LEFT JOIN ABSUSERDEF a11 ON
    a11.USERID = p3.ASSIGNEDTOUSERID
LEFT JOIN ABSUIINITIALMENU a12 ON
    a12.USERUSERID = p3.ASSIGNEDTOUSERID
LEFT JOIN ABSUIMENU a13 ON
    a13.CODE = a12.MENU4CODE
LEFT JOIN ADSTORAGE a14 ON
    a14.UNIQUEID = p3.ABSUNIQUEID
    AND a14.FIELDNAME = 'ApprovalDeptUserCode'
LEFT JOIN USERGENERICGROUP u3 ON
    u3.CODE = a14.VALUESTRING
    AND u3.USERGENERICGROUPTYPECODE = 'HED'
LEFT JOIN ADSTORAGE a15 ON
    a15.UNIQUEID = p3.ABSUNIQUEID
    AND a15.FIELDNAME = 'ApprovalDeptDITCode'
LEFT JOIN ADSTORAGE a16 ON
    a16.UNIQUEID = p3.ABSUNIQUEID
    AND a16.FIELDNAME = 'TglApprvDeptDIT'
LEFT JOIN USERGENERICGROUP u4 ON
    u4.CODE = a15.VALUESTRING
    AND u4.USERGENERICGROUPTYPECODE = 'DIT'
LEFT JOIN ADSTORAGE a17 ON
    a17.UNIQUEID = p3.ABSUNIQUEID
    AND a17.FIELDNAME = 'JenisKerusakan'
WHERE
    p.BREAKDOWNTYPE = 'SF'
    --    AND p.IDENTIFIEDDATE BETWEEN '2024-05-01' AND '2024-05-31'
    --    AND a4.MENUDESCR IS NULL 
    --    AND p.CODE = 'BDIT240001723'
    --ORDER BY
    --	p3.CODE ASC;


-- DB2ADMIN.ITXVIEW_PRODUCTIONDEMANDSTEP source

CREATE VIEW ITXVIEW_PRODUCTIONDEMANDSTEP AS
SELECT
    PRODUCTIONORDERCODE,
    PRODUCTIONDEMANDCODE
FROM
    PRODUCTIONDEMANDSTEP
GROUP BY
    PRODUCTIONORDERCODE,
    PRODUCTIONDEMANDCODE;


-- DB2ADMIN.ITXVIEW_PRODUCTNOTEKNT source

CREATE VIEW ITXVIEW_PRODUCTNOTEKNT AS
SELECT
    UNIQUEID,
    NAMENAME,
    VALUESTRING AS NOTE_KNT
FROM
    ADSTORAGE
WHERE
    NAMENAME = 'NoteKnitt ';


-- DB2ADMIN.ITXVIEW_PURCHASEORDER_APPROVED source

CREATE VIEW ITXVIEW_PURCHASEORDER_APPROVED AS 
SELECT
    no_po,
    approvedby,
    tgl_approve
FROM
    (
        SELECT
            SUBSTR(SUBSTR(ahp.BUSINESS_KEY_, LOCATE('|', ahp.BUSINESS_KEY_)+ 1), LOCATE('|', SUBSTR(ahp.BUSINESS_KEY_, LOCATE('|', ahp.BUSINESS_KEY_)+ 1))+ 1) AS no_po,
            aiu.FIRST_ AS approvedby,
            DATE(
                SUBSTRING(aht.START_TIME_, 1, 10)
            ) AS tgl_approve
        FROM
            ACT_HI_PROCINST ahp
        LEFT JOIN ACT_HI_TASKINST aht ON
            aht.PROC_INST_ID_ = ahp.PROC_INST_ID_
        LEFT JOIN WFMLINKEDENTITY wfm ON
            wfm.WFMPROCESSID = ahp.PROC_INST_ID_
        LEFT JOIN ACT_ID_USER aiu ON
            aiu.ID_ = aht.ASSIGNEE_
        ORDER BY
            aht.START_TIME_ ASC
    );


-- DB2ADMIN.ITXVIEW_PURCHASEORDER_STATUS_APPROVE source

CREATE VIEW ITXVIEW_PURCHASEORDER_STATUS_APPROVE AS	
SELECT
    COMPANYCODE || '|' || TRIM(COUNTERCODE)|| '|' || CODE AS wfmcode,
    CODE,
    WFMORDERSTATUS
FROM
    PURCHASEORDER p;


-- DB2ADMIN.ITXVIEW_PURCHASEORDER_TAX source

CREATE VIEW ITXVIEW_PURCHASEORDER_TAX AS
SELECT
    i.ABSUNIQUEID,
    i2.LONGDESCRIPTION,
    i.SEQUENCENO,
    i2.TAXTEMPLATECODE,
    i.ITAXCODE,
    i.CALCULATEDVALUE,
    i.CALCULATEDVALUERCC,
    i.COMPANYCURRENCYCODE
FROM
    INDTAXTOTAL i
LEFT JOIN INDTAXDETAIL i2 ON
    i2.ABSUNIQUEID = i.ABSUNIQUEID
    AND i2.ITAXCODE = i.ITAXCODE
    AND i2.TAXCATEGORYCODE = i.TAXCATEGORYCODE
WHERE
    i.ITAXCODE IN (
        '999', 'AD1', 'AD2', 'AD3', 'AD4', 'AD5', 'ADA', 'ADB', 'D01', 'D02', 'FR1', 'IN1', 'OH1', 'P21', 'VT4'
    );


-- DB2ADMIN.ITXVIEW_PURCHASE_ADDITIONAL_COSTS source

CREATE VIEW ITXVIEW_PURCHASE_ADDITIONAL_COSTS AS
SELECT
    *
FROM
    INDTAXTOTAL
WHERE
    ITAXCODE IN (
        'OH1', 'AD1', 'AD2', 'AD3', 'AD4', 'AD5', 'ADA'
    );


-- DB2ADMIN.ITXVIEW_PURCHASE_APPROVE_TOP1 source

CREATE VIEW ITXVIEW_PURCHASE_APPROVE_TOP1 AS
--(ID_,
--PROC_INST_ID_,
--BUSINESS_KEY_)
--AS
--SELECT
--    *
--FROM
--    (
--    SELECT
--        ID_,
--        PROC_INST_ID_,
--        BUSINESS_KEY_
--    FROM
--        ACT_HI_PROCINST
--    ORDER BY
--        PROC_INST_ID_ DESC);
SELECT
    A.BUSINESS_KEY_,
    B.PROC_INST_ID_,
    B.ID_,
    C.TASK_ID_,
    C.TEXT_,
    C.NAME_,
    B.END_TIME_,
    B.ASSIGNEE_
FROM
    ACT_HI_PROCINST A
LEFT JOIN ACT_HI_TASKINST B ON
    A.PROC_INST_ID_ = B.PROC_INST_ID_
LEFT JOIN ACT_HI_VARINST C ON
    B.ID_ = C.TASK_ID_
WHERE
    B.END_TIME_ IS NOT NULL
    AND C.NAME_ = 'decision'
GROUP BY
    A.BUSINESS_KEY_,
    B.PROC_INST_ID_,
    B.ID_,
    C.TASK_ID_,
    C.TEXT_,
    C.NAME_,
    B.END_TIME_,
    B.ASSIGNEE_
    --ORDER BY
    --	B.PROC_INST_ID_ DESC;


-- DB2ADMIN.ITXVIEW_PURCHASE_DETAIL source

CREATE VIEW ITXVIEW_PURCHASE_DETAIL AS
SELECT
    no_po,
    kode_item,
    count(jml_item) AS jml_item,
    ASSORTMENTNUMBERID
    --    QTY,
    --    KET_QTY
FROM
    (
        SELECT
            PURCHASEORDERCODE AS no_po,
            ITEMTYPEAFICODE AS kode_item,
            FULLITEMIDENTIFIER AS jml_item,
            ASSORTMENTNUMBERID
            --        PURCHASE_QTY.QTY,
            --        PURCHASE_QTY.KET_QTY
        FROM
            PURCHASEORDERLINE P
            --    LEFT JOIN ITXVIEW_PURCHASE_QTY PURCHASE_QTY ON
            --        P.PURCHASEORDERCODE = PURCHASE_QTY.po
            --        WHERE ITEMTYPEAFICODE = 'PRY' 
            --                where PURCHASEORDERCODE = 'GEL2201153'
            --                SRL2200076 
            --                WHERE 
            --                ASSORTMENTNUMBERID IS NULL
            --                AND
            --                PURCHASEORDERCODE IN ('PRY2200205','SPL2200003','PRY2200219','PRY2200083')
        GROUP BY
            PURCHASEORDERCODE,
            ITEMTYPEAFICODE,
            FULLITEMIDENTIFIER,
            ASSORTMENTNUMBERID
    )
GROUP BY
    no_po,
    kode_item,
    ASSORTMENTNUMBERID;


-- DB2ADMIN.ITXVIEW_PURCHASE_DISKON source

CREATE VIEW ITXVIEW_PURCHASE_DISKON AS
SELECT
    PURCHASEORDERCODE,
    ITAXCODE,
    DOCUMENTCURRENCYCODE,
    sum(CALCULATEDVALUE) AS CALCULATEDVALUE,
    sum(BASEVALUE) AS BASEVALUE
FROM
    (
        SELECT
            INDTAXDETAIL.ITAXCODE,
            INDTAXDETAIL.CALCULATEDVALUE,
            INDTAXDETAIL.BASEVALUE,
            INDTAXDETAIL.DOCUMENTCURRENCYCODE,
            p.PURCHASEORDERCODE
        FROM
            PURCHASEORDERLINE p
        LEFT JOIN INDTAXDETAIL INDTAXDETAIL ON
            p.ABSUNIQUEID = INDTAXDETAIL.ABSUNIQUEID
        WHERE
            INDTAXDETAIL.ITAXCODE IN(
                'D01', 'D02'
            )
            AND INDTAXDETAIL.CALCULATEDVALUE <> 0
            --  AND p.PURCHASEORDERCODE ='SPI2300081'
    )
GROUP BY
    PURCHASEORDERCODE,
    ITAXCODE,
    DOCUMENTCURRENCYCODE;


-- DB2ADMIN.ITXVIEW_PURCHASE_KET_DISKON source

CREATE VIEW ITXVIEW_PURCHASE_KET_DISKON AS
SELECT
    *
FROM
    INDTAXDETAIL
WHERE
    ITAXCODE = 'D02';


-- DB2ADMIN.ITXVIEW_PURCHASE_NOPURCHASE source

CREATE VIEW ITXVIEW_PURCHASE_NOPURCHASE AS
SELECT
    TRIM(PURCHASEORDER.CODE) AS NO_PO,
    PURCHASEORDER.ORDERDATE AS TGL_PO,
    TRIM(REPLENISHMENTREQUISITION.HEADERCODE) AS KODE_PR,
    REPLENISHMENTREQUISITION.PROPOSALDATE AS TGL_PR,
    ITXVIEW_PURCHASE_WFM_APPROVE.TGL_APPROVED,
    TRIM(REPLENISHMENTREQUISITION.RFQDETAILRFQHEADERCODE)AS RFQ_CODE,
    CASE
        WHEN PURCHASEORDERLINE.ITEMDESCRIPTION IS NULL THEN '-'
        ELSE 
    	 PURCHASEORDERLINE.ITEMDESCRIPTION
    END AS ITEMDESCRIPTION,
    BUSINESSPARTNER.LEGALNAME1 AS SUPPLIER_NAME,
    PURCHASEORDERline.PRICE AS UNITPRICE,
    PURCHASEORDERLINE.USERPRIMARYQUANTITY AS JML_ORDUNIT,
    CASE
        WHEN PURCHASEORDERLINE.USERPRIMARYQUANTITY IS NULL
        OR MRNDETAIL.PRIMARYQTY IS NULL THEN 0
        ELSE 
    	 MRNDETAIL.PRIMARYQTY
    END AS QTY_TERIMA,  
      CASE
        WHEN PURCHASEORDERLINE.USERPRIMARYQUANTITY IS NULL
        OR PURCHASEORDERLINE.NETVALUE IS NULL THEN 0
        ELSE 
    	 PURCHASEORDERLINE.NETVALUE
    END AS TOTAL_HARGA,
       CASE
        WHEN PURCHASEORDERLINE.USERPRIMARYQUANTITY IS NULL
        OR MRNDETAIL.GROSSVALUE IS NULL THEN 0
        ELSE 
    	 MRNDETAIL.GROSSVALUE
    END AS TOTAL_HARGA_PPN,
           CASE
        WHEN PURCHASEORDERLINE.ITEMDESCRIPTION IS NOT NULL
        AND TRIM(MRNHEADER.CHALLANNO) IS NULL THEN 'Belum ada penerimaan'
        ELSE 
        CASE
            WHEN PURCHASEORDERLINE.ITEMDESCRIPTION IS NULL
            AND PURCHASEORDERLINE.USERPRIMARYQUANTITY IS NULL 
    		THEN 'Data line Kosong'
            ELSE 
    	 TRIM(MRNHEADER.CHALLANNO)
        END
    END AS no_sj,
    CASE
        WHEN PURCHASEORDERLINE.ITEMDESCRIPTION IS NOT NULL
        AND TRIM(MRNHEADER.CHALLANNO) IS NOT NULL
        AND TRIM(MRNHEADER.INVOICENO) IS NULL THEN '-'
        WHEN PURCHASEORDERLINE.ITEMDESCRIPTION IS NOT NULL
        AND TRIM(MRNHEADER.CHALLANNO) IS NULL
        AND TRIM(MRNHEADER.INVOICENO) IS NULL THEN 'Belum ada penerimaan'
        ELSE 
    		CASE
            WHEN PURCHASEORDERLINE.ITEMDESCRIPTION IS NULL
            AND TRIM(MRNHEADER.CHALLANNO) IS NULL
            AND PURCHASEORDERLINE.USERPRIMARYQUANTITY IS NULL 
    			THEN 'Data line Kosong'
            ELSE 
    	 TRIM(MRNHEADER.INVOICENO)
        END
    END AS no_invoice,
     MRNHEADER.CHALLANDATE AS tgl_sj,
    MRNHEADER.INVOICEDATE AS tgl_invoice,
    PURCHASEORDERLINE.ENTRYEXCHANGERATE AS EXCHANGERATE,
    PURCHASEORDER.CURRENCYCODE AS CUR,
    CASE
        WHEN PURCHASEORDERLINE.USERPRIMARYQUANTITY IS NULL
        OR MRNDETAIL.BASICVALUECC IS NULL THEN 0
        ELSE 
    	 MRNDETAIL.BASICVALUECC
    END AS nilai_invoice,
      CASE
        WHEN PURCHASEORDERLINE.USERPRIMARYQUANTITY IS NULL
        OR MRNDETAIL.GROSSVALUECC IS NULL THEN 0
        ELSE 
    	 MRNDETAIL.GROSSVALUECC
    END AS nilai_invoiceCC,
        CASE
        WHEN PURCHASEORDERLINE.USERPRIMARYQUANTITY IS NULL
        OR CAST(
            MRNHEADER.CODE AS varchar(20)
        ) IS NULL THEN 0
        ELSE 
    	 MRNHEADER.CODE
    END AS no_MRN,
    ITXVIEW_PURCHASE_WFM_APPROVE.REASONCODE,
    ITXVIEW_PURCHASE_WFM_APPROVE.WFMPROCESSID
FROM
    PURCHASEORDER PURCHASEORDER
LEFT JOIN PURCHASEORDERLINE PURCHASEORDERLINE ON
    PURCHASEORDERLINE.PURCHASEORDERCODE = PURCHASEORDER.CODE
LEFT JOIN MRNDETAIL MRNDETAIL ON
    MRNDETAIL.PURCHASEORDERCODE = PURCHASEORDERLINE.PURCHASEORDERCODE
    AND MRNDETAIL.ORDERLINE = PURCHASEORDERLINE.ORDERLINE
    AND MRNDETAIL.SUBCODE01 = PURCHASEORDERLINE.SUBCODE01
    AND MRNDETAIL.SUBCODE02 = PURCHASEORDERLINE.SUBCODE02
    --    AND MRNDETAIL.SUBCODE03 = PURCHASEORDERLINE.SUBCODE03
    --    AND MRNDETAIL.UNITPRICE = PURCHASEORDERline.PRICE
    --    AND MRNDETAIL.BASICVALUE =PURCHASEORDERline.NETVALUE
LEFT JOIN MRNHEADER MRNHEADER ON
    MRNHEADER.CODE = MRNDETAIL.MRNHEADERCODE
LEFT JOIN REPLENISHMENTREQUISITION REPLENISHMENTREQUISITION ON
    REPLENISHMENTREQUISITION.LINEPURCHASEORDERCODE = PURCHASEORDERLINE.PURCHASEORDERCODE
    AND REPLENISHMENTREQUISITION.LINEORDERLINE = PURCHASEORDERLINE.ORDERLINE
    AND REPLENISHMENTREQUISITION.SUBCODE01 = PURCHASEORDERLINE.SUBCODE01
    AND REPLENISHMENTREQUISITION.SUBCODE02 = PURCHASEORDERLINE.SUBCODE02
    AND REPLENISHMENTREQUISITION.SUBCODE03 = PURCHASEORDERLINE.SUBCODE03
    AND REPLENISHMENTREQUISITION.SUBCODE04 = PURCHASEORDERLINE.SUBCODE04
    AND REPLENISHMENTREQUISITION.SUBCODE05 = PURCHASEORDERLINE.SUBCODE05
    AND REPLENISHMENTREQUISITION.SUBCODE06 = PURCHASEORDERLINE.SUBCODE06
    AND REPLENISHMENTREQUISITION.SUBCODE07 = PURCHASEORDERLINE.SUBCODE07
LEFT JOIN CUSTOMERSUPPLIERDATA CUSTOMERSUPPLIERDATA ON
    CUSTOMERSUPPLIERDATA.CODE = PURCHASEORDER.ORDPRNCUSTOMERSUPPLIERCODE
LEFT JOIN BUSINESSPARTNER BUSINESSPARTNER ON
    BUSINESSPARTNER.NUMBERID = CUSTOMERSUPPLIERDATA.BUSINESSPARTNERNUMBERID
LEFT JOIN ITXVIEW_PURCHASE_WFM_APPROVE ITXVIEW_PURCHASE_WFM_APPROVE ON
    ITXVIEW_PURCHASE_WFM_APPROVE.ORDER_KODE = PURCHASEORDER.CODE
WHERE
    YEAR(PURCHASEORDEr.ORDERDATE) IN (
        2022, 2023, 2024
    )
    --    AND NOT ITXVIEW_PURCHASE_WFM_APPROVE.REASONCODE ='Rejected'
    --    AND NOT ITXVIEW_PURCHASE_WFM_APPROVE.REASONCODE IS NULL
    --    	AND YEAR (ITXVIEW_PURCHASE_WFM_APPROVE.TGL_APPROVED ) IN ( 2022, 2023, 2024)
GROUP BY
    REPLENISHMENTREQUISITION.HEADERCODE,
    REPLENISHMENTREQUISITION.PROPOSALDATE,
    PURCHASEORDER.CODE,
    PURCHASEORDER.ORDERDATE,
    ITXVIEW_PURCHASE_WFM_APPROVE.TGL_APPROVED,
    PURCHASEORDER.ORDPRNCUSTOMERSUPPLIERCODE,
    --    MRNHEADER.ORDPRNCUSTOMERSUPPLIERCODE,
    BUSINESSPARTNER.LEGALNAME1,
    REPLENISHMENTREQUISITION.RFQDETAILRFQHEADERCODE,
    PURCHASEORDERLINE.ITEMDESCRIPTION,
    PURCHASEORDERLINE.ENTRYEXCHANGERATE,
    PURCHASEORDER.CURRENCYCODE,
    PURCHASEORDERline.PRICE,
    PURCHASEORDERLINE.NETVALUE,
    MRNDETAIL.GROSSVALUE,
    PURCHASEORDERLINE.USERPRIMARYQUANTITY,
    MRNDETAIL.PRIMARYQTY,
    MRNHEADER.CHALLANNO,
    MRNHEADER.INVOICENO,
    MRNHEADER.CHALLANDATE,
    MRNHEADER.INVOICEDATE,
    MRNDETAIL.BASICVALUECC,
    MRNDETAIL.GROSSVALUECC,
    MRNHEADER.CODE,
    ITXVIEW_PURCHASE_WFM_APPROVE.REASONCODE,
     ITXVIEW_PURCHASE_WFM_APPROVE.WFMPROCESSID;


-- DB2ADMIN.ITXVIEW_PURCHASE_NO_IDENTITY source

CREATE VIEW ITXVIEW_PURCHASE_NO_IDENTITY AS
SELECT
    trim(purchaseorder.COMPANYCODE)|| '|' || trim(purchaseorder.COUNTERCODE)|| '|' || trim(purchaseorder.CODE) AS no_POidentity,
    PURCHASEORDER.CODE
FROM
    PURCHASEORDER purchaseorder;


-- DB2ADMIN.ITXVIEW_PURCHASE_PERMINTAAN source

CREATE VIEW ITXVIEW_PURCHASE_PERMINTAAN AS
SELECT
    trim(purchaseorder.COMPANYCODE)|| '|' || trim(purchaseorder.COUNTERCODE)|| '|' || trim(purchaseorder.CODE) AS no_POidentity,
    purchaseorder.CODE,
    purchaseorder.COUNTERCODE,
    purchaseorder.ORDERDATE,
    businesspartner.LEGALNAME1 AS NAMA_CUSTOMER,
    BUSINESSPARTNER.PERSON,
    PAYMENTMETHOD.LONGDESCRIPTION AS paymenmethode,
    termsofshipping.LONGDESCRIPTION AS SHIPPINGTERM,
    PURCHASEORDER.TEMPLATECODE,
    PURCHASEORDER.EXTERNALREFERENCE,
    PURCHASEORDER.INTERNALREFERENCE,
    PURCHASEORDER.DESCRIPTION,
    PURCHASEORDER.TERMSOFDELIVERYCODE,
    PURCHASEORDER.DELIVERYDESCRIPTION,
    PURCHASEORDER.TERMSOFSHIPPINGCODE,
    PURCHASEORDER.SHIPPINGDESCRIPTION,
    PURCHASEORDER.REQUIREDDUEDATE,
    PURCHASEORDER.CONFIRMEDDUEDATE,
    PURCHASEORDER.CURRENCYCODE,
    PURCHASEORDER.PAYMENTMETHODCODE,
    PURCHASEORDER.WFMORDERSTATUS,
    PURCHASEORDER.ORDERCATEGORYCODE,
    --    PURCHASEORDERLINE.ITEMDESCRIPTION,
    --    PURCHASEORDERLINE.USERPRIMARYUOMCODE,
    --    PURCHASEORDERLINE.USERPRIMARYQUANTITY,
    --    PURCHASEORDERLINE.USERSECONDARYUOMCODE,
    --    PURCHASEORDERLINE.USERSECONDARYQUANTITY,
    --    PURCHASEORDERLINE.QUALITYCODE,
    --    PURCHASEORDERLINE.WAREHOUSECODE,
    --    PURCHASEORDERLINE.COSTCENTERCODE,
    --    PURCHASEORDERLINE.PRICEUNITOFMEASURECODE,
    --    PURCHASEORDERLINE.PRICE,
    --    PURCHASEORDERLINE.NETVALUE AS pORDERLINE_NETTVALUE,
    PURCHASEORDERIE.BASICVALUE AS pORDERIE_BASICVALUE,
    PURCHASEORDERIE.NETTVALUE AS pORDERIE_NETTVALUE,
    --    PURCHASEORDERLINEIE.TAXTEMPLATECODE,
    --    PURCHASEORDERLINEIE.BASICVALUE AS pORDERLINEIE_NETTVALUE,
    --    PURCHASEORDERLINE.CREATIONUSER,
    PURCHASEORDER.ABSUNIQUEID
FROM
    PURCHASEORDER purchaseorder
LEFT JOIN ORDERPARTNER ORDERPARTNER ON
    ORDERPARTNER.CUSTOMERSUPPLIERCODE = PURCHASEORDER.ORDPRNCUSTOMERSUPPLIERCODE
LEFT JOIN BUSINESSPARTNER BUSINESSPARTNER ON
    BUSINESSPARTNER.NUMBERID = ORDERPARTNER.ORDERBUSINESSPARTNERNUMBERID
LEFT JOIN PAYMENTMETHOD PAYMENTMETHOD ON
    PAYMENTMETHOD.CODE = PURCHASEORDER.PAYMENTMETHODCODE
LEFT JOIN TERMSOFSHIPPING TERMSOFSHIPPING ON
    TERMSOFSHIPPING.CODE = PURCHASEORDER.TERMSOFSHIPPINGCODE
LEFT JOIN PURCHASEORDERIE PURCHASEORDERIE ON
    PURCHASEORDERIE.CODE = PURCHASEORDER.CODE
    --LEFT JOIN PURCHASEORDERLINE PURCHASEORDERLINE ON
    --    PURCHASEORDERLINE.PURCHASEORDERCODE = PURCHASEORDER.CODE
    --LEFT JOIN PURCHASEORDERLINEIE PURCHASEORDERLINEIE ON
    --    PURCHASEORDERLINEIE.PURCHASEORDERCODE = PURCHASEORDERLINE.PURCHASEORDERCODE
    --    AND PURCHASEORDERLINEIE.ORDERLINE = PURCHASEORDERLINE.ORDERLINE
    --WHERE 
    --PURCHASEORDERLINEIE.TAXTEMPLATECODE = 'Y01'
GROUP BY
    purchaseorder.COMPANYCODE,
    purchaseorder.COUNTERCODE,
    purchaseorder.CODE,
    purchaseorder.ORDERDATE,
    businesspartner.LEGALNAME1,
    BUSINESSPARTNER.PERSON,
    PAYMENTMETHOD.LONGDESCRIPTION,
    termsofshipping.LONGDESCRIPTION,
    PURCHASEORDER.TEMPLATECODE,
    PURCHASEORDER.ORDERDATE,
    PURCHASEORDER.EXTERNALREFERENCE,
    PURCHASEORDER.INTERNALREFERENCE,
    PURCHASEORDER.DESCRIPTION,
    PURCHASEORDER.TERMSOFDELIVERYCODE,
    PURCHASEORDER.DELIVERYDESCRIPTION,
    PURCHASEORDER.TERMSOFSHIPPINGCODE,
    PURCHASEORDER.SHIPPINGDESCRIPTION,
    PURCHASEORDER.REQUIREDDUEDATE,
    PURCHASEORDER.CONFIRMEDDUEDATE,
    PURCHASEORDER.CURRENCYCODE,
    PURCHASEORDER.PAYMENTMETHODCODE,
    PURCHASEORDER.WFMORDERSTATUS,
     PURCHASEORDER.ORDERCATEGORYCODE,
    --    PURCHASEORDERLINE.ITEMDESCRIPTION,
    --    PURCHASEORDERLINE.USERPRIMARYUOMCODE,
    --    PURCHASEORDERLINE.USERPRIMARYQUANTITY,
    --    PURCHASEORDERLINE.USERSECONDARYUOMCODE,
    --    PURCHASEORDERLINE.USERSECONDARYQUANTITY,
    --    PURCHASEORDERLINE.QUALITYCODE,
    --    PURCHASEORDERLINE.WAREHOUSECODE,
    --    PURCHASEORDERLINE.COSTCENTERCODE,
    --    PURCHASEORDERLINE.PRICEUNITOFMEASURECODE,
    --    PURCHASEORDERLINE.PRICE,
    --    PURCHASEORDERLINE.NETVALUE,
    --    PURCHASEORDERLINE.CREATIONUSER,
    PURCHASEORDERIE.BASICVALUE,
    PURCHASEORDERIE.NETTVALUE,
    --    PURCHASEORDERLINEIE.TAXTEMPLATECODE,
    --    PURCHASEORDERLINEIE.BASICVALUE,
    PURCHASEORDER.ABSUNIQUEID;


-- DB2ADMIN.ITXVIEW_PURCHASE_PPN source

CREATE VIEW ITXVIEW_PURCHASE_PPN AS
SELECT
    *
FROM
    INDTAXTOTAL
WHERE
    TAXCATEGORYCODE IN(
        'TAX', 'WHT'
    )
    AND ITAXCODE IN(
        'VT4', 'P23'
    );


-- DB2ADMIN.ITXVIEW_PURCHASE_QTY source

CREATE VIEW ITXVIEW_PURCHASE_QTY AS
SELECT
    PURCHASEORDERCODE AS PO,
    P.CURRENCYCODE,
    CASE
        WHEN Pl.PRICEUNITOFMEASURECODE = 'BL' THEN sum(Pl.USERSECONDARYQUANTITY)
        ELSE
	sum(Pl.USERPRIMARYQUANTITY)
    END AS QTY,
    CASE
        WHEN Pl.PRICEUNITOFMEASURECODE = 'BL' THEN Pl.USERSECONDARYUOMCODE
        ELSE
	Pl.USERPRIMARYUOMCODE
    END AS KET_QTY
FROM
    PURCHASEORDER p
LEFT JOIN PURCHASEORDERLINE Pl ON
    p.code = pl.PURCHASEORDERCODE
    --     WHERE PURCHASEORDERCODE = 'GEL2201153'
    --WHERE PURCHASEORDERCODE IN ('PRY2200205','GEL2200013')
GROUP BY
    PURCHASEORDERCODE,
    P.CURRENCYCODE,
    PRICEUNITOFMEASURECODE,
    USERSECONDARYUOMCODE,
    USERPRIMARYUOMCODE;


-- DB2ADMIN.ITXVIEW_PURCHASE_SHIPPING_COSTS source

CREATE VIEW ITXVIEW_PURCHASE_SHIPPING_COSTS AS
SELECT
    *
FROM
    INDTAXTOTAL
WHERE
    ITAXCODE = 'FR1';


-- DB2ADMIN.ITXVIEW_PURCHASE_WFM_APPROVE source

CREATE VIEW ITXVIEW_PURCHASE_WFM_APPROVE AS
SELECT
    trim(VIEWWFMLINKEDENTITYFULL.WFMPROCESSID) AS WFMPROCESSID ,
    TRIM(SUBSTR(SUBSTR(VIEWWFMLINKEDENTITYFULL.REFERENCEDENTITYPK, LOCATE('|', VIEWWFMLINKEDENTITYFULL.REFERENCEDENTITYPK)+ 1), LOCATE('|', SUBSTR(VIEWWFMLINKEDENTITYFULL.REFERENCEDENTITYPK, LOCATE('|', VIEWWFMLINKEDENTITYFULL.REFERENCEDENTITYPK)+ 1))+ 1)) AS ORDER_KODE,
    SUBSTR(VIEWWFMLINKEDENTITYFULL.LASTUPDATEDATETIME , 1, LOCATE('.', VIEWWFMLINKEDENTITYFULL.LASTUPDATEDATETIME)-4) AS TGL_APPROVED,
    VIEWWFMLINKEDENTITYFULL.REASONCODE
FROM
    VIEWWFMLINKEDENTITYFULL VIEWWFMLINKEDENTITYFULL
WHERE
    REASONCODE = 'Approve'
GROUP BY
    VIEWWFMLINKEDENTITYFULL.WFMPROCESSID,
    VIEWWFMLINKEDENTITYFULL.REFERENCEDENTITYPK,
    VIEWWFMLINKEDENTITYFULL.LASTUPDATEDATETIME,
    VIEWWFMLINKEDENTITYFULL.REASONCODE;


-- DB2ADMIN.ITXVIEW_QTYBRUTO_YND source

CREATE VIEW ITXVIEW_QTYBRUTO_YND AS
SELECT
    s.TRANSACTIONNUMBER,
    a.*
FROM
    STOCKTRANSACTION s
RIGHT JOIN ADSTORAGE a ON
    a.UNIQUEID = s.ABSUNIQUEID
    AND a.FIELDNAME = 'QtyBruto'
    --WHERE 
    --	s.TRANSACTIONNUMBER = '000007673449';


-- DB2ADMIN.ITXVIEW_QTYPACKING source

CREATE VIEW ITXVIEW_QTYPACKING AS
SELECT
    e.DEMANDCODE,
    CASE
        WHEN sum(b.BASEPRIMARYQUANTITYUNIT) IS NULL THEN 0
        ELSE sum(b.BASEPRIMARYQUANTITYUNIT)
    END +
    CASE
        WHEN sum(b2.BASEPRIMARYQUANTITYUNIT) IS NULL THEN 0
        ELSE sum(b2.BASEPRIMARYQUANTITYUNIT)
    END +
    CASE
        WHEN SUM(b3.BASEPRIMARYQUANTITYUNIT) IS NULL THEN 0
        ELSE SUM(b3.BASEPRIMARYQUANTITYUNIT)
    END +
    CASE
        WHEN SUM(s.BASEPRIMARYQUANTITY) IS NULL THEN 0
        ELSE SUM(s.BASEPRIMARYQUANTITY)
    END +
    CASE
        WHEN sum(s2.BASEPRIMARYQUANTITY) IS NULL THEN 0
        ELSE sum(s2.BASEPRIMARYQUANTITY)
    END AS QTY_PACKING,
    CASE
        WHEN sum(b.BASESECONDARYQUANTITYUNIT) IS NULL THEN 0
        ELSE sum(b.BASESECONDARYQUANTITYUNIT)
    END +
    CASE
        WHEN sum(b2.BASESECONDARYQUANTITYUNIT) IS NULL THEN 0
        ELSE sum(b2.BASESECONDARYQUANTITYUNIT)
    END +
    CASE
        WHEN SUM(b3.BASESECONDARYQUANTITYUNIT) IS NULL THEN 0
        ELSE SUM(b3.BASESECONDARYQUANTITYUNIT)
    END +
    CASE
        WHEN SUM(s.BASESECONDARYQUANTITY) IS NULL THEN 0
        ELSE SUM(s.BASESECONDARYQUANTITY)
    END +
    CASE
        WHEN sum(s2.BASESECONDARYQUANTITY) IS NULL THEN 0
        ELSE sum(s2.BASESECONDARYQUANTITY)
    END AS QTY_PACKING_YARD
FROM
    ELEMENTSINSPECTION e
LEFT JOIN BALANCE b ON
    b.ELEMENTSCODE = e.ELEMENTCODE
    AND b.LOGICALWAREHOUSECODE = 'M039'
LEFT JOIN BALANCE b2 ON
    b2.ELEMENTSCODE = e.ELEMENTCODE
    AND b2.LOGICALWAREHOUSECODE = 'M031'
LEFT JOIN BALANCE b3 ON
    b3.ELEMENTSCODE = e.ELEMENTCODE
    AND b3.LOGICALWAREHOUSECODE = 'M504'
LEFT JOIN STOCKTRANSACTION s ON
    s.ITEMELEMENTCODE = e.ELEMENTCODE
    AND s.LOGICALWAREHOUSECODE = 'M031'
    AND s.TEMPLATECODE = 'S02'
LEFT JOIN STOCKTRANSACTION s2 ON
    s2.TEMPLATECODE = '098'
    AND s2.ITEMELEMENTCODE = e.ELEMENTCODE
WHERE
    LENGTH(TRIM(e.ELEMENTCODE))= 13
    --AND e.DEMANDCODE = '00145671'
GROUP BY
    e.DEMANDCODE;


-- DB2ADMIN.ITXVIEW_QTYPACKING_SUM source

CREATE VIEW ITXVIEW_QTYPACKING_SUM AS
SELECT
    p.ORIGDLVSALORDLINESALORDERCODE,
    p.ORIGDLVSALORDERLINEORDERLINE,
    CASE
        WHEN sum(b.BASEPRIMARYQUANTITYUNIT) IS NULL THEN 0
        ELSE sum(b.BASEPRIMARYQUANTITYUNIT)
    END +
    CASE
        WHEN sum(b2.BASEPRIMARYQUANTITYUNIT) IS NULL THEN 0
        ELSE sum(b2.BASEPRIMARYQUANTITYUNIT)
    END +
    CASE
        WHEN SUM(b3.BASEPRIMARYQUANTITYUNIT) IS NULL THEN 0
        ELSE SUM(b3.BASEPRIMARYQUANTITYUNIT)
    END +
    CASE
        WHEN SUM(s.BASEPRIMARYQUANTITY) IS NULL THEN 0
        ELSE SUM(s.BASEPRIMARYQUANTITY)
    END +
    CASE
        WHEN sum(s2.BASEPRIMARYQUANTITY) IS NULL THEN 0
        ELSE sum(s2.BASEPRIMARYQUANTITY)
    END AS QTY_PACKING,
    CASE
        WHEN sum(b.BASESECONDARYQUANTITYUNIT) IS NULL THEN 0
        ELSE sum(b.BASESECONDARYQUANTITYUNIT)
    END +
    CASE
        WHEN sum(b2.BASESECONDARYQUANTITYUNIT) IS NULL THEN 0
        ELSE sum(b2.BASESECONDARYQUANTITYUNIT)
    END +
    CASE
        WHEN SUM(b3.BASESECONDARYQUANTITYUNIT) IS NULL THEN 0
        ELSE SUM(b3.BASESECONDARYQUANTITYUNIT)
    END +
    CASE
        WHEN SUM(s.BASESECONDARYQUANTITY) IS NULL THEN 0
        ELSE SUM(s.BASESECONDARYQUANTITY)
    END +
    CASE
        WHEN sum(s2.BASESECONDARYQUANTITY) IS NULL THEN 0
        ELSE sum(s2.BASESECONDARYQUANTITY)
    END AS QTY_PACKING_YARD
FROM
    ELEMENTSINSPECTION e
LEFT JOIN BALANCE b ON
    b.ELEMENTSCODE = e.ELEMENTCODE
    AND b.LOGICALWAREHOUSECODE = 'M039'
LEFT JOIN BALANCE b2 ON
    b2.ELEMENTSCODE = e.ELEMENTCODE
    AND b2.LOGICALWAREHOUSECODE = 'M031'
LEFT JOIN BALANCE b3 ON
    b3.ELEMENTSCODE = e.ELEMENTCODE
    AND b3.LOGICALWAREHOUSECODE = 'M504'
LEFT JOIN STOCKTRANSACTION s ON
    s.ITEMELEMENTCODE = e.ELEMENTCODE
    AND s.LOGICALWAREHOUSECODE = 'M031'
    AND s.TEMPLATECODE = 'S02'
LEFT JOIN STOCKTRANSACTION s2 ON
    s2.TEMPLATECODE = '098'
    AND s2.ITEMELEMENTCODE = e.ELEMENTCODE
LEFT JOIN PRODUCTIONDEMAND p ON
    p.CODE = e.DEMANDCODE
WHERE
    LENGTH(TRIM(e.ELEMENTCODE))= 13
    --	AND p.ORIGDLVSALORDLINESALORDERCODE = 'DOM2300256'
    --	AND p.ORIGDLVSALORDERLINEORDERLINE = '30'
GROUP BY
    p.ORIGDLVSALORDLINESALORDERCODE,
    p.ORIGDLVSALORDERLINEORDERLINE;


-- DB2ADMIN.ITXVIEW_QUALITYDATA source

CREATE VIEW ITXVIEW_QUALITYDATA AS
SELECT
    q.PRODUCTIONORDERCODE,
    trim(q2.CHARACTERISTICCODE) AS CHARACTERISTICCODE,
    q2.VALUEQUANTITY
FROM
    QUALITYDOCUMENT q
LEFT JOIN QUALITYDOCLINE q2 ON
    q2.QUALITYDOCUMENTHEADERNUMBERID = q.HEADERNUMBERID
    AND q2.QUALITYDOCPRODUCTIONORDERCODE = q.PRODUCTIONORDERCODE;


-- DB2ADMIN.ITXVIEW_QUALITYDOCLINE_STATUS_TEST_TAS source

CREATE VIEW ITXVIEW_QUALITYDOCLINE_STATUS_TEST_TAS AS
SELECT
    QUALITYDOCLINE.QUALITYDOCUMENTHEADERLINE,
    QUALITYDOCLINE.TESTLINESTATUS
FROM
    QUALITYDOCLINE QUALITYDOCLINE
WHERE
    CASE
        WHEN (
            QUALITYDOCLINE.QUALITYDOCUMENTSUBCODE01 = 'R'
                OR QUALITYDOCLINE.QUALITYDOCUMENTSUBCODE01 = 'D'
        ) THEN QUALITYDOCLINE.CHARACTERISTICCODE = 'DL'
        OR QUALITYDOCLINE.CHARACTERISTICCODE = 'DE'
        ELSE QUALITYDOCLINE.CHARACTERISTICCODE <> 'DL'
        OR QUALITYDOCLINE.CHARACTERISTICCODE <> 'DE'
    END
GROUP BY
    QUALITYDOCLINE.QUALITYDOCUMENTHEADERLINE,
    QUALITYDOCLINE.TESTLINESTATUS;


-- DB2ADMIN.ITXVIEW_QUALITYDOCLINE_TAS source

CREATE VIEW ITXVIEW_QUALITYDOCLINE_TAS AS
SELECT
    QUALITYDOCLINE.QUALITYDOCUMENTHEADERLINE,
    QUALITYDOCLINE.QUALITYDOCUMENTLOTCODE,
    QUALITYDOCLINE.CHARACTERISTICCODE,
    QUALITYCHARACTERISTICTYPE.SHORTDESCRIPTION,
    QUALITYDOCLINE.VALUEQUANTITY,
    QUALITYDOCLINE.VALUEQUANTITY2,
    QUALITYDOCLINE.VALUEQUANTITY3,
    QUALITYDOCLINE.ANNOTATION
FROM
    QUALITYDOCLINE QUALITYDOCLINE
LEFT JOIN QUALITYCHARACTERISTICTYPE QUALITYCHARACTERISTICTYPE
	ON
    QUALITYCHARACTERISTICTYPE.CODE = QUALITYDOCLINE.CHARACTERISTICCODE
WHERE
    CASE
        WHEN (
            QUALITYDOCLINE.QUALITYDOCUMENTSUBCODE01 = 'R'
                OR QUALITYDOCLINE.QUALITYDOCUMENTSUBCODE01 = 'D'
        ) THEN QUALITYDOCLINE.CHARACTERISTICCODE = 'DL'
        OR QUALITYDOCLINE.CHARACTERISTICCODE = 'DE'
        ELSE QUALITYDOCLINE.CHARACTERISTICCODE <> 'DL'
        OR QUALITYDOCLINE.CHARACTERISTICCODE <> 'DE'
    END
    --    	AND QUALITYDOCLINE.QUALITYDOCUMENTLOTCODE = 'TEST';


-- DB2ADMIN.ITXVIEW_QUALITYREASON_FOC source

CREATE VIEW ITXVIEW_QUALITYREASON_FOC AS
SELECT
    ELEMENTCODE,
    QUALITYREASONCODE
FROM
    ELEMENTSINSPECTION e
WHERE
    QUALITYREASONCODE = 'FOC';


-- DB2ADMIN.ITXVIEW_RAJUT source

-- RAJUT, BOOKING BELUM READY
CREATE VIEW ITXVIEW_RAJUT AS
SELECT
    DISTINCT
	CODE,
    ORIGDLVSALORDLINESALORDERCODE,
    ORIGDLVSALORDERLINEORDERLINE,
    ITEMTYPEAFICODE,
    --	LISTAGG(TRIM(LONGDESCRIPTION) || '(' || TRIM(BUYER) || ')', ', ') AS SUMMARIZEDDESCRIPTION,
    LISTAGG(
        TRIM(LONGDESCRIPTION) || ' (' || 
			CASE
            WHEN TRIM(BUYER) IS NULL THEN '()'
            ELSE TRIM(BUYER)
        END || ') ' || 
			'(' || TRIM(CODE) || ' - ' || TRIM(ORIGDLVSALORDLINESALORDERCODE) || ')',
        ', '
    ) AS SUMMARIZEDDESCRIPTION,
    SUBCODE01,
    SUBCODE02,
    SUBCODE03,
    SUBCODE04,
    TGLRENCANA,
    TGLPOGREIGE
FROM
    (
        SELECT
            DISTINCT 
			p.ORIGDLVSALORDERLINEORDERLINE,
            p.ORIGDLVSALORDLINESALORDERCODE,
            p.CODE,
            p2.ORDERCODE,
            p2.RESERVATIONLINE AS NO_URUT_BENANG,
            CASE
                WHEN p2.ITEMTYPEAFICODE = 'DYR'
                OR p2.ITEMTYPEAFICODE = 'GYR' THEN TRIM(f.SUMMARIZEDDESCRIPTION)
                ELSE TRIM(p4.LONGDESCRIPTION)
            END AS LONGDESCRIPTION,
            CASE
                WHEN TRIM(CAST(p3.COMMENTTEXT AS VARCHAR(500))) IS NULL THEN TRIM(CAST(p5.COMMENTTEXT AS VARCHAR(500)))
                ELSE TRIM(CAST(p3.COMMENTTEXT AS VARCHAR(500)))
            END AS BUYER,
            p.SUBCODE01,
            p.SUBCODE02,
            p.SUBCODE03,
            p.SUBCODE04,
            p.SUBCODE05,
            p.ITEMTYPEAFICODE,
            p2.ITEMTYPEAFICODE AS ITEMTYPE_RESERVATION,
            a1.VALUEDATE AS TGLRENCANA,
            a2.VALUEDATE AS TGLPOGREIGE
        FROM
            PRODUCTIONDEMAND p
        LEFT JOIN PRODUCTIONRESERVATION p2 ON
            p2.ORDERCODE = p.CODE
        LEFT JOIN PRODUCT p4 ON
            p4.ITEMTYPECODE = p2.ITEMTYPEAFICODE
            AND 
								p4.SUBCODE01 = p2.SUBCODE01
            AND p4.SUBCODE02 = p2.SUBCODE02
            AND
								p4.SUBCODE03 = p2.SUBCODE03
            AND p4.SUBCODE04 = p2.SUBCODE04
            AND
								p4.SUBCODE05 = p2.SUBCODE05
            AND p4.SUBCODE06 = p2.SUBCODE06
            AND
								p4.SUBCODE07 = p2.SUBCODE07
            AND p4.SUBCODE07 = p2.SUBCODE07
        LEFT JOIN FULLITEMKEYDECODER f ON
            f.ITEMTYPECODE = p2.ITEMTYPEAFICODE
            AND 
								f.SUBCODE01 = p2.SUBCODE01
            AND f.SUBCODE02 = p2.SUBCODE02
            AND
								f.SUBCODE03 = p2.SUBCODE03
            AND f.SUBCODE04 = p2.SUBCODE04
            AND
								f.SUBCODE05 = p2.SUBCODE05
            AND f.SUBCODE06 = p2.SUBCODE06
            AND
								f.SUBCODE07 = p2.SUBCODE07
            AND f.SUBCODE07 = p2.SUBCODE07
            AND 
								f.SUBCODE08 = p2.SUBCODE08
        LEFT JOIN PRODUCTIONRESERVATIONCOMMENT p3 ON
            p3.PRODUCTIONRESERVATIONORDERCODE = p2.ORDERCODE
            AND p3.PRORESERVATIONRESERVATIONLINE = p2.RESERVATIONLINE
        LEFT JOIN PRODUCTIONDEMANDCOMMENT p5 ON
            p5.PRODUCTIONDEMANDCODE = p2.ORDERCODE
        LEFT JOIN ADSTORAGE a1 ON
            a1.UNIQUEID = p.ABSUNIQUEID
            AND a1.FIELDNAME = 'RMPReqDate'
        LEFT JOIN ADSTORAGE a2 ON
            a2.UNIQUEID = p.ABSUNIQUEID
            AND a2.FIELDNAME = 'RMPGreigeReqDateTo'
            --		WHERE 
            --			p.SUBCODE01 = 'TC' 
            --			AND p.SUBCODE02 = 'FKP' 
            --			AND p.SUBCODE03 = '16034'
            --			AND p.SUBCODE04 = '32-8-12' 
            --			AND p.ORIGDLVSALORDLINESALORDERCODE = 'DOM2301300'
            --			AND (p.ITEMTYPEAFICODE ='KGF' OR p.ITEMTYPEAFICODE ='FKG')
        ORDER BY
            p2.RESERVATIONLINE ASC
    )
GROUP BY
    CODE,
    SUBCODE01,
    SUBCODE02,
    SUBCODE03,
    SUBCODE04,
    SUBCODE05,
    ORIGDLVSALORDLINESALORDERCODE,
    ORIGDLVSALORDERLINEORDERLINE,
    TGLRENCANA,
    TGLPOGREIGE,
    --	ORIGDLVSALORDERLINEORDERLINE,
    ITEMTYPEAFICODE;


-- DB2ADMIN.ITXVIEW_RANTAI_KNT source

CREATE VIEW ITXVIEW_RANTAI_KNT AS
SELECT
    ADSTORAGE.UNIQUEID,
    ADSTORAGE.FIELDNAME,
    ADSTORAGE.VALUEDECIMAL
FROM
    DB2ADMIN.ADSTORAGE ADSTORAGE
RIGHT OUTER JOIN DB2ADMIN.PRODUCT PRODUCT ON
    ADSTORAGE.UNIQUEID = PRODUCT.ABSUNIQUEID
WHERE
    ADSTORAGE.FIELDNAME = 'rantai';


-- DB2ADMIN.ITXVIEW_REPORTADIDASQD source

CREATE VIEW ITXVIEW_REPORTADIDASQD AS
SELECT
    A.COMPANYCODE,
    A.HEADERNUMBERID,
    A.HEADERLINE,
    A.LOTCODE,
    A.DEMANDCODE,
    A.ORDPRNCUSTOMERSUPPLIERCODE,
    A.CREATIONUSER,
    A.CREATIONDATETIME,
    LISTAGG (
        TRIM( CAST( B.CHARACTERISTICCODE AS VARCHAR (20000))),
        ','
    ) AS CHARACTERISTICCODE,
    LISTAGG (
        CAST(
            B.VALUEBOOLEAN AS VARCHAR (20000)
        ),
        ','
    ) AS VALUEBOOLEAN,
    LISTAGG (
        CAST(
            B.VALUESTRING AS VARCHAR (20000)
        ),
        ','
    ) AS VALUESTRING,
    LISTAGG (
        CAST(
            B.VALUEQUANTITY AS VARCHAR (20000)
        ),
        ','
    ) AS VALUEQUANTITY,
    LISTAGG (
        CAST(
            B.VALUEGROUPCODE AS VARCHAR (20000)
        ),
        ','
    ) AS VALUEGROUPCODE
FROM
    QUALITYDOCUMENT A
LEFT JOIN QUALITYDOCLINE B ON
    A.HEADERLINE = B.QUALITYDOCUMENTHEADERLINE
    AND A.HEADERNUMBERID = B.QUALITYDOCUMENTHEADERNUMBERID
GROUP BY
    A.COMPANYCODE,
    A.HEADERNUMBERID,
    A.HEADERLINE,
    A.LOTCODE,
    A.DEMANDCODE,
    A.ORDPRNCUSTOMERSUPPLIERCODE,
    A.CREATIONUSER,
    A.CREATIONDATETIME;


-- DB2ADMIN.ITXVIEW_RESERVATION source

CREATE VIEW ITXVIEW_RESERVATION AS
SELECT
    p.PRODUCTIONORDERCODE,
    v2.ORDERCODE,
    p.GROUPLINE,
    p.ITEMTYPEAFICODE,
    p.USERPRIMARYQUANTITY,
    p.PRODRESERVATIONLINKGROUPCODE,
    v.INITIALUSERPRIMARYQUANTITY,
    p.USEDUSERPRIMARYQUANTITY,
    p.USERSECONDARYQUANTITY,
    p.USERSECONDARYUOMCODE,
    p.PICKUPQUANTITY
    --	v2.SUBCODE01,
    --	v2.SUBCODE02,
    --	v2.SUBCODE03,
    --	v2.SUBCODE04,
    --	v2.SUBCODE05,
    --	v2.SUBCODE06,
    --	v2.SUBCODE07
FROM
     VIEWPRODUCTIONRESERVATION p
RIGHT JOIN PRODUCTIONRESERVATION v2 ON
    v2.PRODUCTIONORDERCODE = p.PRODUCTIONORDERCODE
LEFT JOIN VIEWPRODUCTIONDEMANDSTEP v ON
    v.PRODUCTIONORDERCODE = p.PRODUCTIONORDERCODE
    AND v.PRODRESERVATIONLINKGROUPCODE = p.PRODRESERVATIONLINKGROUPCODE
    --WHERE 
    --	p.PRODUCTIONORDERCODE = '00046552'
GROUP BY
    p.PRODUCTIONORDERCODE,
    v2.ORDERCODE,
    p.GROUPLINE,
    p.ITEMTYPEAFICODE,
    p.USERPRIMARYQUANTITY,
    p.PRODRESERVATIONLINKGROUPCODE,
    v.INITIALUSERPRIMARYQUANTITY,
    p.USEDUSERPRIMARYQUANTITY,
    p.USERSECONDARYQUANTITY,
    p.USERSECONDARYUOMCODE,
    p.PICKUPQUANTITY
    --	v2.SUBCODE01,
    --	v2.SUBCODE02,
    --	v2.SUBCODE03,
    --	v2.SUBCODE04,
    --	v2.SUBCODE05,
    --	v2.SUBCODE06,
    --	v2.SUBCODE07;


-- DB2ADMIN.ITXVIEW_RESERVATION_GREIGE source

CREATE VIEW ITXVIEW_RESERVATION_GREIGE AS 
SELECT
    PRODUCTIONRESERVATION.ORDERCODE,
    PRODUCTIONRESERVATION.PRODUCTIONORDERCODE
FROM
    PRODUCTIONRESERVATION PRODUCTIONRESERVATION
WHERE
    (
        PRODUCTIONRESERVATION.ITEMTYPEAFICODE = 'KGF'
            OR PRODUCTIONRESERVATION.ITEMTYPEAFICODE = 'FKG'
    );


-- DB2ADMIN.ITXVIEW_RESERVATION_KK source

CREATE VIEW ITXVIEW_RESERVATION_KK AS 
SELECT
    *
FROM
    PRODUCTIONRESERVATION
WHERE
    ITEMTYPEAFICODE = 'KGF'
    OR ITEMTYPEAFICODE = 'KFF'
    --	AND ORDERCODE = '00045993';


-- DB2ADMIN.ITXVIEW_RPM2_KNT source

CREATE VIEW ITXVIEW_RPM2_KNT AS
SELECT
    ADSTORAGE.NAMENAME,
    ADSTORAGE.VALUEDECIMAL,
    PRODUCT.ITEMTYPECODE,
    PRODUCT.SUBCODE01,
    PRODUCT.SUBCODE02,
    PRODUCT.SUBCODE03,
    PRODUCT.SUBCODE04,
    PRODUCT.SUBCODE05,
    PRODUCT.SUBCODE06,
    PRODUCT.SUBCODE07,
    PRODUCT.SUBCODE08
FROM
    DB2ADMIN.ADSTORAGE ADSTORAGE
RIGHT OUTER JOIN DB2ADMIN.PRODUCT PRODUCT ON
    ADSTORAGE.UNIQUEID = PRODUCT.ABSUNIQUEID
WHERE
    NAMENAME = 'RPM2';


-- DB2ADMIN.ITXVIEW_RPM_KNT source

CREATE VIEW ITXVIEW_RPM_KNT AS
SELECT
    ADSTORAGE.NAMENAME,
    ADSTORAGE.VALUEDECIMAL,
    PRODUCT.ITEMTYPECODE,
    PRODUCT.SUBCODE01,
    PRODUCT.SUBCODE02,
    PRODUCT.SUBCODE03,
    PRODUCT.SUBCODE04,
    PRODUCT.SUBCODE05,
    PRODUCT.SUBCODE06,
    PRODUCT.SUBCODE07,
    PRODUCT.SUBCODE08
FROM
    DB2ADMIN.ADSTORAGE ADSTORAGE
RIGHT OUTER JOIN DB2ADMIN.PRODUCT PRODUCT ON
    ADSTORAGE.UNIQUEID = PRODUCT.ABSUNIQUEID
WHERE
    NAMENAME = 'RPM';


-- DB2ADMIN.ITXVIEW_SALESCONFIRMATION_TAX source

CREATE VIEW ITXVIEW_SALESCONFIRMATION_TAX AS
SELECT
    DISTINCT 
SALESORDERCODE,
    TAXTEMPLATECODE
FROM
    (
        SELECT
            s.SALESORDERCODE,
            i.TAXTEMPLATECODE,
            s.ABSUNIQUEID
        FROM
            SALESORDERLINE s
        LEFT JOIN INDTAXDETAIL i ON
            s.ABSUNIQUEID = i.ABSUNIQUEID
    );


-- DB2ADMIN.ITXVIEW_SALESORDER_ADSTORAGE source

CREATE VIEW ITXVIEW_SALESORDER_ADSTORAGE AS
SELECT
    *
FROM
    ADSTORAGE ADSTORAGE
WHERE
    NAMENAME IN (
        'DateBOSentPPC', 'DatePOReceivedFactory', 'DateCopyPORMP', 'DateReceivedKNTRMP', 'KainAKJ'
    );


-- DB2ADMIN.ITXVIEW_SALESORDER_APPROVED source

CREATE VIEW ITXVIEW_SALESORDER_APPROVED AS
SELECT
    COMPANYCODE,
    COUNTERCODE,
    CODE,
    status,
    LASTUPDATEUSER,
    tgl_buat_mkt,
    LASTUPDATEDATETIMEUTC,
    CAST(
        LEFT(jam_approve, 8)AS TIME
    )AS jam_approve_mkt,
    ApproveRMP,
    approvedRMP,
    tgl_approvedRMP,
    ApprovePPC,
    ApprovedPPC
FROM
    (
        SELECT
            SALESORDER.COMPANYCODE,
            SALESORDER.COUNTERCODE,
            SALESORDER.CODE,
            CASE
                WHEN LOGSALESORDER.CURRENTSTATUS = 1 THEN 'Active'
            END AS status,
            CASE
                WHEN LOGSALESORDER.LASTUPDATEUSER = absuser.USERID THEN absuser.FULLNAME
            END LASTUPDATEUSER,
            LEFT(SALESORDER.CREATIONDATETIME, 10) AS tgl_buat_mkt,
            LOGSALESORDER.LASTUPDATEDATETIME AS waktu,
            LEFT(LOGSALESORDER.LASTUPDATEDATETIME, 10) AS LASTUPDATEDATETIMEUTC,
            RIGHT(LOGSALESORDER.LASTUPDATEDATETIME, 15) AS jam_approve,
            a3.FIELDNAME AS ApproveRMP,
            a3.VALUESTRING AS approvedRMP,
            a5.VALUEDATE AS tgl_approvedRMP,
            a4.FIELDNAME AS ApprovePPC,
            a4.VALUESTRING AS ApprovedPPC
        FROM
            SALESORDER
        LEFT JOIN LOGSALESORDER ON
            SALESORDER.CODE = LOGSALESORDER.CODE
            AND LOGSALESORDER.LOGOPERATION = '2'
        LEFT JOIN ADSTORAGE a3 ON
            SALESORDER.ABSUNIQUEID = a3.UNIQUEID
            AND a3.FIELDNAME = 'ApprovalRMP'
        LEFT JOIN ADSTORAGE a4 ON
            SALESORDER.ABSUNIQUEID = a4.UNIQUEID
            AND a4.FIELDNAME = 'ApprovalPPC'
        LEFT JOIN ADSTORAGE a5 ON
            SALESORDER.ABSUNIQUEID = a5.UNIQUEID
            AND a5.FIELDNAME = 'ApprovalDate'
        LEFT JOIN ABSUSERDEF absuser ON
            LOGSALESORDER.LASTUPDATEUSER = absuser.USERID
        WHERE
            LOGSALESORDER.CURRENTSTATUS = 1
            AND absuser.USERID IN (
                'ridwan.setiawan', 'budiman.mkt', 'heri.bahtiar', 'deden.wijaya', 'bambang.susiyanto', 'mas.roni', 'bunbun.kui', 'nia.wuri', 'yohanes.pribadi', 'frans.subrata'
            )
            AND absuser.GROUPUSERID IN(
                'sales', 'sales.manager'
            )
        ORDER BY
            LOGSALESORDER.LASTUPDATEDATETIME DESC
    );


-- DB2ADMIN.ITXVIEW_SALESORDER_NO_PO source

CREATE VIEW ITXVIEW_SALESORDER_NO_PO AS
SELECT
    DISTINCT 
		s.SALESORDERCODE,
    s.ITEMTYPEAFICODE,
    CASE
        WHEN s2.EXTERNALREFERENCE IS NULL THEN s.EXTERNALREFERENCE
        ELSE s2.EXTERNALREFERENCE
    END AS NO_PO,
    s.USERPRIMARYQUANTITY
FROM
    SALESORDERLINE s
LEFT JOIN 
		SALESORDER s2 ON
    s2.CODE = s.SALESORDERCODE
WHERE
    s.LINETEMPLATECODE NOT IN (
        'CAP', 'CWD', 'CWE', 'ENQ', 'LAB', 'STO', 'TAS'
    )
GROUP BY
    SALESORDERCODE,
    s.ITEMTYPEAFICODE,
    s2.EXTERNALREFERENCE,
    s.EXTERNALREFERENCE,
    s.USERPRIMARYQUANTITY;


-- DB2ADMIN.ITXVIEW_SALESORDER_REPORTBUYER source

CREATE VIEW ITXVIEW_SALESORDER_REPORTBUYER AS
SELECT
    DISTINCT 
NAMA_BUYER,
    ORDERDATE,
    YEARORDER,
    MONTHORDER,
    SUM(BRUTO1) AS BRUTO1,
    SUM(BRUTO2) AS BRUTO2,
    SUM(BRUTO3) AS BRUTO3,
    SUM(BRUTO4) AS BRUTO4,
    SUM(BRUTO5) AS BRUTO5,
    SUM(BRUTO1_SS) AS BRUTO1_SS,
    SUM(BRUTO2_SS) AS BRUTO2_SS,
    SUM(BRUTO3_SS) AS BRUTO3_SS,
    SUM(BRUTO4_SS) AS BRUTO4_SS,
    SUM(BRUTO5_SS) AS BRUTO5_SS
FROM
    ITXVIEW_KGBRUTO_SALES A
    --WHERE 
    --NAMA_BUYER = 'ADIDAS'
GROUP BY
    NAMA_BUYER,
    ORDERDATE,
    YEARORDER,
    MONTHORDER;


-- DB2ADMIN.ITXVIEW_SALESORDER_REPORTHEADER source

CREATE VIEW ITXVIEW_SALESORDER_REPORTHEADER AS
SELECT
    DISTINCT   
    s1.ABSUNIQUEID,
    s1.CODE AS salorder_code,
    ads.SALESORDER,
    adb.BONORDER,
    s1.ORDERDATE AS TGL_ORDER,
    s1.COUNTERCODE AS PROD_TYPE,
    s1.EXTERNALREFERENCE AS NO_PO,
    c.CODE AS CUSTOMERCODE,
    s1.ORDERPARTNERBRANDCODE,
    b.LEGALNAME1 AS FACTORY_NAME,
    s1.CREATIONUSER AS SALES_ASSISTANT,
    s2.ITEMTYPEAFICODE,
    s2.LINETEMPLATECODE,
    o.LONGDESCRIPTION AS buyer,
    r.REMARKS,
    round(akj.TEKENSTOCK) AS TAKENSTOCK,
    MONTH(f.DATEPORECEIVEDFACTORY) AS bulan,
    DAYS(cr.DATECOPYPORMP)-DAYS(f.DATEPORECEIVEDFACTORY) AS Ontime_PO_to_RMP
FROM
    SALESORDER s1
LEFT JOIN SALESORDERLINE s2 ON
    s2.SALESORDERCODE = s1.CODE
LEFT JOIN CUSTOMERSUPPLIERDATA c ON
    s1.ORDPRNCUSTOMERSUPPLIERCODE = c.CODE
LEFT JOIN BUSINESSPARTNER b ON
    c.BUSINESSPARTNERNUMBERID = b.NUMBERID
LEFT JOIN ITXVIEW_ADSTORAGE_SALESORDER ads ON
    s1.CODE = ads.CODE
    AND s1.ABSUNIQUEID = ads.uniqueid
LEFT JOIN ITXVIEW_ADSTORAGE_BONORDER adb ON
    s1.CODE = adb.CODE
    AND s1.ABSUNIQUEID = adb.uniqueid
LEFT JOIN ITXVIEW_ADSTORAGE_REMARKS r ON
    s1.CODE = r.CODE
    AND s1.ABSUNIQUEID = r.uniqueid
LEFT JOIN ORDERPARTNERBRAND o ON
    s1.ORDPRNCUSTOMERSUPPLIERCODE = o.ORDPRNCUSTOMERSUPPLIERCODE
    AND s1.ORDERPARTNERBRANDCODE = o.CODE
LEFT JOIN ITXVIEW_ADSTORAGE_KainAKJ akj ON
    s2.SALESORDERCODE = akj.PROJECTCODE
LEFT JOIN ITXVIEW_ADSTORAGE_DATEPORECEIVEDFACTORY f ON
    f.UNIQUEID = s1.ABSUNIQUEID
    AND
    s1.CODE = f.CODE
LEFT JOIN ITXVIEW_ADSTORAGE_DATECOPYPORMP cr ON
    cr.UNIQUEID = s1.ABSUNIQUEID
    AND s1.CODE = cr.CODE
WHERE
    s1.TEMPLATECODE NOT IN (
        'CAP', 'CWD', 'CWE', 'ENQ', 'LAB', 'STO', 'TAS'
    )
    --    AND s1.CODE LIKE '%DOM23%'
    --        AND s2.ITEMTYPEAFICODE = 'KFF'
    --                AND s2.SALESORDERCODE = 'DOM23003'
GROUP BY
    s1.ABSUNIQUEID,
    s1.CODE, 
    s1.ORDERDATE,
    s1.COUNTERCODE,
    s1.EXTERNALREFERENCE,
    s2.EXTERNALREFERENCE,
    c.CODE,
    s1.ORDERPARTNERBRANDCODE,
    b.LEGALNAME1,
    s1.CREATIONUSER,
    s2.ITEMTYPEAFICODE,
    s2.LINETEMPLATECODE,
    s1.CONFIRMEDDUEDATE,
    s1.REQUIREDDUEDATE,
    o.LONGDESCRIPTION,
    ads.SALESORDER,
    adb.BONORDER,
    r.REMARKS,
    akj.TEKENSTOCK,
    f.DATEPORECEIVEDFACTORY,
    cr.DATECOPYPORMP;


-- DB2ADMIN.ITXVIEW_SALESORDER_REPORTHEADER_1 source

CREATE VIEW ITXVIEW_SALESORDER_REPORTHEADER_1 AS
SELECT
    DISTINCT o.LONGDESCRIPTION AS BUYER,
    is1.SUM_NETTO AS NETTO_1,
    is2.SUM_NETTO AS NETTO_2,
    is3.SUM_NETTO AS NETTO_3,
    is4.SUM_NETTO AS NETTO_4,
    is5.SUM_NETTO AS NETTO_5,
    is6.SUM_NETTO AS NETTO_6,
    is7.SUM_NETTO AS NETTO_7,
    is8.SUM_NETTO AS NETTO_8,
    is9.SUM_NETTO AS NETTO_9,
    is10.SUM_NETTO AS NETTO_10,
    is11.SUM_NETTO AS NETTO_11,
    is12.SUM_NETTO AS NETTO_12
FROM
    ORDERPARTNERBRAND o
LEFT JOIN ITXVIEW_SUMSALESORDER is1 ON
    is1.BUYER = o.LONGDESCRIPTION
    AND is1.BULAN = 1
LEFT JOIN ITXVIEW_SUMSALESORDER is2 ON
    is2.BUYER = o.LONGDESCRIPTION
    AND is2.BULAN = 2
LEFT JOIN ITXVIEW_SUMSALESORDER is3 ON
    is3.BUYER = o.LONGDESCRIPTION
    AND is3.BULAN = 3
LEFT JOIN ITXVIEW_SUMSALESORDER is4 ON
    is4.BUYER = o.LONGDESCRIPTION
    AND is4.BULAN = 4
LEFT JOIN ITXVIEW_SUMSALESORDER is5 ON
    is5.BUYER = o.LONGDESCRIPTION
    AND is5.BULAN = 5
LEFT JOIN ITXVIEW_SUMSALESORDER is6 ON
    is6.BUYER = o.LONGDESCRIPTION
    AND is6.BULAN = 6
LEFT JOIN ITXVIEW_SUMSALESORDER is7 ON
    is7.BUYER = o.LONGDESCRIPTION
    AND is7.BULAN = 7
LEFT JOIN ITXVIEW_SUMSALESORDER is8 ON
    is8.BUYER = o.LONGDESCRIPTION
    AND is8.BULAN = 8
LEFT JOIN ITXVIEW_SUMSALESORDER is9 ON
    is9.BUYER = o.LONGDESCRIPTION
    AND is9.BULAN = 9
LEFT JOIN ITXVIEW_SUMSALESORDER is10 ON
    is10.BUYER = o.LONGDESCRIPTION
    AND is10.BULAN = 10
LEFT JOIN ITXVIEW_SUMSALESORDER is11 ON
    is11.BUYER = o.LONGDESCRIPTION
    AND is11.BULAN = 11
LEFT JOIN ITXVIEW_SUMSALESORDER is12 ON
    is12.BUYER = o.LONGDESCRIPTION
    AND is12.BULAN = 12;


-- DB2ADMIN.ITXVIEW_SALESORDER_TGL_SALESREGISTER2 source

CREATE VIEW ITXVIEW_SALESORDER_TGL_SALESREGISTER2 AS
SELECT
    ABSUNIQUEID,
    SALESORDERCODE,
    CASE
        WHEN TGLRENCANA IS NULL THEN DATEPORECEIVEDFACTORY
        ELSE TGLRENCANA
    END AS TGLRENCANA,    
    DATEBOSENTRMP,
    DATECOPYPORMP,
    DATEPORECEIVEDFACTORY,
    DATERECEIVEDKNTRMP,
    CONFIRMEDDUEDATE,
    REQUIREDDUEDATE
FROM
    (
        SELECT
            ABSUNIQUEID,
            SALESORDERCODE,
            CASE
                WHEN TGLRENCANA IS NULL THEN TGL_CREATE
                ELSE TGLRENCANA
            END AS TGLRENCANA,
            DATEBOSENTRMP,
            DATECOPYPORMP,
            DATEPORECEIVEDFACTORY,
            DATERECEIVEDKNTRMP,
            CONFIRMEDDUEDATE,
            REQUIREDDUEDATE
        FROM
            (
                SELECT
                    DISTINCT 
	ABSUNIQUEID,
                    SALESORDERCODE,
                    CASE
                        WHEN TGLRENCANA IS NULL THEN TGLRENCANA_AKJ
                        ELSE 
        	TGLRENCANA
                    END AS TGLRENCANA,
                    DATEBOSENTRMP,
                    DATECOPYPORMP,
                    DATEPORECEIVEDFACTORY,
                    DATERECEIVEDKNTRMP,
                    CONFIRMEDDUEDATE,
                    REQUIREDDUEDATE,
                    TGL_CREATE
                FROM
                    (
                        SELECT
                            s.ABSUNIQUEID,
                            a.CODE AS ALLOCATION_CODE,
                            a.ORDERCODE AS DEMAND_KFF,
                            a2.LOTCODE AS DEMAND_KGF,
                            p2.PRODUCTIONORDERCODE,
                            CASE
                                WHEN a2.PROJECTCODE IS NULL THEN a2.LOTCODE
                                ELSE a2.PROJECTCODE
                            END AS PROJECTCODE,
                            p.DLVSALORDERLINESALESORDERCODE AS SALESORDERCODE,
                            akj.TGLRENCANA_AKJ,
                            CASE
                                WHEN a3.VALUEDATE IS NULL THEN i.TGLRENCANA
                                ELSE a3.VALUEDATE
                            END AS TGLRENCANA,
                            a4.VALUEDATE AS DATEBOSENTRMP,
                            a5.VALUEDATE AS DATECOPYPORMP,
                            a6.VALUEDATE AS DATEPORECEIVEDFACTORY,
                            a7.VALUEDATE AS DATERECEIVEDKNTRMP,
                            s.CONFIRMEDDUEDATE,
                            s.REQUIREDDUEDATE,
                            SUBSTR(a.CREATIONDATETIME , 1, LOCATE('.', a.CREATIONDATETIME)-4) AS TGL_CREATE
                        FROM
                            PRODUCTIONDEMAND p
                        LEFT JOIN SALESORDER s ON
                            s.CODE = p.ORIGDLVSALORDLINESALORDERCODE
                        LEFT JOIN PRODUCTIONRESERVATION p2 ON
                            p2.ORDERCODE = p.CODE
                            AND p2.SUBCODE01 = p.SUBCODE01
                            AND p2.SUBCODE02 = p.SUBCODE02
                            AND p2.SUBCODE03 = p.SUBCODE03
                            AND p2.SUBCODE04 = p.SUBCODE04
                        LEFT JOIN ALLOCATION a ON
                            a.ORDERCODE = p.CODE
                            AND a.DECOSUBCODE01 = p.SUBCODE01
                            AND a.DECOSUBCODE02 = p.SUBCODE02
                            AND a.DECOSUBCODE03 = p.SUBCODE03
                            AND a.DECOSUBCODE04 = p.SUBCODE04
                            AND a.DETAILTYPE = 1
                        LEFT JOIN ALLOCATION a2 ON
                            a2.CODE = a.CODE
                            AND a2.DECOSUBCODE01 = a.DECOSUBCODE01
                            AND a2.DECOSUBCODE02 = a.DECOSUBCODE02
                            AND a2.DECOSUBCODE03 = a.DECOSUBCODE03
                            AND a2.DECOSUBCODE04 = a.DECOSUBCODE04
                            AND a2.DETAILTYPE = 0
                        LEFT JOIN PRODUCTIONRESERVATION p3 ON
                            p3.ORDERCODE = a2.LOTCODE
                            AND p3.SUBCODE01 = a2.DECOSUBCODE01
                            AND p3.SUBCODE02 = a2.DECOSUBCODE02
                            AND p3.SUBCODE03 = a2.DECOSUBCODE03
                            AND p3.SUBCODE04 = a2.DECOSUBCODE04
                        LEFT JOIN PRODUCTIONDEMAND p5 ON
                            p5.CODE = a2.LOTCODE
                            AND p5.SUBCODE01 = a2.DECOSUBCODE01
                            AND p5.SUBCODE02 = a2.DECOSUBCODE02
                            AND p5.SUBCODE03 = a2.DECOSUBCODE03
                            AND p5.SUBCODE04 = a2.DECOSUBCODE04
                        LEFT JOIN ADSTORAGE a3 ON
                            a3.UNIQUEID = p5.ABSUNIQUEID
                            AND a3.FIELDNAME = 'TglRencana'
                        LEFT JOIN ADSTORAGE a4 ON
                            a4.UNIQUEID = s.ABSUNIQUEID
                            AND a4.FIELDNAME = 'DateBOSentRMP'
                        LEFT JOIN ADSTORAGE a5 ON
                            a5.UNIQUEID = s.ABSUNIQUEID
                            AND a5.FIELDNAME = 'DateCopyPORMP'
                        LEFT JOIN ADSTORAGE a6 ON
                            a6.UNIQUEID = s.ABSUNIQUEID
                            AND a6.FIELDNAME = 'DatePOReceivedFactory'
                        LEFT JOIN ADSTORAGE a7 ON
                            a7.UNIQUEID = s.ABSUNIQUEID
                            AND a7.FIELDNAME = 'DateReceivedKNTRMP'
                        LEFT JOIN ITXVIEW_ADSTORAGE_KNT_TGLRENCANA i ON
                            i.SALESORDERCODE = p.DLVSALORDERLINESALESORDERCODE
                            AND i.SUBCODE01 = p.SUBCODE01
                            AND i.SUBCODE02 = p.SUBCODE02
                            AND i.SUBCODE03 = p.SUBCODE03
                        LEFT JOIN ITXVIEW_ADSTORAGE_KAINAKJ akj ON
                            akj.PROJECTCODE = s.CODE
                        WHERE
                            --                                    	    	 p.DLVSALORDERLINESALESORDERCODE in('DOM2300223','DOM2300233') AND 
                            --                        	         p.DLVSALORDERLINESALESORDERCODE LIKE  '%EXP23%' AND 
                            --            p2.ITEMTYPEAFICODE = 'KGF'
                            s.TEMPLATECODE NOT IN (
                                'CAP', 'CWD', 'CWE', 'ENQ', 'LAB', 'STO', 'TAS'
                            )
                        GROUP BY
                            s.ABSUNIQUEID,
                            a.CODE,
                            a.ORDERCODE,
                            a2.LOTCODE,
                            p2.PRODUCTIONORDERCODE,
                            p.DLVSALORDERLINESALESORDERCODE,
                            a3.VALUEDATE,
                            a2.PROJECTCODE,
                            a4.VALUEDATE ,
                            a5.VALUEDATE ,
                            a6.VALUEDATE ,
                            a7.VALUEDATE ,
                            s.CONFIRMEDDUEDATE,
                            s.REQUIREDDUEDATE,
                            i.TGLRENCANA,
                            akj.TGLRENCANA_AKJ,
                            a.CREATIONDATETIME
                    )
            )
    );


-- DB2ADMIN.ITXVIEW_SALESREGISTER_HEADERBUYER source

CREATE VIEW ITXVIEW_SALESREGISTER_HEADERBUYER AS
SELECT
    DISTINCT 
o.CODE,
    o.LONGDESCRIPTION
FROM
    ORDERPARTNERBRAND o
LEFT JOIN SALESORDER s ON
    s.ORDPRNCUSTOMERSUPPLIERCODE = o.ORDPRNCUSTOMERSUPPLIERCODE
    AND 
s.ORDERPARTNERBRANDCODE = o.CODE
    --WHERE  s.PROJECTCODE  LIKE '%23000%';


-- DB2ADMIN.ITXVIEW_SALESRELEASELINE source

CREATE VIEW ITXVIEW_SALESRELEASELINE AS
SELECT
    SRL.PROJECTCODE AS NO_ORDER,
    SRL.CODE AS NO_RELEASE,
    SRL.DLVSALESORDERLINEORDERLINE,
    CASE
        WHEN SOL.EXTERNALREFERENCE IS NOT NULL THEN SOL.EXTERNALREFERENCE
        ELSE SO.EXTERNALREFERENCE
    END AS NO_PO,
    CASE
        WHEN SRL.EXTERNALITEM IS NOT NULL THEN SRL.EXTERNALITEM
        ELSE TRIM(SRL.SUBCODE02) || ' ' || TRIM(SRL.SUBCODE03)
    END AS NO_ITEM,
    COLOR.WARNA,
    CASE
        WHEN SRL.PROGRESSSTATUS = 1 THEN ROUND(SRL.RELEASEUSERPRIMARYQUANTITY)
        ELSE ROUND(SOL.USERPRIMARYQUANTITY)
    END AS ORDER_KG,
    CASE
        WHEN SRL.PROGRESSSTATUS = 1 THEN ROUND((SRL.RELEASEUSERSECONDARYQUANTITY), 2)
        ELSE ROUND(SOL.USERSECONDARYQUANTITY)
    END AS ORDER_YD,
    SRL_BALANCE.BALANCE_KGS,
    SRL_BALANCE.BALANCE_YDS,
    SRL_BALANCE.BALANCE_PERCENT,
    SRL_BALANCE.KETERANGAN
FROM
    SALESRELEASELINE SRL
LEFT JOIN SALESORDER SO ON
    SRL.PROJECTCODE = SO.CODE
LEFT JOIN SALESORDERLINE SOL ON
    SRL.PROJECTCODE = SOL.PROJECTCODE
    AND SRL.DLVSALESORDERLINEORDERLINE = SOL.ORDERLINE
LEFT JOIN ITXVIEWCOLOR COLOR ON
    SOL.SUBCODE01 = COLOR.SUBCODE01
    AND SOL.SUBCODE02 = COLOR.SUBCODE02
    AND SOL.SUBCODE03 = COLOR.SUBCODE03
    AND SOL.SUBCODE04 = COLOR.SUBCODE04
    AND SOL.SUBCODE05 = COLOR.SUBCODE05
    AND SOL.SUBCODE06 = COLOR.SUBCODE06
    AND SOL.SUBCODE07 = COLOR.SUBCODE07
LEFT JOIN ITXVIEW_SALESRELEASELINE_BALANCE_ORDERS SRL_BALANCE ON
    SRL.CODE = SRL_BALANCE.NO_RELEASE
    AND SRL.PROJECTCODE = SRL_BALANCE.NO_ORDER
    AND SRL.DLVSALESORDERLINEORDERLINE = SRL_BALANCE.DLVSALESORDERLINEORDERLINE;


-- DB2ADMIN.ITXVIEW_SALESRELEASELINE_BALANCE_ORDERS source

CREATE VIEW ITXVIEW_SALESRELEASELINE_BALANCE_ORDERS AS
SELECT
    NO_RELEASE,
    DLVSALESORDERLINEORDERLINE,
    NO_ORDER,
    ORDER_KG,
    ORDER_YD,
    KK_KG,
    KK_YD,
    KK_FOC,
    YD_NONFOC,
    KK_YD_FOC,
    KK_KG - ORDER_KG AS BALANCE_KGS,
    KK_YD - ORDER_YD AS BALANCE_YDS,
    round((KK_YD - ORDER_YD) / ORDER_YD, 3) * 100 AS BALANCE_PERCENT,
    CASE
        WHEN (
            KK_YD - ORDER_YD
        ) < 0 THEN 'KURANG'
        WHEN (
            KK_YD - ORDER_YD
        ) = 0 THEN 'COMPLETE'
        WHEN (
            KK_YD - ORDER_YD
        ) > 0 THEN 'OVER'
        ELSE 'KURANG'
    END AS keterangan
FROM
    (
        SELECT
            SRL.CODE AS NO_RELEASE,
            SRL.DLVSALESORDERLINEORDERLINE AS DLVSALESORDERLINEORDERLINE,
            SRL.PROJECTCODE AS NO_ORDER,
            CASE
                WHEN SRL.PROGRESSSTATUS = 1 THEN ROUND(SRL.RELEASEUSERPRIMARYQUANTITY)
                ELSE ROUND(SOL.USERPRIMARYQUANTITY)
            END AS ORDER_KG,
            CASE
                WHEN SRL.PROGRESSSTATUS = 1 THEN ROUND((SRL.RELEASEUSERSECONDARYQUANTITY), 2)
                ELSE ROUND(SOL.USERSECONDARYQUANTITY)
            END AS ORDER_YD,
            CASE
                WHEN SALESRELEASELINE_FOC.KK_FOC IS NOT NULL THEN SUM(A.USERPRIMARYQUANTITY) - SUM(SALESRELEASELINE_FOC.KK_FOC)
                ELSE
    	SUM(A.USERPRIMARYQUANTITY)
            END AS KK_KG,
            SUM(A.USERSECONDARYQUANTITY) AS YD_NONFOC,
            CASE
                WHEN SALESRELEASELINE_FOC.KK_YD_FOC IS NOT NULL THEN SUM(A.USERSECONDARYQUANTITY) - SUM(SALESRELEASELINE_FOC.KK_YD_FOC)
                ELSE
    	SUM(A.USERSECONDARYQUANTITY)
            END AS KK_YD,
            SUM(SALESRELEASELINE_FOC.KK_FOC) AS KK_FOC,
            SUM(SALESRELEASELINE_FOC.KK_YD_FOC) AS KK_YD_FOC
        FROM
            SALESRELEASELINE SRL
        LEFT JOIN SALESORDERLINE SOL ON
            SRL.PROJECTCODE = SOL.PROJECTCODE
            AND
SRL.DLVSALESORDERLINEORDERLINE = SOL.ORDERLINE
        LEFT JOIN (
                SELECT
                    *
                FROM
                    ALLOCATION A
                WHERE
                    A.DETAILTYPE = '1'
            )A ON
            SRL.CODE = A.ORDERCODE
            AND
SRL.PROJECTCODE = A.PROJECTCODE
            AND
SRL.DLVSALESORDERLINEORDERLINE = SOL.ORDERLINE
            AND
SRL.LINE = A.ORDERLINE
            --    LEFT JOIN ITXVIEW_SALESRELEASELINE_SUB_LOTCODE SUB_LOTCODE ON
            --        A.CODE = SUB_LOTCODE.CODE
            --        AND
            --        SRL.PROJECTCODE = SUB_LOTCODE.PROJECTCODE
        LEFT JOIN ITXVIEW_SALESRELEASELINE_FOC SALESRELEASELINE_FOC ON
            A.CODE = SALESRELEASELINE_FOC.ALLOCATION_CODE
            --    WHERE
            --                    SRL.CODE = '000000000008522'
            --                    AND SRL.PROJECTCODE = 'EXP2201045'
            --        AND SRL.DLVSALESORDERLINEORDERLINE = '160'
            --SRL.CODE = '000000000007765'
            --SRL.CODE = '000000000009343'
        GROUP BY
            SRL.CODE,
            SRL.PROJECTCODE,
            SRL.PROGRESSSTATUS,
            SRL.DLVSALESORDERLINEORDERLINE,
            SRL.RELEASEUSERPRIMARYQUANTITY,
            SRL.RELEASEUSERSECONDARYQUANTITY,
            SOL.USERPRIMARYQUANTITY,
            SOL.USERSECONDARYQUANTITY,
            SALESRELEASELINE_FOC.KK_FOC,
            SALESRELEASELINE_FOC.KK_YD_FOC
    )
    --    AND SRL.CODE = '000000000007192' AND SRL.PROJECTCODE = 'EXP2200216' AND SRL.DLVSALESORDERLINEORDERLINE = '60';


-- DB2ADMIN.ITXVIEW_SALESRELEASELINE_DETAIL source

CREATE VIEW ITXVIEW_SALESRELEASELINE_DETAIL AS
SELECT
    JML_ORDER,
    NO_RELEASE,
    NO_SALES,
    LINE_SALESRLS,
    NO_PO,
    NO_ITEM,
    WARNA,
    CASE
        WHEN JML_ORDER = 1 THEN order_kg_srl
        ELSE ORDER_KGS
    END AS ORDER_KG,
    CASE
        WHEN JML_ORDER = 1 THEN order_yd_srl
        ELSE ORDER_YDS
    END AS ORDER_YD,
    KK_WH,
    KK_LOTCODE,
    KK_KGS,
    KK_YDS,
    KK_FOC,
    JML_ROLL,
    BALANCE_KGS,
    BALANCE_YDS,
    CASE
        WHEN balance_percent IS NULL THEN order_yds
        ELSE balance_percent
    END AS balance_percent,
    CASE
        WHEN balance_yds < 0 THEN 'KURANG'
        WHEN balance_yds = 0 THEN 'COMPLETE'
        WHEN balance_yds > 0 THEN 'OVER'
        ELSE 'KURANG'
    END AS keterangan
FROM
    (
        SELECT
            SRL_JMLDATA.JML_RECORD AS JML_ORDER,
            SALESRELEASELINE_SUB_DETAIL.NO_RELEASE AS NO_RELEASE,
            SALESRELEASELINE_SUB_DETAIL.NO_SALES AS NO_SALES,
            SALESRELEASELINE_SUB_DETAIL.LINE_SALESRLS AS LINE_SALESRLS,
            SALESRELEASELINE_SUB_DETAIL.NO_PO AS NO_PO,
            SALESRELEASELINE_SUB_DETAIL.NO_ITEM AS NO_ITEM,
            SALESRELEASELINE_SUB_DETAIL.WARNA AS WARNA,
            round(SRL.RELEASEUSERPRIMARYQUANTITY) AS order_kg_srl,
            CASE
                WHEN SALESRELEASELINE_SUB_DETAIL.ORDER_KG IS NULL THEN round(SOL.USERPRIMARYQUANTITY)
                ELSE SALESRELEASELINE_SUB_DETAIL.ORDER_KG
            END AS order_kgs,
            (SRL.RELEASEUSERSECONDARYQUANTITY) AS order_yd_srl,
            CASE
                WHEN SALESRELEASELINE_SUB_DETAIL.ORDER_YD IS NULL THEN round(SOL.USERSECONDARYQUANTITY)
                ELSE SALESRELEASELINE_SUB_DETAIL.ORDER_YD
            END AS order_yds,
            SALESRELEASELINE_SUB_DETAIL.KK_LOTCODE AS KK_LOTCODE,
            LISTAGG(
                DISTINCT(
                    TRIM(SALESRELEASELINE_SUB_DETAIL.KK_WH)
                ),
                ', '
            ) AS KK_WH,
            CASE
                WHEN SUM(KK_FOC) IS NOT NULL THEN (
                    sum(SALESRELEASELINE_SUB_DETAIL.KK_KGS) - sum(SALESRELEASELINE_SUB_DETAIL.KK_FOC)
                )
                ELSE sum(KK_KGS)
            END AS KK_KGS,
            CASE
                WHEN SUM(KK_FOC) IS NOT NULL THEN (
                    sum(SALESRELEASELINE_SUB_DETAIL.KK_YDS) - sum(SALESRELEASELINE_SUB_DETAIL.KK_YD_FOC)
                )
                ELSE sum(KK_YDS)
            END AS KK_YDS,
            sum(SALESRELEASELINE_SUB_DETAIL.KK_FOC) AS KK_FOC,
            sum(SALESRELEASELINE_SUB_DETAIL.JML_ROLL) AS JML_ROLL,
            CASE
                WHEN SRL_JMLDATA.JML_RECORD = 1 THEN sum(SALESRELEASELINE_SUB_DETAIL.KK_KGS) - SRL.RELEASEUSERPRIMARYQUANTITY
                ELSE sum(SALESRELEASELINE_SUB_DETAIL.KK_KGS) - SALESRELEASELINE_SUB_DETAIL.ORDER_KG
            END AS balance_kgs,
            CASE
                WHEN SRL_JMLDATA.JML_RECORD = 1 THEN sum(SALESRELEASELINE_SUB_DETAIL.KK_YDS) - SRL.RELEASEUSERSECONDARYQUANTITY
                ELSE sum(SALESRELEASELINE_SUB_DETAIL.KK_YDS) - SALESRELEASELINE_SUB_DETAIL.ORDER_YD
            END AS balance_yds,
            CASE
                WHEN SRL_JMLDATA.JML_RECORD = 1 THEN round((sum(SALESRELEASELINE_SUB_DETAIL.KK_YDS) - SRL.RELEASEUSERSECONDARYQUANTITY) / SRL.RELEASEUSERSECONDARYQUANTITY, 3) * 100
                ELSE round((sum(SALESRELEASELINE_SUB_DETAIL.KK_YDS) - SALESRELEASELINE_SUB_DETAIL.ORDER_YD) / SALESRELEASELINE_SUB_DETAIL.ORDER_YD, 3) * 100
            END AS balance_percent
        FROM
            SALESRELEASELINE SRL
        LEFT JOIN ITXVIEW_SUB_SALESRELEASELINE SALESRELEASELINE_SUB_DETAIL ON
            SRL.CODE = SALESRELEASELINE_SUB_DETAIL.NO_RELEASE
            AND SRL.PROJECTCODE = SALESRELEASELINE_SUB_DETAIL.NO_SALES
        LEFT JOIN SALESORDERLINE SOL ON
            SALESRELEASELINE_SUB_DETAIL.NO_SALES = SOL.SALESORDERCODE
            AND SALESRELEASELINE_SUB_DETAIL.LINE_SALESRLS = SOL.ORDERLINE
        LEFT JOIN ITXVIEW_SALESRELEASELINE_JMLDATA SRL_JMLDATA ON
            SRL.CODE = SRL_JMLDATA.NO_RELEASE
        GROUP BY
            SRL_JMLDATA.JML_RECORD,
            SALESRELEASELINE_SUB_DETAIL.NO_RELEASE,
            SALESRELEASELINE_SUB_DETAIL.LINE_SALESRLS,
            SALESRELEASELINE_SUB_DETAIL.NO_SALES,
            SALESRELEASELINE_SUB_DETAIL.NO_PO,
            SALESRELEASELINE_SUB_DETAIL.NO_ITEM,
            SALESRELEASELINE_SUB_DETAIL.WARNA,
            SRL.RELEASEUSERPRIMARYQUANTITY,
            SRL.RELEASEUSERSECONDARYQUANTITY,
            SALESRELEASELINE_SUB_DETAIL.ORDER_KG,
            SALESRELEASELINE_SUB_DETAIL.ORDER_YD,
            SOL.USERPRIMARYQUANTITY,
            SOL.USERSECONDARYQUANTITY,
            SALESRELEASELINE_SUB_DETAIL.KK_LOTCODE
    );


-- DB2ADMIN.ITXVIEW_SALESRELEASELINE_DETAIL_JMLDATA source

CREATE VIEW ITXVIEW_SALESRELEASELINE_DETAIL_JMLDATA AS 
SELECT
    CODE AS NO_RELEASE,
    PROJECTCODE AS NO_ORDER
    --    DLVSALESORDERLINEORDERLINE AS ORDER_LINE,
    --   	count(CODE) AS JML_RECORD
FROM
    SALESRELEASELINE
    --            WHERE CODE = '000000000007765'
    --        WHERE code = '000000000007192'
    --    WHERE 
    --    CODE = '000000000008522'
    ----    AND PROJECTCODE = 'EXP2201045'
GROUP BY
    CODE,
    PROJECTCODE;


-- DB2ADMIN.ITXVIEW_SALESRELEASELINE_DETAIL_ORDER source

CREATE VIEW ITXVIEW_SALESRELEASELINE_DETAIL_ORDER AS
SELECT
    JML_ORDER,
    NO_RELEASE,
    NO_SALES,
    LINE_SALESRLS,
    NO_PO,
    NO_ITEM,
    WARNA,
    order_kg_srl,
    ORDER_KGS,
    CASE
        WHEN JML_ORDER = 1 THEN order_kg_srl
        ELSE ORDER_KGS
    END AS ORDER_KG,
    CASE
        WHEN JML_ORDER = 1 THEN order_yd_srl
        ELSE ORDER_YDS
    END AS ORDER_YD,
    KK_WH,
    KK_LOTCODE,
    KK_KGS,
    KK_YDS,
    KK_FOC,
    JML_ROLL,
    BALANCE_KGS,
    BALANCE_YDS,
    CASE
        WHEN balance_percent IS NULL THEN order_yds
        ELSE balance_percent
    END AS balance_percent,
    CASE
        WHEN balance_yds < 0 THEN 'KURANG'
        WHEN balance_yds = 0 THEN 'COMPLETE'
        WHEN balance_yds > 0 THEN 'OVER'
        ELSE 'KURANG'
    END AS keterangan
FROM
    (
        SELECT
            SRL_JMLDATA.JML_RECORD AS JML_ORDER,
            SALESRELEASELINE_SUB_DETAIL.NO_RELEASE AS NO_RELEASE,
            SALESRELEASELINE_SUB_DETAIL.NO_SALES AS NO_SALES,
            SALESRELEASELINE_SUB_DETAIL.LINE_SALESRLS AS LINE_SALESRLS,
            SALESRELEASELINE_SUB_DETAIL.NO_PO AS NO_PO,
            SALESRELEASELINE_SUB_DETAIL.NO_ITEM AS NO_ITEM,
            SALESRELEASELINE_SUB_DETAIL.WARNA AS WARNA,
            ROUND(SRL.RELEASEUSERPRIMARYQUANTITY) AS order_kg_srl,
            CASE
                WHEN SALESRELEASELINE_SUB_DETAIL.ORDER_KG IS NULL THEN round(SOL.USERPRIMARYQUANTITY)
                ELSE SALESRELEASELINE_SUB_DETAIL.ORDER_KG
            END AS order_kgs,
            (SRL.RELEASEUSERSECONDARYQUANTITY) AS order_yd_srl,
            CASE
                WHEN SALESRELEASELINE_SUB_DETAIL.ORDER_YD IS NULL THEN round(SOL.USERSECONDARYQUANTITY)
                ELSE SALESRELEASELINE_SUB_DETAIL.ORDER_YD
            END AS order_yds,
            SALESRELEASELINE_SUB_DETAIL.KK_LOTCODE AS KK_LOTCODE,
            LISTAGG(
                DISTINCT(
                    TRIM(SALESRELEASELINE_SUB_DETAIL.KK_WH)
                ),
                ', '
            ) AS KK_WH,
            CASE
                WHEN SUM(KK_FOC) IS NOT NULL THEN (
                    sum(SALESRELEASELINE_SUB_DETAIL.KK_KGS) - sum(SALESRELEASELINE_SUB_DETAIL.KK_FOC)
                )
                ELSE sum(KK_KGS)
            END AS KK_KGS,
            CASE
                WHEN SUM(KK_FOC) IS NOT NULL THEN (
                    sum(SALESRELEASELINE_SUB_DETAIL.KK_YDS) - sum(SALESRELEASELINE_SUB_DETAIL.KK_YD_FOC)
                )
                ELSE sum(KK_YDS)
            END AS KK_YDS,
            sum(SALESRELEASELINE_SUB_DETAIL.KK_FOC) AS KK_FOC,
            sum(SALESRELEASELINE_SUB_DETAIL.JML_ROLL) AS JML_ROLL,
            CASE
                WHEN SRL_JMLDATA.JML_RECORD = 1 THEN sum(SALESRELEASELINE_SUB_DETAIL.KK_KGS) - SRL.RELEASEUSERPRIMARYQUANTITY
                ELSE sum(SALESRELEASELINE_SUB_DETAIL.KK_KGS) - SALESRELEASELINE_SUB_DETAIL.ORDER_KG
            END AS balance_kgs,
            CASE
                WHEN SRL_JMLDATA.JML_RECORD = 1 THEN sum(SALESRELEASELINE_SUB_DETAIL.KK_YDS) - SRL.RELEASEUSERSECONDARYQUANTITY
                ELSE sum(SALESRELEASELINE_SUB_DETAIL.KK_YDS) - SALESRELEASELINE_SUB_DETAIL.ORDER_YD
            END AS balance_yds,
            CASE
                WHEN SRL_JMLDATA.JML_RECORD = 1 THEN round((sum(SALESRELEASELINE_SUB_DETAIL.KK_YDS) - SRL.RELEASEUSERSECONDARYQUANTITY) / SRL.RELEASEUSERSECONDARYQUANTITY, 3) * 100
                ELSE round((sum(SALESRELEASELINE_SUB_DETAIL.KK_YDS) - SALESRELEASELINE_SUB_DETAIL.ORDER_YD) / SALESRELEASELINE_SUB_DETAIL.ORDER_YD, 3) * 100
            END AS balance_percent
        FROM
            SALESRELEASELINE SRL
        LEFT JOIN ITXVIEW_SUB_SALESRELEASELINE SALESRELEASELINE_SUB_DETAIL ON
            SRL.CODE = SALESRELEASELINE_SUB_DETAIL.NO_RELEASE
            AND SRL.PROJECTCODE = SALESRELEASELINE_SUB_DETAIL.NO_SALES
        LEFT JOIN SALESORDERLINE SOL ON
            SALESRELEASELINE_SUB_DETAIL.NO_SALES = SOL.SALESORDERCODE
            AND SALESRELEASELINE_SUB_DETAIL.LINE_SALESRLS = SOL.ORDERLINE
        LEFT JOIN ITXVIEW_SALESRELEASELINE_JMLDATA SRL_JMLDATA ON
            SRL.CODE = SRL_JMLDATA.NO_RELEASE
        GROUP BY
            SRL_JMLDATA.JML_RECORD,
            SALESRELEASELINE_SUB_DETAIL.NO_RELEASE,
            SALESRELEASELINE_SUB_DETAIL.LINE_SALESRLS,
            SALESRELEASELINE_SUB_DETAIL.NO_SALES,
            SALESRELEASELINE_SUB_DETAIL.NO_PO,
            SALESRELEASELINE_SUB_DETAIL.NO_ITEM,
            SALESRELEASELINE_SUB_DETAIL.WARNA,
            SRL.RELEASEUSERPRIMARYQUANTITY,
            SRL.RELEASEUSERSECONDARYQUANTITY,
            SALESRELEASELINE_SUB_DETAIL.ORDER_KG,
            SALESRELEASELINE_SUB_DETAIL.ORDER_YD,
            SOL.USERPRIMARYQUANTITY,
            SOL.USERSECONDARYQUANTITY,
            SALESRELEASELINE_SUB_DETAIL.KK_LOTCODE
    );


-- DB2ADMIN.ITXVIEW_SALESRELEASELINE_EXIM source

CREATE VIEW ITXVIEW_SALESRELEASELINE_EXIM AS
SELECT
    SALESRELEASELINE_DETAIL.JML_ORDER,
    SALESRELEASELINE_DETAIL.NO_RELEASE,
    SALESRELEASELINE_DETAIL.LINE_SALESRLS,
    SALESRELEASELINE_DETAIL.NO_SALES,
    SALESRELEASELINE_DETAIL.NO_PO,
    SALESRELEASELINE_DETAIL.NO_ITEM,
    SALESRELEASELINE_DETAIL.WARNA,
    SALESRELEASELINE_DETAIL.ORDER_KG,
    SALESRELEASELINE_DETAIL.ORDER_YD,
    SALESRELEASELINE_DETAIL.KK_WH,
    SALESRELEASELINE_DETAIL.KK_LOTCODE,
    SALESRELEASELINE_DETAIL.KK_KGS,
    SALESRELEASELINE_DETAIL.KK_YDS,
    SALESRELEASELINE_DETAIL.KK_FOC,
    SALESRELEASELINE_DETAIL.JML_ROLL,
    CASE
        WHEN SALESRELEASELINE_DETAIL.JML_ORDER = 1 THEN SRL_ORDER_1.BALANCE_KGS
        ELSE SALESRELEASELINE_DETAIL.BALANCE_KGS
    END AS BALANCE_KGS,
    CASE
        WHEN SALESRELEASELINE_DETAIL.JML_ORDER = 1 THEN SRL_ORDER_1.BALANCE_YDS
        ELSE SALESRELEASELINE_DETAIL.BALANCE_YDS
    END AS BALANCE_YDS,
    CASE
        WHEN SALESRELEASELINE_DETAIL.JML_ORDER = 1 THEN SRL_ORDER_1.BALANCE_PERCENT
        ELSE SALESRELEASELINE_DETAIL.BALANCE_PERCENT
    END AS BALANCE_PERCENT,
    CASE
        WHEN SALESRELEASELINE_DETAIL.JML_ORDER = 1 THEN SRL_ORDER_1.KETERANGAN
        ELSE SALESRELEASELINE_DETAIL.KETERANGAN
    END AS KETERANGAN
FROM
    ITXVIEW_SALESRELEASELINE_DETAIL SALESRELEASELINE_DETAIL
LEFT JOIN ITXVIEW_SALESRELEASELINE_ORDER_1 SRL_ORDER_1 ON
    SALESRELEASELINE_DETAIL.NO_RELEASE = SRL_ORDER_1.NO_RELEASE
    AND SALESRELEASELINE_DETAIL.NO_SALES = SRL_ORDER_1.NO_SALES;


-- DB2ADMIN.ITXVIEW_SALESRELEASELINE_FOC source

CREATE VIEW ITXVIEW_SALESRELEASELINE_FOC AS 
SELECT
    A.CODE AS allocation_code,
    A.LOTCODE AS lotcode,
    A.PROJECTCODE AS no_sales,
    A.WAREHOUSELOCATIONCODE AS kk_wh,
    SUM(A.USERSECONDARYQUANTITY) AS kk_yd_foc,
    --    A.ITEMELEMENTCODE AS item_element,
    E.QUALITYREASONCODE AS KET_FOC,
    SUM(E.WEIGHTNET) AS KK_FOC
FROM
    ITXVIEWALLOCATION0_SJEXIM A
LEFT JOIN ELEMENTSINSPECTION E ON
    a.ITEMELEMENTCODE = e.ELEMENTCODE
WHERE
    --    E.QUALITYREASONCODE IS NULL 
    --        AND
    E.QUALITYREASONCODE = 'FOC'
    --    		AND
    --        A.CODE in ('000000105324','000000104782','000000104783','000000104801','000000105320');
    --            a.code IN ('000000120967')--,'000000104783');
GROUP BY
    A.CODE,
    A.LOTCODE,
    A.PROJECTCODE,
    A.WAREHOUSELOCATIONCODE,
    --    A.ITEMELEMENTCODE AS item_element,
    E.QUALITYREASONCODE;


-- DB2ADMIN.ITXVIEW_SALESRELEASELINE_JMLDATA source

CREATE VIEW ITXVIEW_SALESRELEASELINE_JMLDATA AS 
SELECT
    CODE AS NO_RELEASE,
    --        PROJECTCODE AS NO_ORDER,
    -- DLVSALESORDERLINEORDERLINE AS ORDER_LINE,
    count(*) AS JML_RECORD
FROM
    --ITXVIEW_SALESRELEASELINE_DETAIL_JMLDATA
    SALESRELEASELINE
    --            WHERE NO_RELEASE in ('000000000007765','000000000007192','000000000008522')
    --    WHERE code = '000000000007192'
GROUP BY
    CODE
    --  DLVSALESORDERLINEORDERLINE
    --        PROJECTCODE
    --    DLVSALESORDERLINEORDERLINE;


-- DB2ADMIN.ITXVIEW_SALESRELEASELINE_ORDERS source

CREATE VIEW ITXVIEW_SALESRELEASELINE_ORDERS AS
SELECT
    NO_RELEASE,
    DLVSALESORDERLINEORDERLINE,
    NO_ORDER,
    --    SOL.ORDERLINE,
    ORDER_KG,
    ORDER_YD,
    KK_WH,
    KK_LOTCODE,
    KK_KG,
    YD_NONFOC,
    KK_YD,
    KK_FOC,
    KK_YD_FOC,
    JML_ROLL,
    KK_KG - ORDER_KG AS BALANCE_KGS,
    KK_YD - ORDER_YD AS BALANCE_YDS,
    ROUND((YD_NONFOC - ORDER_YD) / ORDER_YD) AS BALANCE_PERCENT,
    CASE
        WHEN KK_YD - ORDER_YD < 0 THEN 'KURANG'
        WHEN KK_YD - ORDER_YD = 0 THEN 'COMPLETE'
        WHEN KK_YD - ORDER_YD > 0 THEN 'OVER'
        ELSE
    	'KURANG'
    END AS KETERANGAN
FROM
    (
        SELECT
            SRL.CODE AS NO_RELEASE,
            SRL.DLVSALESORDERLINEORDERLINE AS DLVSALESORDERLINEORDERLINE,
            SRL.PROJECTCODE AS NO_ORDER,
            --    SOL.ORDERLINE,
    CASE
                WHEN SRL.PROGRESSSTATUS = 1 THEN ROUND(SRL.RELEASEUSERPRIMARYQUANTITY)
                ELSE ROUND(SOL.USERPRIMARYQUANTITY)
            END AS ORDER_KG,
            CASE
                WHEN SRL.PROGRESSSTATUS = 1 THEN ROUND((SRL.RELEASEUSERSECONDARYQUANTITY), 2)
                ELSE ROUND(SOL.USERSECONDARYQUANTITY)
            END AS ORDER_YD,
            SUB_LOTCODE.KK_WH AS KK_WH,
            SUB_LOTCODE.KK_LOTCODE AS KK_LOTCODE,
            --    A.CODE AS CODE1,
            --    SUB_LOTCODE.CODE AS CODE2,
    CASE
                WHEN SALESRELEASELINE_FOC.KK_FOC IS NOT NULL THEN A.USERPRIMARYQUANTITY - SALESRELEASELINE_FOC.KK_FOC
                ELSE
    	A.USERPRIMARYQUANTITY
            END AS KK_KG,
            A.USERSECONDARYQUANTITY AS YD_NONFOC,
            CASE
                WHEN SALESRELEASELINE_FOC.KK_YD_FOC IS NOT NULL THEN A.USERSECONDARYQUANTITY - SALESRELEASELINE_FOC.KK_YD_FOC
                ELSE
    	A.USERSECONDARYQUANTITY
            END AS KK_YD,
            SALESRELEASELINE_FOC.KK_FOC AS KK_FOC,
            SALESRELEASELINE_FOC.KK_YD_FOC AS KK_YD_FOC,
            SUB_LOTCODE.JML_ROLL AS JML_ROLL
        FROM
            SALESRELEASELINE SRL
        LEFT JOIN SALESORDERLINE SOL ON
            SRL.PROJECTCODE = SOL.PROJECTCODE
            AND
SRL.DLVSALESORDERLINEORDERLINE = SOL.ORDERLINE
        LEFT JOIN (
                SELECT
                    *
                FROM
                    ALLOCATION A
                WHERE
                    A.DETAILTYPE = '1'
            )A ON
            SRL.CODE = A.ORDERCODE
            AND
SRL.PROJECTCODE = A.PROJECTCODE
            AND
SRL.DLVSALESORDERLINEORDERLINE = SOL.ORDERLINE
            AND
SRL.LINE = A.ORDERLINE
        LEFT JOIN ITXVIEW_SALESRELEASELINE_SUB_LOTCODE SUB_LOTCODE ON
            A.CODE = SUB_LOTCODE.CODE
            AND
        SRL.PROJECTCODE = SUB_LOTCODE.PROJECTCODE
        LEFT JOIN ITXVIEW_SALESRELEASELINE_FOC SALESRELEASELINE_FOC ON
            A.CODE = SALESRELEASELINE_FOC.ALLOCATION_CODE
        WHERE
            SUB_LOTCODE.ORIGINTRNTRANSACTIONNUMBER IS NULL
            --            AND SRL.CODE = '000000000008522'
            --            AND SRL.PROJECTCODE = 'EXP2201045'
            --        AND SRL.DLVSALESORDERLINEORDERLINE = '160'
            --    AND SRL.CODE = '000000000007765' -- '000000000009343'
    )
    --    AND SRL.CODE = '000000000007192' AND SRL.PROJECTCODE = 'EXP2200216' AND SRL.DLVSALESORDERLINEORDERLINE = '60';


-- DB2ADMIN.ITXVIEW_SALESRELEASELINE_ORDER_1 source

CREATE VIEW ITXVIEW_SALESRELEASELINE_ORDER_1 AS
SELECT
    JML_ORDER,
    NO_RELEASE,
    NO_SALES,
    ORDER_KG,
    ORDER_YD,
    BALANCE_KGS,
    BALANCE_YDS,
    CASE
        WHEN balance_percent IS NULL THEN order_yd
        ELSE balance_percent
    END AS balance_percent,
    CASE
        WHEN balance_yds < 0 THEN 'KURANG'
        WHEN balance_yds = 0 THEN 'COMPLETE'
        WHEN balance_yds > 0 THEN 'OVER'
        ELSE 'KURANG'
    END AS keterangan
FROM
    (
        SELECT
            JML_ORDER AS JML_ORDER,
            NO_RELEASE AS NO_RELEASE,
            NO_SALES AS NO_SALES,
            ORDER_KG AS ORDER_KG,
            ORDER_YD AS ORDER_YD,
            SUM(KK_KGS) - ORDER_KG AS balance_kgs,
            SUM(KK_YDS) - ORDER_YD AS balance_yds,
            round((sum(KK_YDS) - ORDER_YD) / ORDER_YD, 3) * 100 AS balance_percent
        FROM
            ITXVIEW_SALESRELEASELINE_DETAIL_ORDER
        WHERE
            JML_ORDER = '1'
        GROUP BY
            NO_RELEASE,
            NO_SALES,
            JML_ORDER,
            ORDER_KG,
            ORDER_YD
    )
WHERE
    BALANCE_YDS IS NOT NULL;


-- DB2ADMIN.ITXVIEW_SALESRELEASELINE_QTY source

CREATE VIEW ITXVIEW_SALESRELEASELINE_QTY AS 
SELECT
    SRL_JMLDATA.JML_RECORD AS JML_DATA,
    SOL.PROJECTCODE AS NO_ORDER,
    SRL.LINE,
    A.LOTCODE,
    LISTAGG(
        DISTINCT(
            TRIM(A.WAREHOUSELOCATIONCODE)
        ),
        ', '
    ) AS KK_WH,
    SOL.ORDERLINE,
    SRL.PROGRESSSTATUS,
    --    A.CODE AS CODE_ALLOCATION,
    SRL.RELEASEDATE,
    SOL.PRICEUNITOFMEASURECODE,
    SRL.CODE AS NO_RELEASE,
    CASE
        WHEN SRL.PROGRESSSTATUS = 1 THEN ROUND(SRL.RELEASEUSERPRIMARYQUANTITY)
        --	    WHEN SRL_JMLDATA.JML_RECORD = 1 THEN ROUND(SRL.RELEASEUSERPRIMARYQUANTITY)
        ELSE ROUND(SOL.USERPRIMARYQUANTITY)
    END AS ORDER_KG,
    CASE
        WHEN SRL.PROGRESSSTATUS = 1 THEN ROUND((SRL.RELEASEUSERSECONDARYQUANTITY), 2)
        --	     WHEN SRL_JMLDATA.JML_RECORD = 1 THEN ROUND((SRL.RELEASEUSERSECONDARYQUANTITY), 2)
        ELSE ROUND(SOL.USERSECONDARYQUANTITY)
    END AS ORDER_YD
FROM
    SALESORDER SO
LEFT JOIN SALESORDERLINE SOL ON
    SO.CODE = SOL.SALESORDERCODE
LEFT JOIN SALESRELEASELINE SRL ON
    SOL.PROJECTCODE = SRL.PROJECTCODE
    AND
    sol.ORDERLINE = srl.DLVSALESORDERLINEORDERLINE
LEFT JOIN SALESDOCUMENTLINE SDL ON
    SRL.CODE = SDL.PREVIOUSCODE
    AND
	SRL.PROJECTCODE = SDL.PROJECTCODE
    AND
	SRL.DLVSALESORDERLINEORDERLINE = SDL.DLVSALESORDERLINEORDERLINE
LEFT JOIN (
        SELECT
            *
        FROM
            ALLOCATION A
        WHERE
            A.DETAILTYPE = '0'
    )A ON
    --    SRL.CODE = A.ORDERCODE
    --    AND
    --    SRL.PROJECTCODE = A.PROJECTCODE
    --    AND
    --SRL.DLVSALESORDERLINEORDERLINE = SOL.ORDERLINE
    SDL.PROJECTCODE = A.PROJECTCODE
    AND
	SDL.DLVSALORDERLINESALESORDERCODE = A.PROJECTCODE
LEFT JOIN ITXVIEW_SALESRELEASELINE_JMLDATA SRL_JMLDATA ON
    SRL.CODE = SRL_JMLDATA.NO_RELEASE
    --WHERE SO.CODE IN ('RPE2200515')
    --  WHERE SO.CODE IN ('RPE2200484','RPE2200515','RPE2200519','RPE2200576') AND SRL.CODE = '000000000007765'
    --    WHERE SO.CODE IN ('EXP2200216') AND 
WHERE 
    A.WAREHOUSELOCATIONCODE IS NOT NULL
    --    AND
    --    SRL.CODE = '000000000007192'
    --        WHERE SRL.CODE = '000000000005916'
    --    		 SRL.CODE = '000000000007765'
    --             SRL.CODE = '000000000005636' --AND A.LOTCODE = '00000439'--FOC;
    --WHERE 
    --SRL.CODE = :CODE
    --SRL.PROJECTCODE = 'EXP2200216' AND 
    --A.LOTCODE = '00004105' AND 
    --SRL.CODE = '000000000007192' AND A.CODE = '000000104777'
    --WHERE SRL.PROJECTCODE = 'RPE2200535' AND A.LOTCODE = '00029415 ' AND SRL.CODE = '000000000007765' AND A.CODE = '000000117567'
GROUP BY
    SRL_JMLDATA.JML_RECORD,
    SOL.PROJECTCODE,
    SRL.LINE,
    SOL.ORDERLINE,
    SRL.PROGRESSSTATUS,
    A.LOTCODE,
    --    A.CODE,
    SRL.RELEASEDATE,
    SOL.PRICEUNITOFMEASURECODE,
    SOL.USERPRIMARYQUANTITY,
    SOL.USERSECONDARYQUANTITY,
    SRL.CODE,
    SRL.RELEASEUSERPRIMARYQUANTITY,
    SRL.RELEASEUSERSECONDARYQUANTITY;


-- DB2ADMIN.ITXVIEW_SALESRELEASELINE_SUB_LOTCODE source

CREATE VIEW ITXVIEW_SALESRELEASELINE_SUB_LOTCODE AS
SELECT
    code,
    lotcode AS KK_LOTCODE,
    LISTAGG(
        DISTINCT(
            TRIM(ITXVIEWALLOCATION0_SJEXIM.WAREHOUSELOCATIONCODE)
        ),
        ', '
    ) AS KK_WH,
    ORIGINTRNTRANSACTIONNUMBER,
    PROJECTCODE,
    sum(COMPONENTLINENUMBER) AS jml_roll
FROM
    ITXVIEWALLOCATION0_SJEXIM
    --    WHERE ORIGINTRNTRANSACTIONNUMBER IS NULL
    --    WHERE CODE IN ('000000147029','000000136129 ','000000136130 ')  
    --    WHERE code = '000000117564'
    --    WHERE CODE IN ('000000104803','000000104809')
GROUP BY
    code,
    lotcode,
    PROJECTCODE,
    ORIGINTRNTRANSACTIONNUMBER;


-- DB2ADMIN.ITXVIEW_SALESRELESLINE_ALLOCATION source

CREATE VIEW ITXVIEW_SALESRELESLINE_ALLOCATION AS
SELECT
    code,
    PROJECTCODE,
    LOTCODE,
    decosubcode01,
    decosubcode02,
    decosubcode03,
    decosubcode04,
    decosubcode05,
    decosubcode06,
    decosubcode07,
    sum(USERPRIMARYQUANTITY) AS kgs,
    sum(USERSECONDARYQUANTITY) AS yds
FROM
    allocation
WHERE
    	DETAILTYPE = '0'
    --    	AND
    --    code = '000000104777'
GROUP BY
    code,
    PROJECTCODE,
    LOTCODE,
    decosubcode01,
    decosubcode02,
    decosubcode03,
    decosubcode04,
    decosubcode05,
    decosubcode06,
    decosubcode07;


-- DB2ADMIN.ITXVIEW_SALES_NETTOSUBCODE source

CREATE VIEW ITXVIEW_SALES_NETTOSUBCODE AS
SELECT
    s.CODE,
    s2.ITEMTYPEAFICODE,
    s.ABSUNIQUEID,
    CASE
        WHEN s2.SUBCODE01 = 'C'
        AND s2.ITEMTYPEAFICODE = 'KFF'
	THEN SUM(s2.USERPRIMARYQUANTITY)
        ELSE 0
    END AS QTY_CM,
    CASE
        WHEN s2.SUBCODE01 = 'C'
        AND s2.ITEMTYPEAFICODE = 'FKF'
	THEN SUM(s2.USERPRIMARYQUANTITY)
        ELSE 0
    END AS QTY_CM_FK,
    CASE
        WHEN s2.SUBCODE01 = 'CX'
        AND s2.ITEMTYPEAFICODE = 'KFF'
	THEN SUM(s2.USERPRIMARYQUANTITY)
        ELSE 0
    END AS QTY_CMDX,
    CASE
        WHEN s2.SUBCODE01 = 'CX'
        AND s2.ITEMTYPEAFICODE = 'FKF'
	THEN SUM(s2.USERPRIMARYQUANTITY)
        ELSE 0
    END AS QTY_CMDX_FK,
    CASE
        WHEN s2.SUBCODE01 = 'CVCX'
        AND s2.ITEMTYPEAFICODE = 'KFF'
	THEN SUM(s2.USERPRIMARYQUANTITY)
        ELSE 0
    END AS QTY_CMPEDX,
    CASE
        WHEN s2.SUBCODE01 = 'CVCX'
        AND s2.ITEMTYPEAFICODE = 'FKF'
	THEN SUM(s2.USERPRIMARYQUANTITY)
        ELSE 0
    END AS QTY_CMPEDX_FK,
    CASE
        WHEN s2.SUBCODE01 = 'CVC'
        AND s2.ITEMTYPEAFICODE = 'KFF'
	THEN SUM(s2.USERPRIMARYQUANTITY)
        ELSE 0
    END AS QTY_CVC,
    CASE
        WHEN s2.SUBCODE01 = 'CVC'
        AND s2.ITEMTYPEAFICODE = 'FKF'
	THEN SUM(s2.USERPRIMARYQUANTITY)
        ELSE 0
    END AS QTY_CVC_FK,
    CASE
        WHEN s2.SUBCODE01 = 'T'
        AND s2.ITEMTYPEAFICODE = 'KFF'
	THEN SUM(s2.USERPRIMARYQUANTITY)
        ELSE 0
    END AS QTY_PEDX,
    CASE
        WHEN s2.SUBCODE01 = 'T'
        AND s2.ITEMTYPEAFICODE = 'FKF'
	THEN SUM(s2.USERPRIMARYQUANTITY)
        ELSE 0
    END AS QTY_PEDX_FK,
    CASE
        WHEN s2.SUBCODE01 = 'TCX'
        AND s2.ITEMTYPEAFICODE = 'KFF'
	THEN SUM(s2.USERPRIMARYQUANTITY)
        ELSE 0
    END AS QTY_PES,
    CASE
        WHEN s2.SUBCODE01 = 'TCX'
        AND s2.ITEMTYPEAFICODE = 'FKF'
	THEN SUM(s2.USERPRIMARYQUANTITY)
        ELSE 0
    END AS QTY_PES_FK,
    CASE
        WHEN s2.SUBCODE01 = 'TC'
        AND s2.ITEMTYPEAFICODE = 'KFF'
	THEN SUM(s2.USERPRIMARYQUANTITY)
        ELSE 0
    END AS QTY_TC,
    CASE
        WHEN s2.SUBCODE01 = 'TC'
        AND s2.ITEMTYPEAFICODE = 'FKF'
	THEN SUM(s2.USERPRIMARYQUANTITY)
        ELSE 0
    END AS QTY_TC_FK,
    CASE
        WHEN s2.SUBCODE01 = 'TX'
        AND s2.ITEMTYPEAFICODE = 'KFF'
	THEN SUM(s2.USERPRIMARYQUANTITY)
        ELSE 0
    END AS QTY_TCDX,
    CASE
        WHEN s2.SUBCODE01 = 'TX'
        AND s2.ITEMTYPEAFICODE = 'FK'
	THEN SUM(s2.USERPRIMARYQUANTITY)
        ELSE 0
    END AS QTY_TCDX_FK
FROM
    SALESORDER s
LEFT JOIN SALESORDERLINE s2 ON
    s2.SALESORDERCODE = s.CODE
WHERE
    --    SALESORDERCODE IN('EXP2300283','EXP2201313','EXP2300248')
    s2.LINETEMPLATECODE NOT IN (
        'CAP', 'CWD', 'CWE', 'ENQ', 'LAB', 'STO', 'TAS'
    )
GROUP BY
    s.CODE,
    s.ABSUNIQUEID,
    s2.SUBCODE01,
    s2.ITEMTYPEAFICODE,
    s2.USERPRIMARYQUANTITY;


-- DB2ADMIN.ITXVIEW_SA_NO_CONTAINER source

CREATE VIEW ITXVIEW_SA_NO_CONTAINER AS
SELECT
    a.UNIQUEID,
    a.VALUESTRING
        || COALESCE(', ' || a2.VALUESTRING, '')
        || COALESCE(', ' || a3.VALUESTRING, '')
        || COALESCE(', ' || a4.VALUESTRING, '')
        || COALESCE(', ' || a5.VALUESTRING, '') AS No_container
FROM
    ADSTORAGE a
LEFT JOIN ADSTORAGE a2 ON
    a.UNIQUEID = a2.UNIQUEID
    AND a2.FIELDNAME = 'Container2'
LEFT JOIN ADSTORAGE a3 ON
    a.UNIQUEID = a3.UNIQUEID
    AND a3.FIELDNAME = 'Container3'
LEFT JOIN ADSTORAGE a4 ON
    a.UNIQUEID = a4.UNIQUEID
    AND a4.FIELDNAME = 'Container4'
LEFT JOIN ADSTORAGE a5 ON
    a.UNIQUEID = a5.UNIQUEID
    AND a5.FIELDNAME = 'Container5'
WHERE
    a.FIELDNAME = 'Container1';


-- DB2ADMIN.ITXVIEW_SETTINGMESINRAJUT_KNT source

CREATE VIEW ITXVIEW_SETTINGMESINRAJUT_KNT AS
SELECT
    DISTINCT 
    PRODUCTIONDEMAND.COMPANYCODE,
    PRODUCTIONDEMAND.COUNTERCODE,
    PRODUCTIONDEMAND.CODE,
    PRODUCTIONDEMAND.ORDERDATE,
    PRODUCTIONDEMAND.SUBCODE01,
    PRODUCTIONDEMAND.SUBCODE02,
    PRODUCTIONDEMAND.SUBCODE03,
    PRODUCTIONDEMAND.SUBCODE04,
    PRODUCTIONDEMAND.SUBCODE05,
    PRODUCTIONDEMAND.SUBCODE06,
    PRODUCTIONDEMAND.SUBCODE07,
    PRODUCTIONDEMAND.SUBCODE08,
    PRODUCTIONDEMAND.SUBCODE09,
    PRODUCTIONDEMAND.SUBCODE10,
    PRODUCTIONDEMAND.BASEPRIMARYUOMCODE,
    PRODUCTIONDEMAND.BASEPRIMARYQUANTITY,
    PRODUCTIONDEMAND.FINALPLANNEDDATE,
    PRODUCTIONDEMAND.RESERVATIONORDERCODE,
    -- SCHEDULESOFSTEPSPLITS.SCHEDULEDRESOURCECODE,
    FULLITEMKEYDECODER.SUMMARIZEDDESCRIPTION,
    BUSINESSPARTNER.LEGALNAME1
FROM
    PRODUCTIONDEMAND PRODUCTIONDEMAND
    --LEFT OUTER JOIN SCHEDULESOFSTEPSPLITS SCHEDULESOFSTEPSPLITS ON
    --  PRODUCTIONDEMAND.CODE = SCHEDULESOFSTEPSPLITS.CODE
LEFT OUTER JOIN FULLITEMKEYDECODER FULLITEMKEYDECODER ON
    PRODUCTIONDEMAND.FULLITEMIDENTIFIER = FULLITEMKEYDECODER.IDENTIFIER
LEFT OUTER JOIN ORDERPARTNER ORDERPARTNER ON
    PRODUCTIONDEMAND.CUSTOMERCODE = ORDERPARTNER.CUSTOMERSUPPLIERCODE
LEFT OUTER JOIN BUSINESSPARTNER BUSINESSPARTNER ON
    ORDERPARTNER.ORDERBUSINESSPARTNERNUMBERID = BUSINESSPARTNER.NUMBERID
LEFT OUTER JOIN ROUTING ROUTING ON
    PRODUCTIONDEMAND.ROUTINGNUMBERID = ROUTING.NUMBERID
    --WHERE 
    --	PRODUCTIONDEMAND.CODE = '00191219';


-- DB2ADMIN.ITXVIEW_SHIPMENT_ADVICE_EXIM source

CREATE VIEW ITXVIEW_SHIPMENT_ADVICE_EXIM AS
SELECT
    SALESDOCUMENTPROVISIONALCODE,
    PRICEUNITOFMEASURECODE,
    sum(total_kg) AS total_NW_CI,
    CASE
        WHEN PRICEUNITOFMEASURECODE = 'yd' THEN ROUND(SUM(jml_harga_YD), 2)
        WHEN PRICEUNITOFMEASURECODE = 'kg' THEN round(SUM(jml_harga_kg), 2)
        WHEN PRICEUNITOFMEASURECODE = 'm' THEN ROUND(SUM(jml_harga_YD), 2)
        WHEN PRICEUNITOFMEASURECODE IN(
            'un', 'Lot'
        ) THEN ROUND(SUM(jml_harga_YD), 2)
    END AS total_harga_CI,
    sum(jml_roll) AS jml_roll
FROM
    (
        SELECT
            INVOICE,
            SALESDOCUMENTPROVISIONALCODE,
            PRICEUNITOFMEASURECODE,
            DECOSUBCODE04,
            sum(USERPRIMARYQUANTITY) AS total_kg,
            sum(USERSECONDARYQUANTITY) AS total_yard,
            sum(BASESECONDARYQUANTITY) AS total_meter,
            sum(qty_pcs) AS total_unit,
            PRICE,
            CASE
                WHEN PRICEUNITOFMEASURECODE = 'yd'
                AND CURR = 'USD'
                AND SALDOCPROVISIONALCOUNTERCODE IN (
                    'EXDPROV', 'EXPPROV', 'DREPROV', 'PFEPROV', 'GSEPROV'
                ) THEN round((SUM(USERSECONDARYQUANTITY)* price), 2)
                WHEN PRICEUNITOFMEASURECODE = 'yd'
                AND CURR = 'USD'
                AND SALDOCPROVISIONALCOUNTERCODE NOT IN (
                    'EXDPROV', 'EXPPROV', 'PFEPROV', 'GSEPROV'
                ) THEN round((SUM(USERSECONDARYQUANTITY)* price), 2)
                WHEN PRICEUNITOFMEASURECODE = 'yd'
                AND CURR = 'IDR'
                AND SALDOCPROVISIONALCOUNTERCODE IN (
                    'EXDPROV', 'EXPPROV', 'DREPROV', 'PFEPROV', 'GSEPROV'
                ) THEN FLOOR((SUM(USERSECONDARYQUANTITY)* price))
                WHEN PRICEUNITOFMEASURECODE = 'yd'
                AND CURR = 'IDR'
                AND SALDOCPROVISIONALCOUNTERCODE NOT IN (
                    'EXDPROV', 'EXPPROV', 'PFEPROV', 'GSEPROV'
                ) THEN FLOOR((SUM(USERSECONDARYQUANTITY)* price))
                ELSE 0
            END jml_harga_YD,
            CASE
                WHEN PRICEUNITOFMEASURECODE = 'kg'
                AND CURR = 'USD'
                AND SALDOCPROVISIONALCOUNTERCODE IN (
                    'EXDPROV', 'EXPPROV', 'DREPROV', 'PFEPROV', 'GSEPROV'
                ) THEN round((SUM(USERPRIMARYQUANTITY)* price), 2)
                WHEN PRICEUNITOFMEASURECODE = 'kg'
                AND CURR = 'USD'
                AND SALDOCPROVISIONALCOUNTERCODE NOT IN (
                    'EXDPROV', 'EXPPROV', 'PFEPROV', 'GSEPROV'
                ) THEN round((SUM(USERPRIMARYQUANTITY)* price), 2)
                WHEN PRICEUNITOFMEASURECODE = 'kg'
                AND CURR = 'IDR'
                AND SALDOCPROVISIONALCOUNTERCODE IN (
                    'EXDPROV', 'EXPPROV', 'DREPROV', 'PFEPROV', 'GSEPROV'
                ) THEN FLOOR((SUM(USERPRIMARYQUANTITY)* price))
                WHEN PRICEUNITOFMEASURECODE = 'kg'
                AND CURR = 'IDR'
                AND SALDOCPROVISIONALCOUNTERCODE NOT IN (
                    'EXDPROV', 'EXPPROV', 'PFEPROV', 'GSEPROV'
                ) THEN FLOOR((SUM(USERPRIMARYQUANTITY)* price))
                ELSE 0
            END jml_harga_kg,
            CASE
                WHEN PRICEUNITOFMEASURECODE = 'm'
                AND CURR = 'USD'
                AND SALDOCPROVISIONALCOUNTERCODE IN (
                    'EXDPROV', 'EXPPROV', 'DREPROV', 'PFEPROV', 'GSEPROV'
                ) THEN round((SUM(BASESECONDARYQUANTITY)* price), 2)
                WHEN PRICEUNITOFMEASURECODE = 'm'
                AND CURR = 'USD'
                AND SALDOCPROVISIONALCOUNTERCODE NOT IN (
                    'EXDPROV', 'EXPPROV', 'PFEPROV', 'GSEPROV'
                ) THEN round((SUM(BASESECONDARYQUANTITY)* price), 2)
                WHEN PRICEUNITOFMEASURECODE = 'm'
                AND CURR = 'IDR'
                AND SALDOCPROVISIONALCOUNTERCODE IN (
                    'EXDPROV', 'EXPPROV', 'DREPROV', 'PFEPROV', 'GSEPROV'
                ) THEN FLOOR((SUM(BASESECONDARYQUANTITY)* price))
                WHEN PRICEUNITOFMEASURECODE = 'm'
                AND CURR = 'IDR'
                AND SALDOCPROVISIONALCOUNTERCODE NOT IN (
                    'EXDPROV', 'EXPPROV', 'PFEPROV', 'GSEPROV'
                ) THEN FLOOR((SUM(BASESECONDARYQUANTITY)* price))
                ELSE 0
            END jml_harga_m,
            CASE
                WHEN PRICEUNITOFMEASURECODE = 'un'
                AND CURR = 'USD'
                AND SALDOCPROVISIONALCOUNTERCODE IN (
                    'EXDPROV', 'EXPPROV', 'DREPROV', 'PFEPROV', 'GSEPROV'
                ) THEN ROUND((SUM(qty_pcs)* price), 2)
                WHEN PRICEUNITOFMEASURECODE = 'un'
                AND CURR = 'USD'
                AND SALDOCPROVISIONALCOUNTERCODE NOT IN (
                    'EXDPROV', 'EXPPROV', 'PFEPROV', 'GSEPROV'
                ) THEN round((SUM(qty_pcs)* price), 2)
                WHEN PRICEUNITOFMEASURECODE = 'Lot'
                AND CURR = 'USD'
                AND SALDOCPROVISIONALCOUNTERCODE NOT IN (
                    'EXDPROV', 'EXPPROV', 'PFEPROV', 'GSEPROV'
                ) THEN round((SUM(qty_pcs)* price), 2)
                WHEN PRICEUNITOFMEASURECODE = 'un'
                AND CURR = 'IDR'
                AND SALDOCPROVISIONALCOUNTERCODE IN (
                    'EXDPROV', 'EXPPROV', 'DREPROV', 'PFEPROV', 'GSEPROV'
                ) THEN FLOOR((SUM(qty_pcs)* price))
                WHEN PRICEUNITOFMEASURECODE = 'un'
                AND CURR = 'IDR'
                AND SALDOCPROVISIONALCOUNTERCODE NOT IN (
                    'EXDPROV', 'EXPPROV', 'PFEPROV', 'GSEPROV'
                ) THEN FLOOR((SUM(qty_pcs)* price))
                WHEN PRICEUNITOFMEASURECODE = 'Lot'
                AND CURR = 'IDR'
                AND SALDOCPROVISIONALCOUNTERCODE NOT IN (
                    'EXDPROV', 'EXPPROV', 'PFEPROV', 'GSEPROV'
                ) THEN FLOOR((SUM(qty_pcs)* price))
                ELSE 0
            END jml_harga_un,
            sum(jml_roll) AS jml_roll
        FROM
            (
                SELECT
                    DISTINCT INVOICE,
                    SALESDOCUMENTPROVISIONALCODE,
                    CURR,
                    LOTCODE,
                    CASE
                        WHEN SALDOCPROVISIONALCOUNTERCODE IN (
                            'EXDPROV', 'EXPPROV', 'DREPROV', 'PFEPROV'
                        ) THEN SUM(USERPRIMARYQUANTITY)
                        WHEN SALDOCPROVISIONALCOUNTERCODE NOT IN (
                            'EXDPROV', 'EXPPROV', 'PFEPROV', 'GSEPROV'
                        ) THEN SUM(round(USERPRIMARYQUANTITY, 2))
                        ELSE SUM(round(USERPRIMARYQUANTITY, 2))
                    END USERPRIMARYQUANTITY,
                    CASE
                        WHEN SALDOCPROVISIONALCOUNTERCODE IN (
                            'EXDPROV', 'EXPPROV', 'DREPROV', 'PFEPROV'
                        ) THEN SUM(USERSECONDARYQUANTITY)
                        WHEN SALDOCPROVISIONALCOUNTERCODE NOT IN (
                            'EXDPROV', 'EXPPROV', 'PFEPROV', 'GSEPROV'
                        ) THEN SUM(USERSECONDARYQUANTITY)
                        ELSE SUM(USERSECONDARYQUANTITY)
                    END AS USERSECONDARYQUANTITY,
                    CASE
                        WHEN SALDOCPROVISIONALCOUNTERCODE IN (
                            'EXDPROV', 'EXPPROV', 'DREPROV', 'PFEPROV'
                        ) THEN SUM(BASESECONDARYQUANTITY)
                        WHEN SALDOCPROVISIONALCOUNTERCODE NOT IN (
                            'EXDPROV', 'EXPPROV', 'PFEPROV', 'GSEPROV'
                        ) THEN SUM(BASESECONDARYQUANTITY)
                        ELSE SUM(BASESECONDARYQUANTITY)
                    END AS BASESECONDARYQUANTITY,
                    CASE
                        WHEN SALDOCPROVISIONALCOUNTERCODE IN (
                            'EXDPROV', 'EXPPROV', 'DREPROV', 'PFEPROV'
                        ) THEN SUM(qty_pcs)
                        WHEN SALDOCPROVISIONALCOUNTERCODE NOT IN (
                            'EXDPROV', 'EXPPROV', 'PFEPROV', 'GSEPROV'
                        ) THEN SUM(qty_pcs)
                        ELSE SUM(qty_pcs)
                    END AS qty_pcs,
                    PRICE,
                    CASE
                        WHEN PRICEUNITOFMEASURECODE = 'yd'
                        AND SALDOCPROVISIONALCOUNTERCODE IN (
                            'EXDPROV', 'EXPPROV', 'DREPROV', 'PFEPROV', 'GSEPROV'
                        ) THEN round((SUM(USERSECONDARYQUANTITY)* price), 2)
                        WHEN PRICEUNITOFMEASURECODE = 'yd'
                        AND SALDOCPROVISIONALCOUNTERCODE NOT IN (
                            'EXDPROV', 'EXPPROV', 'PFEPROV', 'GSEPROV'
                        ) THEN round((SUM(USERSECONDARYQUANTITY)* price), 2)
                        ELSE 0
                    END jml_harga_YD,
                    CASE
                        WHEN PRICEUNITOFMEASURECODE = 'kg'
                        AND SALDOCPROVISIONALCOUNTERCODE IN (
                            'EXDPROV', 'EXPPROV', 'DREPROV', 'PFEPROV', 'GSEPROV'
                        ) THEN round((SUM(USERPRIMARYQUANTITY)* price), 2)
                        WHEN PRICEUNITOFMEASURECODE = 'kg'
                        AND SALDOCPROVISIONALCOUNTERCODE NOT IN (
                            'EXDPROV', 'EXPPROV', 'PFEPROV', 'GSEPROV'
                        ) THEN round((SUM(USERPRIMARYQUANTITY)* price), 2)
                        ELSE 0
                    END jml_harga_kg,
                    CASE
                        WHEN PRICEUNITOFMEASURECODE = 'm'
                        AND SALDOCPROVISIONALCOUNTERCODE IN (
                            'EXDPROV', 'EXPPROV', 'DREPROV', 'PFEPROV', 'GSEPROV'
                        ) THEN round((SUM(BASESECONDARYQUANTITY)* price), 2)
                        WHEN PRICEUNITOFMEASURECODE = 'm'
                        AND SALDOCPROVISIONALCOUNTERCODE NOT IN (
                            'EXDPROV', 'EXPPROV', 'PFEPROV', 'GSEPROV'
                        ) THEN round((SUM(BASESECONDARYQUANTITY)* price), 2)
                        ELSE 0
                    END jml_harga_m,
                    CASE
                        WHEN PRICEUNITOFMEASURECODE = 'un'
                        AND SALDOCPROVISIONALCOUNTERCODE IN (
                            'EXDPROV', 'EXPPROV', 'DREPROV', 'PFEPROV', 'GSEPROV'
                        ) THEN ROUND((SUM(qty_pcs)* price), 2)
                        WHEN PRICEUNITOFMEASURECODE = 'un'
                        AND SALDOCPROVISIONALCOUNTERCODE NOT IN (
                            'EXDPROV', 'EXPPROV', 'PFEPROV', 'GSEPROV'
                        ) THEN round((SUM(qty_pcs)* price), 2)
                        WHEN PRICEUNITOFMEASURECODE = 'Lot'
                        AND SALDOCPROVISIONALCOUNTERCODE NOT IN (
                            'EXDPROV', 'EXPPROV', 'PFEPROV', 'GSEPROV'
                        ) THEN round((SUM(qty_pcs)* price), 2)
                        ELSE 0
                    END jml_harga_un,
                    sum(jml_roll) AS jml_roll,
                    ORDERCODE,
                    PRICEUNITOFMEASURECODE,
                    PREVIOUSCODE,
                    SALDOCPROVISIONALCOUNTERCODE,
                    ITEMTYPECODE,
                    ALLOCATIONDATE,
                    DECOSUBCODE01,
                    DECOSUBCODE02,
                    DECOSUBCODE03,
                    DECOSUBCODE04,
                    DECOSUBCODE05,
                    DECOSUBCODE06,
                    DECOSUBCODE07,
                    DECOSUBCODE08,
                    CUSTOMERCODE,
                    JENIS_KAIN,
                    NO_ITEM,
                    EXTERNALREFERENCE,
                    WARNA
                FROM
                    (
                        SELECT
                            DISTINCT 
            CURR.INVOICE,
                            s.SALESDOCUMENTPROVISIONALCODE,
                            ALLOCATION.CODE AS CODE,
                            iasp.itemelementcode,
                            iasp.LOTCODE,
                            CURR.CURR,
                            s.ORDERLINE AS orderline,
                            CASE
                                WHEN e.QUALITYREASONCODE = 'FOC'
                                AND s.SALDOCPROVISIONALCOUNTERCODE IN(
                                    'DREDEF', 'DREPROV', 'DRDDEF', 'DRPPROV'
                                ) THEN iasp.USERSECONDARYQUANTITY
                                WHEN e.QUALITYREASONCODE = 'FOC'
                                AND s.SALDOCPROVISIONALCOUNTERCODE IN(
                                    'EXDPROV', 'EXPPROV', 'PFEPROV', 'GSEPROV'
                                ) THEN 0
                                ELSE iasp.USERSECONDARYQUANTITY
                            END USERSECONDARYQUANTITY,
                            CASE
                                WHEN e.QUALITYREASONCODE = 'FOC'
                                AND s.SALDOCPROVISIONALCOUNTERCODE IN(
                                    'DREDEF', 'DREPROV', 'DRDDEF', 'DRPPROV'
                                ) THEN iasp.USERPRIMARYQUANTITY
                                WHEN e.QUALITYREASONCODE = 'FOC'
                                AND s.SALDOCPROVISIONALCOUNTERCODE IN(
                                    'EXDPROV', 'EXPPROV', 'PFEPROV', 'GSEPROV'
                                ) THEN 0
                                ELSE iasp.USERPRIMARYQUANTITY
                            END USERPRIMARYQUANTITY,
                            CASE
                                WHEN e.QUALITYREASONCODE = 'FOC'
                                AND s.SALDOCPROVISIONALCOUNTERCODE IN(
                                    'DREDEF', 'DREPROV', 'DRDDEF', 'DRPPROV'
                                ) THEN iasp.USERSECONDARYUSEDQUANTITY
                                WHEN e.QUALITYREASONCODE = 'FOC'
                                AND s.SALDOCPROVISIONALCOUNTERCODE IN(
                                    'EXDPROV', 'EXPPROV', 'PFEPROV', 'GSEPROV'
                                ) THEN 0
                                WHEN ALLOCATION.ITEMTYPECODE <> 'CAP' THEN round(iasp.USERSECONDARYUSEDQUANTITY , 2)
                                WHEN iasp.ITEMTYPECODE = 'CAP'
                                AND iasp.BASEPRIMARYUOMCODE IN(
                                    'Lot', 'un'
                                ) THEN iasp.BASEPRIMARYQUANTITY
                                ELSE iasp.BASESECONDARYQUANTITY
                            END qty_pcs,
                            CASE
                                WHEN e.QUALITYREASONCODE = 'FOC'
                                AND s.SALDOCPROVISIONALCOUNTERCODE IN(
                                    'DREDEF', 'DREPROV', 'DRDDEF', 'DRPPROV'
                                ) THEN ROUND(iasp.BASESECONDARYQUANTITY * 0.9144, 2)
                                WHEN e.QUALITYREASONCODE = 'FOC'
                                AND s.SALDOCPROVISIONALCOUNTERCODE IN(
                                    'EXDPROV', 'EXPPROV', 'PFEPROV', 'GSEPROV'
                                ) THEN 0
                                ELSE ROUND(iasp.BASESECONDARYQUANTITY * 0.9144, 2)
                            END BASESECONDARYQUANTITY,
                            CASE
                                WHEN e.QUALITYREASONCODE = 'FOC' THEN iasp.USERPRIMARYQUANTITY
                                ELSE 0
                            END AS FOC_KG,
                            CASE
                                WHEN e.QUALITYREASONCODE = 'FOC' THEN iasp.USERSECONDARYQUANTITY
                                ELSE 0
                            END AS FOC_YARD,
                            COUNT(iasp.itemelementcode) AS jml_roll,
                            s.PRICE,
                            s.PRICEUNITOFMEASURECODE,
                            e.QUALITYREASONCODE,
                            s.PREVIOUSCODE,
                            s.SALDOCPROVISIONALCOUNTERCODE,
                            ALLOCATION.ORDERCODE AS ORDERCODE,
                            ALLOCATION.ITEMTYPECODE,
                            ALLOCATION.ALLOCATIONDATE AS ALLOCATIONDATE,
                            ALLOCATION.DECOSUBCODE01 AS DECOSUBCODE01,
                            ALLOCATION.DECOSUBCODE02 AS DECOSUBCODE02,
                            ALLOCATION.DECOSUBCODE03 AS DECOSUBCODE03,
                            ALLOCATION.DECOSUBCODE04 AS DECOSUBCODE04,
                            ALLOCATION.DECOSUBCODE05 AS DECOSUBCODE05,
                            ALLOCATION.DECOSUBCODE06 AS DECOSUBCODE06,
                            ALLOCATION.DECOSUBCODE07 AS DECOSUBCODE07,
                            ALLOCATION.DECOSUBCODE08 AS DECOSUBCODE08,
                            ALLOCATION.CUSTOMERCODE AS CUSTOMERCODE,
                            PRODUCT.LONGDESCRIPTION AS JENIS_KAIN,
                            a.EXTERNALITEMCODE AS NO_ITEM,
                            a.EXTERNALREFERENCE AS EXTERNALREFERENCE,
                            i.WARNA
                        FROM
                            ALLOCATION ALLOCATION
                        LEFT JOIN PRODUCT PRODUCT ON
                            ALLOCATION.ITEMTYPECODE = PRODUCT.ITEMTYPECODE
                            AND ALLOCATION.DECOSUBCODE01 = PRODUCT.SUBCODE01
                            AND ALLOCATION.DECOSUBCODE02 = PRODUCT.SUBCODE02
                            AND ALLOCATION.DECOSUBCODE03 = PRODUCT.SUBCODE03
                            AND ALLOCATION.DECOSUBCODE04 = PRODUCT.SUBCODE04
                            AND ALLOCATION.DECOSUBCODE05 = PRODUCT.SUBCODE05
                            AND ALLOCATION.DECOSUBCODE06 = PRODUCT.SUBCODE06
                            AND ALLOCATION.DECOSUBCODE07 = PRODUCT.SUBCODE07
                            AND ALLOCATION.DECOSUBCODE08 = PRODUCT.SUBCODE08
                        LEFT JOIN ITXVIEWORDERPARTNERLINKACTIVE a ON
                            ALLOCATION.CUSTOMERCODE = a.ORDPRNCUSTOMERSUPPLIERCODE
                            AND ALLOCATION.ITEMTYPECODE = a.ITEMTYPEAFICODE
                            AND ALLOCATION.DECOSUBCODE01 = a.SUBCODE01
                            AND ALLOCATION.DECOSUBCODE02 = a.SUBCODE02
                            AND ALLOCATION.DECOSUBCODE03 = a.SUBCODE03
                            AND ALLOCATION.DECOSUBCODE04 = a.SUBCODE04
                            AND ALLOCATION.DECOSUBCODE05 = a.SUBCODE05
                            AND ALLOCATION.DECOSUBCODE06 = a.SUBCODE06
                            AND ALLOCATION.DECOSUBCODE07 = a.SUBCODE07
                        LEFT JOIN ITXVIEW_ALLOCATION_SURATJALAN_PPC iasp ON
                            iasp.CODE = ALLOCATION.CODE
                            AND iasp.DECOSUBCODE01 = ALLOCATION.DECOSUBCODE01
                            AND iasp.DECOSUBCODE02 = ALLOCATION.DECOSUBCODE02
                            AND iasp.DECOSUBCODE03 = ALLOCATION.DECOSUBCODE03
                            AND iasp.DECOSUBCODE04 = ALLOCATION.DECOSUBCODE04
                            AND iasp.DECOSUBCODE05 = ALLOCATION.DECOSUBCODE05
                            AND iasp.DECOSUBCODE06 = ALLOCATION.DECOSUBCODE06
                            AND iasp.DECOSUBCODE07 = ALLOCATION.DECOSUBCODE07
                        LEFT JOIN ELEMENTS e ON
                            iasp.itemelementcode = e.CODE
                        LEFT JOIN SALESDOCUMENTLINE s ON
                            ALLOCATION.DECOSUBCODE01 = s.SUBCODE01
                            AND ALLOCATION.DECOSUBCODE02 = s.SUBCODE02
                            AND ALLOCATION.DECOSUBCODE03 = s.SUBCODE03
                            AND ALLOCATION.DECOSUBCODE04 = s.SUBCODE04
                            AND ALLOCATION.DECOSUBCODE05 = s.SUBCODE05
                            AND ALLOCATION.DECOSUBCODE06 = s.SUBCODE06
                            AND ALLOCATION.DECOSUBCODE07 = s.SUBCODE07
                            AND ALLOCATION.ORDERCODE = s.SALESDOCUMENTPROVISIONALCODE
                            AND ALLOCATION.ORDERLINE = s.ORDERLINE
                        LEFT JOIN ITXVIEWCOLOR i ON
                            ALLOCATION.ITEMTYPECODE = i.ITEMTYPECODE
                            AND ALLOCATION.DECOSUBCODE01 = i.SUBCODE01
                            AND ALLOCATION.DECOSUBCODE02 = i.SUBCODE02
                            AND ALLOCATION.DECOSUBCODE03 = i.SUBCODE03
                            AND ALLOCATION.DECOSUBCODE04 = i.SUBCODE04
                            AND ALLOCATION.DECOSUBCODE05 = i.SUBCODE05
                            AND ALLOCATION.DECOSUBCODE06 = i.SUBCODE06
                            AND ALLOCATION.DECOSUBCODE07 = i.SUBCODE07
                            AND ALLOCATION.DECOSUBCODE08 = i.SUBCODE08
                            AND ALLOCATION.DECOSUBCODE09 = i.SUBCODE09
                            AND ALLOCATION.DECOSUBCODE10 = i.SUBCODE10
                        LEFT JOIN ITXVIEW_INVOICE_CURR_GRANDTOTAL CURR ON
                            CURR.NO_SJ = s.SALESDOCUMENTPROVISIONALCODE
                        WHERE
                            ALLOCATION.DETAILTYPE = '1'
                            AND ALLOCATION.ORIGINTRNTRANSACTIONNUMBER IS NULL
                            AND ALLOCATION.DESTINATIONTYPE = '7'
                        GROUP BY
                            CURR.INVOICE,
                            s.SALESDOCUMENTPROVISIONALCODE,
                            ALLOCATION.CODE ,
                            ALLOCATION.ITEMTYPECODE,
                            iasp.ITEMTYPECODE,
                            iasp.itemelementcode,
                            iasp.LOTCODE,
                            CURR.CURR,
                            s.ORDERLINE,
                            e.QUALITYREASONCODE,
                            iasp.USERPRIMARYQUANTITY,
                            iasp.USERSECONDARYQUANTITY,
                            s.SALDOCPROVISIONALCOUNTERCODE,
                            iasp.BASESECONDARYQUANTITY,
                            iasp.BASEPRIMARYUOMCODE,
                            iasp.USERSECONDARYUSEDQUANTITY,
                            iasp.BASEPRIMARYQUANTITY,
                            s.PRICE,
                            s.PRICEUNITOFMEASURECODE,
                            e.QUALITYREASONCODE,
                            s.PREVIOUSCODE,
                            s.SALDOCPROVISIONALCOUNTERCODE,
                            ALLOCATION.ORDERCODE,
                            ALLOCATION.ALLOCATIONDATE,
                            ALLOCATION.DECOSUBCODE01,
                            ALLOCATION.DECOSUBCODE02,
                            ALLOCATION.DECOSUBCODE03,
                            ALLOCATION.DECOSUBCODE04,
                            ALLOCATION.DECOSUBCODE05,
                            ALLOCATION.DECOSUBCODE06,
                            ALLOCATION.DECOSUBCODE07,
                            ALLOCATION.DECOSUBCODE08,
                            ALLOCATION.CUSTOMERCODE,
                            PRODUCT.LONGDESCRIPTION,
                            a.EXTERNALITEMCODE,
                            a.EXTERNALREFERENCE,
                            i.WARNA
                    )
                WHERE
                    USERPRIMARYQUANTITY <> 0
                GROUP BY
                    SALESDOCUMENTPROVISIONALCODE,
                    INVOICE,
                    CURR,
                    LOTCODE,
                    ORDERCODE,
                    PRICE,
                    PRICEUNITOFMEASURECODE,
                    PREVIOUSCODE,
                    ALLOCATIONDATE,
                    ITEMTYPECODE,
                    SALDOCPROVISIONALCOUNTERCODE,
                    DECOSUBCODE01,
                    DECOSUBCODE02,
                    DECOSUBCODE03,
                    DECOSUBCODE04,
                    DECOSUBCODE05,
                    DECOSUBCODE06,
                    DECOSUBCODE07,
                    DECOSUBCODE08,
                    CUSTOMERCODE,
                    JENIS_KAIN,
                    NO_ITEM,
                    EXTERNALREFERENCE,
                    WARNA,
                    FOC_YARD,
                    FOC_KG,
                    jml_roll
            )
        GROUP BY
            SALESDOCUMENTPROVISIONALCODE,
            LOTCODE,
            INVOICE,
            jml_roll,
            CURR,
            DECOSUBCODE04,
            PRICEUNITOFMEASURECODE,
            SALDOCPROVISIONALCOUNTERCODE,
            PRICE
    )
    --WHERE SALESDOCUMENTPROVISIONALCODE = 'ESP2300717'
GROUP BY
    PRICEUNITOFMEASURECODE,
    SALESDOCUMENTPROVISIONALCODE;


-- DB2ADMIN.ITXVIEW_SHIPMENT_ADVICE_HEADER source

CREATE VIEW ITXVIEW_SHIPMENT_ADVICE_HEADER AS 
SELECT
    s.PROVISIONALCODE,
    CASE
        WHEN s.TERMSOFSHIPPINGCODE = 'SE' THEN 'SEA'
        WHEN s.TERMSOFSHIPPINGCODE = 'AI' THEN 'AIR'
        ELSE 'ROAD'
    END AS TERMSOFSHIPPINGCODE,
    s.TERMSOFDELIVERYCODE,
    listagg(
        DISTINCT s2.EXTERNALREFERENCE,
        ',  '
    ) 
WITHIN GROUP (
    ORDER BY
        s2.EXTERNALREFERENCE
    ) AS descOfGood,
    CASE
        WHEN s.PAYMENTMETHODCODE LIKE '%TT%' THEN 'T/T' || ' BY ' || s.TERMSOFDELIVERYCODE
        WHEN s.PAYMENTMETHODCODE LIKE '%LC%' THEN 'LC' || ' BY ' || s.TERMSOFDELIVERYCODE
        WHEN s.PAYMENTMETHODCODE = 'FOC' THEN 'NOMOR COMERCIAL VALUE?'
    END paymentTerms,
    s.APPEARANCEDESCRIPTION AS jenis_kontainer,
    CAST(
        SUBSTR(s.APPEARANCEDESCRIPTION, LOCATE('*', s.APPEARANCEDESCRIPTION)+ 1, 3) AS CHARACTER(10)
    ) AS tinggi_container,
    CASE
        WHEN s.TERMSOFDELIVERYCODE IN (
            'FOB', 'EXW'
        ) THEN 'COLLECT'
        ELSE 'PREPAID'
    END AS Freight,
    a2.VALUEDATE AS ETA,
    a3.VALUESTRING AS kite,
    a4.VALUESTRING AS note,
    a5.VALUESTRING AS StatusMeasurement,
    a6.VALUESTRING AS shipping_ref,
    a7.VALUESTRING AS vesselname,
    a8.VALUEDATE AS TransportDate,
    a9.VALUESTRING
        || COALESCE(', ' || a18.VALUESTRING, '')
        || COALESCE(', ' || a19.VALUESTRING, '')
        || COALESCE(', ' || a20.VALUESTRING, '')
        || COALESCE(', ' || a21.VALUESTRING, '') AS NOMOR_Container,
    --    a9.VALUESTRING AS NOMOR_Container,
    a10.VALUESTRING AS CBM,
    a11.VALUESTRING AS Port,
    a12.VALUEDATE AS TglSI,
    a13.VALUESTRING AS connecting_VESSEL,
    a15.VALUESTRING AS ETD_con,
    a16.VALUESTRING AS BLAWB,
    CASE
        WHEN a17.VALUESTRING IS NULL THEN '-'
        ELSE a17.VALUESTRING
    END AS LCNumber,
    CASE
        WHEN a14.VALUESTRING = 0 THEN 'SEA'
        WHEN a14.VALUESTRING = 1 THEN 'AIR'
        WHEN a14.VALUESTRING = 2 THEN 'FCL'
    END REMARKSsI,
    UPPER(ADDRESS.ADDRESSEE) AS NM_CONSIGNEE,
    UPPER(ADDRESS.ADDRESSLINE1) AS ADDRESSLINE1,
    UPPER(ADDRESS.ADDRESSLINE2)AS ADDRESSLINE2,
    UPPER(ADDRESS.ADDRESSLINE3)AS ADDRESSLINE3,
    UPPER(ADDRESS.ADDRESSLINE4) AS ADDRESSLINE4,
    UPPER(ADDRESS.TOWN) AS TOWN,
    UPPER(ADDRESS.DISTRICT) AS DISTRICT,
    ADDRESS.ADDRESSPHONENUMBER,
    COUNTRY.LONGDESCRIPTION AS COUNTRY_NM
FROM
    SALESDOCUMENT s
LEFT JOIN SALESDOCUMENTLINE s2 ON
    s2.SALESDOCUMENTPROVISIONALCODE = s.PROVISIONALCODE
LEFT JOIN TRUCKDRIVER t ON
    t.CODE = s.TRUCKDRIVERCODE
LEFT JOIN ADSTORAGE a2 ON
    a2.UNIQUEID = s.ABSUNIQUEID
    AND a2.FIELDNAME = 'ETA'
LEFT JOIN ADSTORAGE a3 ON
    a3.UNIQUEID = s.ABSUNIQUEID
    AND a3.FIELDNAME = 'KITE'
LEFT JOIN ADSTORAGE a4 ON
    a4.UNIQUEID = s.ABSUNIQUEID
    AND a4.FIELDNAME = 'Note'
LEFT JOIN ADSTORAGE a5 ON
    a5.UNIQUEID = s.ABSUNIQUEID
    AND a5.FIELDNAME = 'StatusMeasurement'
LEFT JOIN ADSTORAGE a6 ON
    a6.UNIQUEID = s.ABSUNIQUEID
    AND a6.FIELDNAME = 'shipping'
LEFT JOIN ADSTORAGE a7 ON
    a7.UNIQUEID = s.ABSUNIQUEID
    AND a7.FIELDNAME = 'vesselname'
LEFT JOIN ADSTORAGE a8 ON
    a8.UNIQUEID = s.ABSUNIQUEID
    AND a8.FIELDNAME = 'TransportDate '
LEFT JOIN ADSTORAGE a9 ON
    a9.UNIQUEID = s.ABSUNIQUEID
    AND a9.FIELDNAME = 'Container1'
LEFT JOIN ADSTORAGE a10 ON
    a10.UNIQUEID = s.ABSUNIQUEID
    AND a10.FIELDNAME = 'CBM'
LEFT JOIN ADSTORAGE a11 ON
    a11.UNIQUEID = s.ABSUNIQUEID
    AND a11.FIELDNAME = 'Port'
LEFT JOIN ADSTORAGE a12 ON
    a12.UNIQUEID = s.ABSUNIQUEID
    AND a12.FIELDNAME = 'TglSI'
LEFT JOIN ADSTORAGE a13 ON
    a13.UNIQUEID = s.ABSUNIQUEID
    AND a13.FIELDNAME = 'connecting'
LEFT JOIN ADSTORAGE a14 ON
    a14.UNIQUEID = s.ABSUNIQUEID
    AND a14.FIELDNAME = 'RemarksSI'
LEFT JOIN ADSTORAGE a15 ON
    a15.UNIQUEID = s.ABSUNIQUEID
    AND a15.FIELDNAME = 'ETDcon'
LEFT JOIN ADSTORAGE a16 ON
    a16.UNIQUEID = s.ABSUNIQUEID
    AND a16.FIELDNAME = 'BLAWB'
LEFT JOIN ADSTORAGE a17 ON
    a17.UNIQUEID = s.ABSUNIQUEID
    AND a17.FIELDNAME = 'LCNumber'
LEFT JOIN ADDRESS ADDRESS ON
    s.DELIVERYPOINTUNIQUEID = ADDRESS.UNIQUEID
    AND s.DELIVERYPOINTCODE = ADDRESS.CODE
LEFT JOIN ORDERPARTNER ORDERPARTNER ON
    s.FNCORDPRNCUSTOMERSUPPLIERCODE = ORDERPARTNER.CUSTOMERSUPPLIERCODE
LEFT JOIN COUNTRY COUNTRY ON
    ADDRESS.COUNTRYCODE = COUNTRY.CODE
LEFT JOIN ADSTORAGE a18 ON
    a18.UNIQUEID = s.ABSUNIQUEID
    AND a18.FIELDNAME = 'Container2'
LEFT JOIN ADSTORAGE a19 ON
    a19.UNIQUEID = s.ABSUNIQUEID
    AND a19.FIELDNAME = 'Container3'
LEFT JOIN ADSTORAGE a20 ON
    a20.UNIQUEID = s.ABSUNIQUEID
    AND a20.FIELDNAME = 'Container4'
LEFT JOIN ADSTORAGE a21 ON
    a21.UNIQUEID = s.ABSUNIQUEID
    AND a21.FIELDNAME = 'Container5'
    --        WHERE s.PROVISIONALCODE  = 'ESP2300811'
GROUP BY
    s.PROVISIONALCODE,
    s.TERMSOFDELIVERYCODE,
    s.TERMSOFSHIPPINGCODE,
    t.CODE,
    t.LONGDESCRIPTION,
    t.SHORTDESCRIPTION,
    s.CREATIONUSER,
    s.PAYMENTMETHODCODE,
    s.APPEARANCEDESCRIPTION,
    a2.VALUEDATE,
    a3.VALUESTRING,
    a4.VALUESTRING,
    a5.VALUESTRING,
    a6.VALUESTRING,
    a7.VALUESTRING,
    a8.VALUEDATE,
    a9.VALUESTRING,
    a10.VALUESTRING,
    a11.VALUESTRING,
    a12.VALUEDATE,
    a13.VALUESTRING,
    a14.VALUESTRING,
    a15.VALUESTRING,
    a16.VALUESTRING,
    a17.VALUESTRING,
    a18.VALUESTRING,
    a19.VALUESTRING,
    a20.VALUESTRING,
    a21.VALUESTRING,
    ADDRESS.ADDRESSEE,
    ADDRESS.ADDRESSLINE1,
    ADDRESS.ADDRESSLINE2,
    ADDRESS.ADDRESSLINE3,
    ADDRESS.ADDRESSLINE4,
    ADDRESS.TOWN,
    ADDRESS.DISTRICT,
    ADDRESS.ADDRESSPHONENUMBER,
    COUNTRY.LONGDESCRIPTION;


-- DB2ADMIN.ITXVIEW_SHIPPING_INTR_EXIM source

CREATE VIEW ITXVIEW_SHIPPING_INTR_EXIM AS 
SELECT
    s.PROVISIONALCODE,
    CASE
        WHEN s.TERMSOFSHIPPINGCODE = 'SE' THEN 'SEA'
        WHEN s.TERMSOFSHIPPINGCODE = 'AI' THEN 'AIR'
        ELSE 'ROAD'
    END AS TERMSOFSHIPPINGCODE,
    s.TERMSOFDELIVERYCODE,
    t.LONGDESCRIPTION AS nama_truck,
    t.SHORTDESCRIPTION AS nama_driver,
    UPPER(s.CREATIONUSER) AS CREATIONUSER,
    listagg(
        DISTINCT s2.EXTERNALREFERENCE,
        ',  '
    ) 
WITHIN GROUP (
    ORDER BY
        s2.EXTERNALREFERENCE
    ) AS descOfGood,
    CASE
        WHEN s.PAYMENTMETHODCODE LIKE '%TT%' THEN 'T/T' || ' BY ' || s.TERMSOFDELIVERYCODE
        WHEN s.PAYMENTMETHODCODE LIKE '%LC%' THEN 'LC' || ' BY ' || s.TERMSOFDELIVERYCODE
        WHEN s.PAYMENTMETHODCODE = 'FOC' THEN 'NOMOR COMERCIAL VALUE?'
    END paymentTerms,
    s.APPEARANCEDESCRIPTION AS jenis_kontainer,
    CAST(
        SUBSTR(s.APPEARANCEDESCRIPTION, LOCATE('*', s.APPEARANCEDESCRIPTION)+ 1, 3) AS CHARACTER(10)
    ) AS tinggi_container,
    CASE
        WHEN s.TERMSOFDELIVERYCODE IN (
            'FOB', 'EXW'
        ) THEN 'COLLECT'
        ELSE 'PREPAID'
    END AS Freight,
    a2.VALUEDATE AS ETA,
    a3.VALUESTRING AS kite,
    a4.VALUESTRING AS note,
    a5.VALUESTRING AS StatusMeasurement,
    a6.VALUESTRING AS shipping_ref,
    a7.VALUESTRING AS vesselname,
    a8.VALUEDATE AS TransportDate,
    a9.VALUESTRING
        || COALESCE(', ' || a18.VALUESTRING, '')
        || COALESCE(', ' || a19.VALUESTRING, '')
        || COALESCE(', ' || a20.VALUESTRING, '')
        || COALESCE(', ' || a21.VALUESTRING, '') AS NOMOR_Container,
    a10.VALUESTRING AS CBM,
    a11.VALUESTRING AS Port,
    a12.VALUEDATE AS TglSI,
    a13.VALUESTRING AS connecting_VESSEL,
    a15.VALUESTRING AS ETD_con,
    CASE
        WHEN a14.VALUESTRING = 0 THEN 'SEA'
        WHEN a14.VALUESTRING = 1 THEN 'AIR'
        WHEN a14.VALUESTRING = 2 THEN 'FCL'
    END REMARKSsI
FROM
    SALESDOCUMENT s
LEFT JOIN SALESDOCUMENTLINE s2 ON
    s2.SALESDOCUMENTPROVISIONALCODE = s.PROVISIONALCODE
LEFT JOIN TRUCKDRIVER t ON
    t.CODE = s.TRUCKDRIVERCODE
LEFT JOIN ADSTORAGE a2 ON
    a2.UNIQUEID = s.ABSUNIQUEID
    AND a2.FIELDNAME = 'ETA'
LEFT JOIN ADSTORAGE a3 ON
    a3.UNIQUEID = s.ABSUNIQUEID
    AND a3.FIELDNAME = 'KITE'
LEFT JOIN ADSTORAGE a4 ON
    a4.UNIQUEID = s.ABSUNIQUEID
    AND a4.FIELDNAME = 'Note'
LEFT JOIN ADSTORAGE a5 ON
    a5.UNIQUEID = s.ABSUNIQUEID
    AND a5.FIELDNAME = 'StatusMeasurement'
LEFT JOIN ADSTORAGE a6 ON
    a6.UNIQUEID = s.ABSUNIQUEID
    AND a6.FIELDNAME = 'shipping'
LEFT JOIN ADSTORAGE a7 ON
    a7.UNIQUEID = s.ABSUNIQUEID
    AND a7.FIELDNAME = 'vesselname'
LEFT JOIN ADSTORAGE a8 ON
    a8.UNIQUEID = s.ABSUNIQUEID
    AND a8.FIELDNAME = 'TransportDate '
LEFT JOIN ADSTORAGE a9 ON
    a9.UNIQUEID = s.ABSUNIQUEID
    AND a9.FIELDNAME = 'Container1'
LEFT JOIN ADSTORAGE a10 ON
    a10.UNIQUEID = s.ABSUNIQUEID
    AND a10.FIELDNAME = 'CBM'
LEFT JOIN ADSTORAGE a11 ON
    a11.UNIQUEID = s.ABSUNIQUEID
    AND a11.FIELDNAME = 'Port'
LEFT JOIN ADSTORAGE a12 ON
    a12.UNIQUEID = s.ABSUNIQUEID
    AND a12.FIELDNAME = 'TglSI'
LEFT JOIN ADSTORAGE a13 ON
    a13.UNIQUEID = s.ABSUNIQUEID
    AND a13.FIELDNAME = 'connecting'
LEFT JOIN ADSTORAGE a14 ON
    a14.UNIQUEID = s.ABSUNIQUEID
    AND a14.FIELDNAME = 'RemarksSI'
LEFT JOIN ADSTORAGE a15 ON
    a15.UNIQUEID = s.ABSUNIQUEID
    AND a15.FIELDNAME = 'ETDcon'
LEFT JOIN ADSTORAGE a18 ON
    a18.UNIQUEID = s.ABSUNIQUEID
    AND a18.FIELDNAME = 'Container2'
LEFT JOIN ADSTORAGE a19 ON
    a19.UNIQUEID = s.ABSUNIQUEID
    AND a19.FIELDNAME = 'Container3'
LEFT JOIN ADSTORAGE a20 ON
    a20.UNIQUEID = s.ABSUNIQUEID
    AND a20.FIELDNAME = 'Container4'
LEFT JOIN ADSTORAGE a21 ON
    a21.UNIQUEID = s.ABSUNIQUEID
    AND a21.FIELDNAME = 'Container5'
    --        WHERE s.PROVISIONALCODE  = 'ESP2300772'
GROUP BY
    s.PROVISIONALCODE,
    s.TERMSOFDELIVERYCODE,
    s.TERMSOFSHIPPINGCODE,
    t.CODE,
    t.LONGDESCRIPTION,
    t.SHORTDESCRIPTION,
    s.CREATIONUSER,
    s.PAYMENTMETHODCODE,
    s.APPEARANCEDESCRIPTION,
    a2.VALUEDATE,
    a3.VALUESTRING,
    a4.VALUESTRING,
    a5.VALUESTRING,
    a6.VALUESTRING,
    a7.VALUESTRING,
    a8.VALUEDATE,
    a9.VALUESTRING,
    a10.VALUESTRING,
    a11.VALUESTRING,
    a12.VALUEDATE,
    a13.VALUESTRING,
    a14.VALUESTRING,
    a15.VALUESTRING,
    a18.VALUESTRING,
    a19.VALUESTRING,
    a20.VALUESTRING,
    a21.VALUESTRING;


-- DB2ADMIN.ITXVIEW_SHIPPING_INTR_EXIM_ADS source

CREATE VIEW ITXVIEW_SHIPPING_INTR_EXIM_ADS AS 
SELECT
    a.UNIQUEID,
    a2.VALUEDATE AS ETA,
    a3.VALUESTRING AS kite,
    a4.VALUESTRING AS note,
    a5.VALUESTRING AS StatusMeasurement,
    a6.VALUESTRING AS shipping_ref,
    a7.VALUESTRING AS vesselname,
    a8.VALUEDATE AS TransportDate,
    a9.VALUESTRING AS NOMOR_Container,
    a10.VALUESTRING AS CBM,
    a11.VALUESTRING AS Port,
    a12.VALUEDATE AS TglSI,
    a13.VALUESTRING AS connecting_VESSEL,
    CASE
        WHEN a14.VALUESTRING = 0 THEN 'SEA'
        WHEN a14.VALUESTRING = 1 THEN 'AIR'
        WHEN a14.VALUESTRING = 2 THEN 'FCL'
    END REMARKSsI
FROM
    ADSTORAGE a
LEFT JOIN ADSTORAGE a2 ON
    a2.UNIQUEID = a.UNIQUEID
    AND a2.FIELDNAME = 'ETA'
LEFT JOIN ADSTORAGE a3 ON
    a3.UNIQUEID = a.UNIQUEID
    AND a3.FIELDNAME = 'KITE'
LEFT JOIN ADSTORAGE a4 ON
    a4.UNIQUEID = a.UNIQUEID
    AND a4.FIELDNAME = 'Note'
LEFT JOIN ADSTORAGE a5 ON
    a5.UNIQUEID = a.UNIQUEID
    AND a5.FIELDNAME = 'StatusMeasurement'
LEFT JOIN ADSTORAGE a6 ON
    a6.UNIQUEID = a.UNIQUEID
    AND a6.FIELDNAME = 'shipping'
LEFT JOIN ADSTORAGE a7 ON
    a7.UNIQUEID = a.UNIQUEID
    AND a7.FIELDNAME = 'vesselname'
LEFT JOIN ADSTORAGE a8 ON
    a8.UNIQUEID = a.UNIQUEID
    AND a8.FIELDNAME = 'TransportDate '
LEFT JOIN ADSTORAGE a9 ON
    a9.UNIQUEID = a.UNIQUEID
    AND a9.FIELDNAME = 'Container1'
LEFT JOIN ADSTORAGE a10 ON
    a10.UNIQUEID = a.UNIQUEID
    AND a10.FIELDNAME = 'CBM'
LEFT JOIN ADSTORAGE a11 ON
    a11.UNIQUEID = a.UNIQUEID
    AND a11.FIELDNAME = 'Port'
LEFT JOIN ADSTORAGE a12 ON
    a12.UNIQUEID = a.UNIQUEID
    AND a12.FIELDNAME = 'TglSI'
LEFT JOIN ADSTORAGE a13 ON
    a13.UNIQUEID = a.UNIQUEID
    AND a13.FIELDNAME = 'connecting'
LEFT JOIN ADSTORAGE a14 ON
    a14.UNIQUEID = a.UNIQUEID
    AND a14.FIELDNAME = 'RemarksSI'
    --WHERE a.UNIQUEID  = '46310926'
GROUP BY
    a.UNIQUEID,
    a2.VALUEDATE,
    a3.VALUESTRING,
    a4.VALUESTRING,
    a5.VALUESTRING,
    a6.VALUESTRING,
    a7.VALUESTRING,
    a8.VALUEDATE,
    a9.VALUESTRING,
    a10.VALUESTRING,
    a11.VALUESTRING,
    a12.VALUEDATE,
    a13.VALUESTRING,
    a14.VALUESTRING;


-- DB2ADMIN.ITXVIEW_SHIPPING_MARK source

CREATE VIEW ITXVIEW_SHIPPING_MARK AS 
SELECT
    CODE,
    COMPANYCODE,
    DELIVERYPOINTCODE,
    ORDPRNCUSTOMERSUPPLIERCODE,
    LEGALNAME1,
    SP#,
    ST#,
    CASE
        WHEN LEGALNAME1 = 'INQUBE' THEN 'INQUBE'
        WHEN LEGALNAME1 = 'MAS' THEN 'MAS'
        WHEN DELIVERYPOINTCODE IN (
            'ATH', 'LLA'
        ) THEN 'MAK'
        ELSE KODE_SM
    END AS KODE_SM,
    PIC,
    ext
FROM
    (
        SELECT
            DISTINCT 
            s.COMPANYCODE,
            s.CODE,
            TRIM(s.DELIVERYPOINTCODE) AS DELIVERYPOINTCODE,
            s.ORDPRNCUSTOMERSUPPLIERCODE,
            CASE
                WHEN BUSINESSPARTNER.LEGALNAME1 LIKE '%MAS%' THEN LEFT(BUSINESSPARTNER.LEGALNAME1, 3)
                WHEN BUSINESSPARTNER.LEGALNAME1 LIKE '%CLASSIC%' THEN LEFT(BUSINESSPARTNER.LEGALNAME1, 7)
                WHEN BUSINESSPARTNER.LEGALNAME1 LIKE '%INQUBE%' THEN LEFT(BUSINESSPARTNER.LEGALNAME1, 6)
                ELSE BUSINESSPARTNER.LEGALNAME1
            END AS LEGALNAME1,
            LISTAGG(
                DISTINCT(
                    TRIM(s2.EXTERNALREFERENCE)
                ),
                ', '
            ) AS SP#,
            LISTAGG(
                DISTINCT(
                    TRIM(s2.INTERNALREFERENCE)
                ),
                ', '
            ) AS ST#,
            a.UNIQUEID,
            a.VALUESTRING AS KODE_SM,
            a2.VALUESTRING AS PIC,
            a3.VALUESTRING AS ext
        FROM
            SALESORDER s
        LEFT OUTER JOIN ORDERPARTNER ORDERPARTNER ON
            s.COMPANYCODE = ORDERPARTNER.CUSTOMERSUPPLIERCOMPANYCODE
            AND s.ORDERTYPE = ORDERPARTNER.CUSTOMERSUPPLIERTYPE
            AND s.ORDPRNCUSTOMERSUPPLIERCODE = ORDERPARTNER.CUSTOMERSUPPLIERCODE
        LEFT OUTER JOIN BUSINESSPARTNER BUSINESSPARTNER ON
            ORDERPARTNER.ORDERBUSINESSPARTNERNUMBERID = BUSINESSPARTNER.NUMBERID
        LEFT JOIN ADSTORAGE a ON
            s.ABSUNIQUEID = a.UNIQUEID
            AND a.FIELDNAME = 'KodeSM'
        LEFT JOIN ADSTORAGE a2 ON
            s.ABSUNIQUEID = a2.UNIQUEID
            AND a2.FIELDNAME = 'PICEXT'
        LEFT JOIN ADSTORAGE a3 ON
            s.ABSUNIQUEID = a3.UNIQUEID
            AND a3.FIELDNAME = 'EXT'
        LEFT JOIN SALESORDERLINE s2 ON
            s.CODE = s2.SALESORDERCODE
            --    WHERE s.CODE ='EXP2400354'
        GROUP BY
            s.CODE,
            s.COMPANYCODE,
            s.ORDPRNCUSTOMERSUPPLIERCODE,
            s.DELIVERYPOINTCODE,
            a.UNIQUEID,
            a.VALUESTRING,
            a2.VALUESTRING,
            a3.VALUESTRING,
            BUSINESSPARTNER.LEGALNAME1
    );


-- DB2ADMIN.ITXVIEW_SHIPPING_MARK_ELEMENT source

CREATE VIEW ITXVIEW_SHIPPING_MARK_ELEMENT AS
SELECT
    DISTINCT 
	p.ORIGDLVSALORDLINESALORDERCODE AS SALESORDERCODE,
    e.ELEMENTCODE,
    p.CODE AS DEMAND_CODE,
    e.NUMBERGROUPSHIFT,
    --    LISTAGG(DISTINCT(TRIM(s3.EXTERNALREFERENCE)),
    --    ', ') AS SP#,
    TRIM(s3.EXTERNALREFERENCE) AS SP#,
    TRIM(s3.INTERNALREFERENCE) AS ST#,
    --    LISTAGG(DISTINCT(TRIM(s2.INTERNALREFERENCE)),
    --    ', ') AS ST#,
    a.UNIQUEID,
    a.VALUESTRING AS KODE_SM,
    a2.VALUESTRING AS PIC,
    CASE
        WHEN a3.VALUESTRING IS NULL THEN '-'
        ELSE a3.VALUESTRING
    END AS ext
FROM
    ELEMENTSINSPECTION e
LEFT JOIN PRODUCTIONDEMAND p ON
    e.DEMANDCODE = p.CODE
LEFT JOIN SALESORDERLINE s3 ON
    s3.SALESORDERCODE = p.ORIGDLVSALORDLINESALORDERCODE
    AND s3.ORDERLINE = p.ORIGDLVSALORDERLINEORDERLINE
    AND s3.SUBCODE01 = p.SUBCODE01
    AND s3.SUBCODE02 = p.SUBCODE02
    AND s3.SUBCODE03 = p.SUBCODE03
    AND s3.SUBCODE04 = p.SUBCODE04
    AND s3.SUBCODE05 = p.SUBCODE05
    AND s3.SUBCODE06 = p.SUBCODE06
LEFT JOIN SALESORDER s ON
    s.CODE = p.ORIGDLVSALORDLINESALORDERCODE
LEFT JOIN ADSTORAGE a ON
    s.ABSUNIQUEID = a.UNIQUEID
    AND a.NAMENAME = 'KodeSM'
LEFT JOIN ADSTORAGE a2 ON
    s.ABSUNIQUEID = a2.UNIQUEID
    AND a2.NAMENAME = 'PICEXT'
LEFT JOIN ADSTORAGE a3 ON
    s.ABSUNIQUEID = a3.UNIQUEID
    AND a3.NAMENAME = 'EXT'
    --        WHERE
    --        e.ELEMENTCODE = '0026369501701'
GROUP BY
    p.ORIGDLVSALORDLINESALORDERCODE,
    a.UNIQUEID,
    e.NUMBERGROUPSHIFT,
    e.ELEMENTCODE,
    P.CODE,
    s3.EXTERNALREFERENCE,
    s3.INTERNALREFERENCE ,
    a.VALUESTRING,
    a2.VALUESTRING,
    a3.VALUESTRING;


-- DB2ADMIN.ITXVIEW_SHIPPING_MARK_SINTEX source

CREATE VIEW ITXVIEW_SHIPPING_MARK_SINTEX AS 
SELECT
    SALESDOCUMENTPROVISIONALCODE,
    LISTAGG(
        DISTINCT(
            TRIM(SP#)
        ),
        ', '
    ) AS SP#,
    LISTAGG(
        DISTINCT(
            TRIM(ST#)
        ),
        ', '
    ) AS ST#,
    KODE_SM,
    LISTAGG(
        DISTINCT(
            TRIM(PIC)
        ),
        ', '
    ) AS PIC,
    LISTAGG(
        DISTINCT(
            TRIM(ext)
        ),
        ', '
    ) AS ext
FROM
    (
        SELECT
            DISTINCT 
    s1.SALESDOCUMENTPROVISIONALCODE,
            LISTAGG(
                DISTINCT(
                    TRIM(s3.EXTERNALREFERENCE)
                ),
                ', '
            ) AS SP#,
            LISTAGG(
                DISTINCT(
                    TRIM(s3.INTERNALREFERENCE)
                ),
                ', '
            ) AS ST#,
            a.VALUESTRING AS KODE_SM,
            LISTAGG(
                DISTINCT(
                    TRIM(a2.VALUESTRING)
                ),
                ', '
            ) AS PIC,
            LISTAGG(
                DISTINCT(
                    TRIM(a3.VALUESTRING)
                ),
                ', '
            ) AS ext
        FROM
            salesdocumentline s1
        LEFT JOIN SALESORDERLINE s3 ON
            s3.SALESORDERCODE = s1.DLVSALORDERLINESALESORDERCODE
            AND s3.ORDERLINE = s1.DLVSALESORDERLINEORDERLINE
            AND s3.SUBCODE01 = s1.SUBCODE01
            AND s3.SUBCODE02 = s1.SUBCODE02
            AND s3.SUBCODE03 = s1.SUBCODE03
            AND s3.SUBCODE04 = s1.SUBCODE04
            AND s3.SUBCODE05 = s1.SUBCODE05
            AND s3.SUBCODE06 = s1.SUBCODE06
            AND s3.SUBCODE07 = s1.SUBCODE07
            AND s3.SUBCODE08 = s1.SUBCODE08
            AND s3.SUBCODE09 = s1.SUBCODE09
            AND s3.SUBCODE10 = s1.SUBCODE10
        LEFT JOIN SALESORDER s ON
            s.CODE = s3.SALESORDERCODE
        LEFT JOIN ADSTORAGE a ON
            s.ABSUNIQUEID = a.UNIQUEID
            AND a.NAMENAME = 'KodeSM'
        LEFT JOIN ADSTORAGE a2 ON
            s.ABSUNIQUEID = a2.UNIQUEID
            AND a2.NAMENAME = 'PICEXT'
        LEFT JOIN ADSTORAGE a3 ON
            s.ABSUNIQUEID = a3.UNIQUEID
            AND a3.NAMENAME = 'EXT'
            --        WHERE s1.SALESDOCUMENTPROVISIONALCODE IN ('ESP2300885')
        GROUP BY
            s1.SALESDOCUMENTPROVISIONALCODE,
            a.VALUESTRING
    )
GROUP BY 
    KODE_SM,
    SALESDOCUMENTPROVISIONALCODE;


-- DB2ADMIN.ITXVIEW_SJEXIM_DETAILJUMLAH source

CREATE VIEW ITXVIEW_SJEXIM_DETAILJUMLAH AS
SELECT
    SJEXM.PROVISIONALCODE,
    SJEXM.CODE,
    ALLOCATION_SJEXM.BASEPRIMARYQUANTITY,
    ALLOCATION_SJEXM.BASESECONDARYQUANTITY,
    ALLOCATION_SJEXM.BASEPRIMARYQUANTITY + 0.6 AS jml_gw
FROM
    ITXVIEW_SURATJALAN_EXIM SJEXM
LEFT JOIN ITXVIEWALLOCATION0_SJEXIM ALLOCATION_SJEXM ON
    SJEXM.CODE = ALLOCATION_SJEXM.CODE
GROUP BY
    SJEXM.PROVISIONALCODE,
    SJEXM.CODE,
    ALLOCATION_SJEXM.BASEPRIMARYQUANTITY,
    ALLOCATION_SJEXM.BASESECONDARYQUANTITY;


-- DB2ADMIN.ITXVIEW_SJEXIM_JUMLAHQUANTITTY source

CREATE VIEW ITXVIEW_SJEXIM_JUMLAHQUANTITTY AS
SELECT
    SJEXM_JML.PROVISIONALCODE,
    count(SJEXM_JML.CODE) AS jml_roll,
    sum(SJEXM_JML.BASEPRIMARYQUANTITY) AS jml_kg,
    sum(SJEXM_JML.BASESECONDARYQUANTITY) AS jml_yard,
    sum(SJEXM_JML.JML_GW) AS jml_gw
FROM
    ITXVIEW_SJEXIM_DETAILJUMLAH SJEXM_JML
GROUP BY
    SJEXM_JML.PROVISIONALCODE;


-- DB2ADMIN.ITXVIEW_STD_CCK_WARNA source

CREATE VIEW ITXVIEW_STD_CCK_WARNA AS
SELECT
    s2.SALESORDERCODE,
    s2.ORDERLINE,
    a.NAMENAME,
    CASE
        WHEN a.VALUESTRING = '1' THEN 'Labdip - ' || a2.VALUESTRING
        WHEN a.VALUESTRING = '2' THEN 'First Lot - ' || a2.VALUESTRING
        WHEN a.VALUESTRING = '3' THEN 'Original - ' || a2.VALUESTRING
        WHEN a.VALUESTRING = '4' THEN 'Previous Order - ' || a2.VALUESTRING
        WHEN a.VALUESTRING = '5' THEN 'Master Color - ' || a2.VALUESTRING
        WHEN a.VALUESTRING = '6' THEN 'Lampiran Buyer - ' || a2.VALUESTRING
        WHEN a.VALUESTRING = '7' THEN 'Body - ' || a2.VALUESTRING
        ELSE '-'
    END AS STANDART_COCOK_WARNA,
    --    UNTUK LABORAT BEDA NAMANYA DOANG
    CASE
        WHEN a.VALUESTRING = '1' THEN 'Labdip - ' || a2.VALUESTRING
        WHEN a.VALUESTRING = '2' THEN 'First Lot - ' || a2.VALUESTRING
        WHEN a.VALUESTRING = '3' THEN 'Original - ' || a2.VALUESTRING
        WHEN a.VALUESTRING = '4' THEN 'Previous Order - ' || a2.VALUESTRING
        WHEN a.VALUESTRING = '5' THEN 'Master Color - ' || a2.VALUESTRING
        WHEN a.VALUESTRING = '6' THEN 'Lampiran Buyer - ' || a2.VALUESTRING
        WHEN a.VALUESTRING = '7' THEN 'Body - ' || a2.VALUESTRING
        ELSE '-'
    END AS STDCCKWARNA,
    a2.VALUESTRING AS LABDIPNO
FROM
    SALESORDER s
LEFT JOIN SALESORDERLINE s2 ON
    s.CODE = s2.SALESORDERCODE
LEFT JOIN ADSTORAGE a ON
    a.UNIQUEID = s2.ABSUNIQUEID
    AND a.NAMENAME = 'ColorStandard'
LEFT JOIN ADSTORAGE a2 ON
    a2.UNIQUEID = s2.ABSUNIQUEID
    AND a2.NAMENAME = 'ColorRemarks'
    --WHERE 
    --	s2.SALESORDERCODE = 'LAB2300517' AND s2.ORDERLINE = 10;


-- DB2ADMIN.ITXVIEW_STD_KNT source

CREATE VIEW ITXVIEW_STD_KNT AS
SELECT
    ADSTORAGE.NAMENAME,
    ADSTORAGE.VALUEDECIMAL,
    PRODUCT.ITEMTYPECODE,
    PRODUCT.SUBCODE01,
    PRODUCT.SUBCODE02,
    PRODUCT.SUBCODE03,
    PRODUCT.SUBCODE04,
    PRODUCT.SUBCODE05,
    PRODUCT.SUBCODE06,
    PRODUCT.SUBCODE07,
    PRODUCT.SUBCODE08
FROM
    DB2ADMIN.ADSTORAGE ADSTORAGE
RIGHT OUTER JOIN DB2ADMIN.PRODUCT PRODUCT ON
    ADSTORAGE.UNIQUEID = PRODUCT.ABSUNIQUEID
WHERE
    NAMENAME = 'StdrQty';


-- DB2ADMIN.ITXVIEW_STICKER source

CREATE VIEW ITXVIEW_STICKER AS
SELECT
    DISTINCT
    s.ITEMELEMENTCODE AS ELEMENTS,
    PRODUCTIONDEMAND.COMPANYCODE,
    PRODUCTIONDEMAND.CODE AS DEMAND,
    PRODUCTIONDEMAND.TEMPLATECODE,
    PRODUCTIONDEMAND.ORIGDLVSALORDLINESALORDERCODE AS PROJECTCODE,
    PRODUCTIONDEMAND.ITEMTYPEAFICODE AS ITEMTYPEAFICODE_YND,
    TRIM(SALESORDERLINE.SUBCODE01) AS DSUBCODE01,
    TRIM(SALESORDERLINE.SUBCODE02) AS DSUBCODE02,
    TRIM(SALESORDERLINE.SUBCODE03) AS DSUBCODE03,
    TRIM(SALESORDERLINE.SUBCODE04) AS DSUBCODE04,
    TRIM(SALESORDERLINE.SUBCODE05) AS DSUBCODE05,
    TRIM(SALESORDERLINE.SUBCODE06) AS DSUBCODE06,
    TRIM(SALESORDERLINE.SUBCODE07) AS DSUBCODE07,
    TRIM(SALESORDERLINE.SUBCODE08) AS DSUBCODE08,
    TRIM(SALESORDERLINE.SUBCODE09) AS DSUBCODE09,
    TRIM(SALESORDERLINE.SUBCODE10) AS DSUBCODE10,   
    PRODUCTIONDEMAND.ORIGDLVSALORDERLINEORDERLINE,
    PRODUCTIONDEMANDSTEP.PRODUCTIONDEMANDCODE,
    PRODUCTIONDEMANDSTEP.PRODUCTIONORDERCODE,
    PRODUCTIONDEMAND.DESCRIPTION AS LOT,
    PRODUCTIONDEMAND.ENTEREDUSERPRIMARYQUANTITY AS QTY_PACKING_KG,
    PRODUCTIONDEMAND.ENTEREDBASESECONDARYQUANTITY AS QTY_PACKING_YARD,
    SALESORDER.CODE AS BONORDER,
    SALESORDER.ORDPRNCUSTOMERSUPPLIERCODE,
    CASE
        WHEN TRIM(SALESORDERLINE.EXTERNALITEM) IS NULL THEN TRIM(PRODUCTIONDEMAND.SUBCODE02) || '-' || TRIM(PRODUCTIONDEMAND.SUBCODE03)
        ELSE TRIM(SALESORDERLINE.EXTERNALITEM)
    END AS EXTERNALITEM,    
    PRODUCTIONDEMAND.ITEMTYPEAFICODE,
    PRODUCTIONDEMAND.SUBCODE01,
    PRODUCTIONDEMAND.SUBCODE02,
    PRODUCTIONDEMAND.SUBCODE03,
    PRODUCTIONDEMAND.SUBCODE04,
    p.SUBCODE02 AS RESERVATION_SUBCODE02,
    p.SUBCODE03 AS RESERVATION_SUBCODE03,
    p.SUBCODE04 AS RESERVATION_SUBCODE04,
    PRODUCTIONDEMAND.SUBCODE05,
    PRODUCTIONDEMAND.SUBCODE06,
    PRODUCTIONDEMAND.SUBCODE07,
    PRODUCTIONDEMAND.SUBCODE08,
    PRODUCTIONDEMAND.SUBCODE09,
    PRODUCTIONDEMAND.SUBCODE10,
    i.WARNA,
    i.WARNA_DASAR,
    COALESCE(SALESORDER.EXTERNALREFERENCE , COALESCE(SALESORDERLINE.EXTERNALREFERENCE , '')) AS EXTERNALREFERENCE ,
    CASE
        WHEN PRODUCT.LONGDESCRIPTION IS NULL THEN SALESORDERLINE.ITEMDESCRIPTION
        ELSE PRODUCT.LONGDESCRIPTION
    END AS ITEMDESCRIPTION,
    COALESCE(SALESORDER.INTERNALREFERENCE, COALESCE(SALESORDERLINE.INTERNALREFERENCE, '')) AS INTERNALREFERENCE,
    SALESORDERLINE.USERSECONDARYUOMCODE,
    SALESORDERLINE.PRICEUNITOFMEASURECODE,
    SALESORDERLINE.ORDERLINE,
    PRODUCTIONORDER.PROGRESSSTATUS,
    'KGF' AS KGF,
    a7.VALUESTRING AS OriginalPdCode,
    CASE
        WHEN a7.VALUESTRING IS NOT NULL THEN substring(a7.VALUESTRING, 5)
        ELSE a7.VALUESTRING
    END AS old_demand
FROM
    PRODUCTIONDEMAND PRODUCTIONDEMAND
LEFT JOIN (
        SELECT
            DISTINCT PRODUCTIONDEMANDCODE,
            PRODUCTIONORDERCODE
        FROM
            PRODUCTIONDEMANDSTEP PRODUCTIONDEMANDSTEP
    ) PRODUCTIONDEMANDSTEP ON
    PRODUCTIONDEMAND.CODE = PRODUCTIONDEMANDSTEP.PRODUCTIONDEMANDCODE
LEFT JOIN SALESORDER SALESORDER ON
    PRODUCTIONDEMAND.ORIGDLVSALORDLINESALORDERCODE = SALESORDER.CODE
LEFT JOIN ORDERPARTNER ORDERPARTNER ON
    PRODUCTIONDEMAND.CUSTOMERCODE = ORDERPARTNER.CUSTOMERSUPPLIERCODE
LEFT JOIN BUSINESSPARTNER BUSINESSPARTNER ON
    BUSINESSPARTNER.NUMBERID = ORDERPARTNER.ORDERBUSINESSPARTNERNUMBERID
LEFT JOIN ADDRESS a ON
    a.CODE = SALESORDER.DELIVERYPOINTCODE
    AND a.UNIQUEID = SALESORDER.DELIVERYPOINTUNIQUEID
LEFT JOIN SALESORDERLINE SALESORDERLINE ON
    SALESORDERLINE.SALESORDERCODE = SALESORDER.CODE
    AND SALESORDERLINE.ORDERLINE = PRODUCTIONDEMAND.ORIGDLVSALORDERLINEORDERLINE
LEFT JOIN SALESORDERDELIVERY SALESORDERDELIVERY ON
    SALESORDERDELIVERY.SALESORDERLINESALESORDERCODE = PRODUCTIONDEMAND.DLVSALORDERLINESALESORDERCODE
    AND SALESORDERDELIVERY.SALESORDERLINEORDERLINE = PRODUCTIONDEMAND.DLVSALESORDERLINEORDERLINE
RIGHT JOIN PRODUCTIONORDER PRODUCTIONORDER ON
    PRODUCTIONDEMANDSTEP.PRODUCTIONORDERCODE = PRODUCTIONORDER.CODE
LEFT JOIN PRODUCT PRODUCT ON
    PRODUCT.ITEMTYPECODE = PRODUCTIONDEMAND.ITEMTYPEAFICODE
    AND PRODUCT.SUBCODE01 = PRODUCTIONDEMAND.SUBCODE01
    AND PRODUCT.SUBCODE02 = PRODUCTIONDEMAND.SUBCODE02
    AND PRODUCT.SUBCODE03 = PRODUCTIONDEMAND.SUBCODE03
    AND PRODUCT.SUBCODE04 = PRODUCTIONDEMAND.SUBCODE04
    AND PRODUCT.SUBCODE05 = PRODUCTIONDEMAND.SUBCODE05
    AND PRODUCT.SUBCODE06 = PRODUCTIONDEMAND.SUBCODE06
    AND PRODUCT.SUBCODE07 = PRODUCTIONDEMAND.SUBCODE07
    AND PRODUCT.SUBCODE08 = PRODUCTIONDEMAND.SUBCODE08
    AND PRODUCT.SUBCODE09 = PRODUCTIONDEMAND.SUBCODE09
    AND PRODUCT.SUBCODE10 = PRODUCTIONDEMAND.SUBCODE10
LEFT JOIN ITXVIEWCOLOR i ON
    i.ITEMTYPECODE = PRODUCTIONDEMAND.ITEMTYPEAFICODE
    AND i.SUBCODE01 = PRODUCTIONDEMAND.SUBCODE01
    AND i.SUBCODE02 = PRODUCTIONDEMAND.SUBCODE02
    AND i.SUBCODE03 = PRODUCTIONDEMAND.SUBCODE03
    AND i.SUBCODE04 = PRODUCTIONDEMAND.SUBCODE04
    AND i.SUBCODE05 = PRODUCTIONDEMAND.SUBCODE05
    AND i.SUBCODE06 = PRODUCTIONDEMAND.SUBCODE06
    AND i.SUBCODE07 = PRODUCTIONDEMAND.SUBCODE07
    AND i.SUBCODE08 = PRODUCTIONDEMAND.SUBCODE08
    AND i.SUBCODE09 = PRODUCTIONDEMAND.SUBCODE09
    AND i.SUBCODE10 = PRODUCTIONDEMAND.SUBCODE10
LEFT JOIN ADSTORAGE a7 ON
    a7.UNIQUEID = PRODUCTIONDEMAND.ABSUNIQUEID
    AND a7.FIELDNAME = 'OriginalPDCode'
LEFT JOIN ORDERITEMORDERPARTNERLINK o ON
    o.INACTIVE = 0
    AND o.ORDPRNCUSTOMERSUPPLIERCODE = SALESORDER.ORDPRNCUSTOMERSUPPLIERCODE
    AND o.ITEMTYPEAFICODE = PRODUCTIONDEMAND.ITEMTYPEAFICODE
    AND o.SUBCODE01 = PRODUCTIONDEMAND.SUBCODE01
    AND o.SUBCODE02 = PRODUCTIONDEMAND.SUBCODE02
    AND o.SUBCODE03 = PRODUCTIONDEMAND.SUBCODE03
    AND o.SUBCODE04 = PRODUCTIONDEMAND.SUBCODE04
    AND o.SUBCODE05 = PRODUCTIONDEMAND.SUBCODE05
    AND o.SUBCODE06 = PRODUCTIONDEMAND.SUBCODE06
    AND o.SUBCODE07 = PRODUCTIONDEMAND.SUBCODE07
    AND o.SUBCODE08 = PRODUCTIONDEMAND.SUBCODE08
    AND o.SUBCODE09 = PRODUCTIONDEMAND.SUBCODE09
    AND o.SUBCODE10 = PRODUCTIONDEMAND.SUBCODE10
LEFT JOIN PRODUCTIONRESERVATION p ON
    p.ORDERCODE = PRODUCTIONDEMAND.CODE
    AND (
        p.ITEMTYPEAFICODE = 'KGF'
            OR p.ITEMTYPEAFICODE = 'KFF'
    )
LEFT JOIN 
	(
        SELECT
            DISTINCT 
		STOCKTRANSACTION.*
        FROM
            STOCKTRANSACTION STOCKTRANSACTION
        WHERE
            STOCKTRANSACTION.DETAILTYPE = '2'
    ) s 
ON
    s.PROJECTCODE = SALESORDER.CODE
    AND s.DECOSUBCODE01 = PRODUCTIONDEMAND.SUBCODE01
    AND s.DECOSUBCODE02 = PRODUCTIONDEMAND.SUBCODE02
    AND s.DECOSUBCODE03 = PRODUCTIONDEMAND.SUBCODE03
    AND s.DECOSUBCODE04 = PRODUCTIONDEMAND.SUBCODE04
    AND s.DECOSUBCODE05 = PRODUCTIONDEMAND.SUBCODE05
    AND s.DECOSUBCODE06 = PRODUCTIONDEMAND.SUBCODE06
    AND s.DECOSUBCODE07 = PRODUCTIONDEMAND.SUBCODE07
    AND s.DECOSUBCODE08 = PRODUCTIONDEMAND.SUBCODE08
    --        WHERE s.ITEMELEMENTCODE='0026509000101'
    --            AND PRODUCTIONDEMANDSTEP.PRODUCTIONORDERCODE='00150636'
    --        LIMIT 1
    --    AND PRODUCTIONDEMAND.ORIGDLVSALORDLINESALORDERCODE ='DOM2400949';


-- DB2ADMIN.ITXVIEW_STICKER_DEMAND source

CREATE VIEW ITXVIEW_STICKER_DEMAND AS 
SELECT
    DISTINCT
    PRODUCTIONDEMAND.COMPANYCODE,
    PRODUCTIONDEMAND.CODE AS DEMAND,
    PRODUCTIONDEMAND.ORIGDLVSALORDLINESALORDERCODE AS PROJECTCODE,
    PRODUCTIONDEMAND.ITEMTYPEAFICODE AS ITEMTYPEAFICODE_YND,
    TRIM(SALESORDERLINE.SUBCODE01) AS DSUBCODE01,
    TRIM(SALESORDERLINE.SUBCODE02) AS DSUBCODE02,
    TRIM(SALESORDERLINE.SUBCODE03) AS DSUBCODE03,
    TRIM(SALESORDERLINE.SUBCODE04) AS DSUBCODE04,
    TRIM(SALESORDERLINE.SUBCODE05) AS DSUBCODE05,
    TRIM(SALESORDERLINE.SUBCODE06) AS DSUBCODE06,
    TRIM(SALESORDERLINE.SUBCODE07) AS DSUBCODE07,
    TRIM(SALESORDERLINE.SUBCODE08) AS DSUBCODE08,
    TRIM(SALESORDERLINE.SUBCODE09) AS DSUBCODE09,
    TRIM(SALESORDERLINE.SUBCODE10) AS DSUBCODE10,   
    PRODUCTIONDEMAND.ORIGDLVSALORDERLINEORDERLINE,
    PRODUCTIONDEMANDSTEP.PRODUCTIONDEMANDCODE,
    PRODUCTIONDEMANDSTEP.PRODUCTIONORDERCODE,
    PRODUCTIONDEMAND.DESCRIPTION AS LOT,
    PRODUCTIONDEMAND.ENTEREDUSERPRIMARYQUANTITY AS QTY_PACKING_KG,
    PRODUCTIONDEMAND.ENTEREDBASESECONDARYQUANTITY AS QTY_PACKING_YARD,
    SALESORDER.CODE AS BONORDER,
    SALESORDER.ORDPRNCUSTOMERSUPPLIERCODE,
    CASE
        WHEN TRIM(SALESORDERLINE.EXTERNALITEM) IS NULL THEN TRIM(PRODUCTIONDEMAND.SUBCODE02) || '-' || TRIM(PRODUCTIONDEMAND.SUBCODE03)
        ELSE TRIM(SALESORDERLINE.EXTERNALITEM)
    END AS EXTERNALITEM,    
    PRODUCTIONDEMAND.ITEMTYPEAFICODE,
    PRODUCTIONDEMAND.SUBCODE01,
    PRODUCTIONDEMAND.SUBCODE02,
    PRODUCTIONDEMAND.SUBCODE03,
    PRODUCTIONDEMAND.SUBCODE04,
    p.SUBCODE02 AS RESERVATION_SUBCODE02,
    p.SUBCODE03 AS RESERVATION_SUBCODE03,
    p.SUBCODE04 AS RESERVATION_SUBCODE04,
    PRODUCTIONDEMAND.SUBCODE05,
    PRODUCTIONDEMAND.SUBCODE06,
    PRODUCTIONDEMAND.SUBCODE07,
    PRODUCTIONDEMAND.SUBCODE08,
    PRODUCTIONDEMAND.SUBCODE09,
    PRODUCTIONDEMAND.SUBCODE10,
    i.WARNA,
    i.WARNA_DASAR,
    COALESCE(SALESORDER.EXTERNALREFERENCE , COALESCE(SALESORDERLINE.EXTERNALREFERENCE , '')) AS EXTERNALREFERENCE ,
    CASE
        WHEN PRODUCT.LONGDESCRIPTION IS NULL THEN SALESORDERLINE.ITEMDESCRIPTION
        ELSE PRODUCT.LONGDESCRIPTION
    END AS ITEMDESCRIPTION,
    COALESCE(SALESORDER.INTERNALREFERENCE, COALESCE(SALESORDERLINE.INTERNALREFERENCE, '')) AS INTERNALREFERENCE,
    SALESORDERLINE.USERSECONDARYUOMCODE,
    SALESORDERLINE.PRICEUNITOFMEASURECODE,
    SALESORDERLINE.ORDERLINE,
    PRODUCTIONORDER.PROGRESSSTATUS,
    'KGF' AS KGF,
    a7.VALUESTRING AS OriginalPdCode,
    CASE
        WHEN a7.VALUESTRING IS NOT NULL THEN substring(a7.VALUESTRING, 5)
        ELSE a7.VALUESTRING
    END AS old_demand
FROM
    PRODUCTIONDEMAND PRODUCTIONDEMAND
LEFT JOIN (
        SELECT
            DISTINCT PRODUCTIONDEMANDCODE,
            PRODUCTIONORDERCODE
        FROM
            PRODUCTIONDEMANDSTEP PRODUCTIONDEMANDSTEP
    ) PRODUCTIONDEMANDSTEP ON
    PRODUCTIONDEMAND.CODE = PRODUCTIONDEMANDSTEP.PRODUCTIONDEMANDCODE
LEFT JOIN SALESORDER SALESORDER ON
    PRODUCTIONDEMAND.ORIGDLVSALORDLINESALORDERCODE = SALESORDER.CODE
LEFT JOIN ORDERPARTNER ORDERPARTNER ON
    PRODUCTIONDEMAND.CUSTOMERCODE = ORDERPARTNER.CUSTOMERSUPPLIERCODE
LEFT JOIN BUSINESSPARTNER BUSINESSPARTNER ON
    BUSINESSPARTNER.NUMBERID = ORDERPARTNER.ORDERBUSINESSPARTNERNUMBERID
LEFT JOIN ADDRESS a ON
    a.CODE = SALESORDER.DELIVERYPOINTCODE
    AND a.UNIQUEID = SALESORDER.DELIVERYPOINTUNIQUEID
LEFT JOIN SALESORDERLINE SALESORDERLINE ON
    SALESORDERLINE.SALESORDERCODE = SALESORDER.CODE
    AND SALESORDERLINE.ORDERLINE = PRODUCTIONDEMAND.ORIGDLVSALORDERLINEORDERLINE
LEFT JOIN SALESORDERDELIVERY SALESORDERDELIVERY ON
    SALESORDERDELIVERY.SALESORDERLINESALESORDERCODE = PRODUCTIONDEMAND.DLVSALORDERLINESALESORDERCODE
    AND SALESORDERDELIVERY.SALESORDERLINEORDERLINE = PRODUCTIONDEMAND.DLVSALESORDERLINEORDERLINE
RIGHT JOIN PRODUCTIONORDER PRODUCTIONORDER ON
    PRODUCTIONDEMANDSTEP.PRODUCTIONORDERCODE = PRODUCTIONORDER.CODE
LEFT JOIN PRODUCT PRODUCT ON
    PRODUCT.ITEMTYPECODE = PRODUCTIONDEMAND.ITEMTYPEAFICODE
    AND PRODUCT.SUBCODE01 = PRODUCTIONDEMAND.SUBCODE01
    AND PRODUCT.SUBCODE02 = PRODUCTIONDEMAND.SUBCODE02
    AND PRODUCT.SUBCODE03 = PRODUCTIONDEMAND.SUBCODE03
    AND PRODUCT.SUBCODE04 = PRODUCTIONDEMAND.SUBCODE04
    AND PRODUCT.SUBCODE05 = PRODUCTIONDEMAND.SUBCODE05
    AND PRODUCT.SUBCODE06 = PRODUCTIONDEMAND.SUBCODE06
    AND PRODUCT.SUBCODE07 = PRODUCTIONDEMAND.SUBCODE07
    AND PRODUCT.SUBCODE08 = PRODUCTIONDEMAND.SUBCODE08
    AND PRODUCT.SUBCODE09 = PRODUCTIONDEMAND.SUBCODE09
    AND PRODUCT.SUBCODE10 = PRODUCTIONDEMAND.SUBCODE10
LEFT JOIN ITXVIEWCOLOR i ON
    i.ITEMTYPECODE = PRODUCTIONDEMAND.ITEMTYPEAFICODE
    AND i.SUBCODE01 = PRODUCTIONDEMAND.SUBCODE01
    AND i.SUBCODE02 = PRODUCTIONDEMAND.SUBCODE02
    AND i.SUBCODE03 = PRODUCTIONDEMAND.SUBCODE03
    AND i.SUBCODE04 = PRODUCTIONDEMAND.SUBCODE04
    AND i.SUBCODE05 = PRODUCTIONDEMAND.SUBCODE05
    AND i.SUBCODE06 = PRODUCTIONDEMAND.SUBCODE06
    AND i.SUBCODE07 = PRODUCTIONDEMAND.SUBCODE07
    AND i.SUBCODE08 = PRODUCTIONDEMAND.SUBCODE08
    AND i.SUBCODE09 = PRODUCTIONDEMAND.SUBCODE09
    AND i.SUBCODE10 = PRODUCTIONDEMAND.SUBCODE10
LEFT JOIN ADSTORAGE a7 ON
    a7.UNIQUEID = PRODUCTIONDEMAND.ABSUNIQUEID
    AND a7.FIELDNAME = 'OriginalPDCode'
LEFT JOIN ORDERITEMORDERPARTNERLINK o ON
    o.INACTIVE = 0
    AND o.ORDPRNCUSTOMERSUPPLIERCODE = SALESORDER.ORDPRNCUSTOMERSUPPLIERCODE
    AND o.ITEMTYPEAFICODE = PRODUCTIONDEMAND.ITEMTYPEAFICODE
    AND o.SUBCODE01 = PRODUCTIONDEMAND.SUBCODE01
    AND o.SUBCODE02 = PRODUCTIONDEMAND.SUBCODE02
    AND o.SUBCODE03 = PRODUCTIONDEMAND.SUBCODE03
    AND o.SUBCODE04 = PRODUCTIONDEMAND.SUBCODE04
    AND o.SUBCODE05 = PRODUCTIONDEMAND.SUBCODE05
    AND o.SUBCODE06 = PRODUCTIONDEMAND.SUBCODE06
    AND o.SUBCODE07 = PRODUCTIONDEMAND.SUBCODE07
    AND o.SUBCODE08 = PRODUCTIONDEMAND.SUBCODE08
    AND o.SUBCODE09 = PRODUCTIONDEMAND.SUBCODE09
    AND o.SUBCODE10 = PRODUCTIONDEMAND.SUBCODE10
LEFT JOIN PRODUCTIONRESERVATION p ON
    p.ORDERCODE = PRODUCTIONDEMAND.CODE
    AND (
        p.ITEMTYPEAFICODE = 'KGF'
            OR p.ITEMTYPEAFICODE = 'KFF'
    )
    --        WHERE  PRODUCTIONDEMANDSTEP.PRODUCTIONORDERCODE ='00099732';


-- DB2ADMIN.ITXVIEW_SUBDETAIL_EXIM source

CREATE VIEW ITXVIEW_SUBDETAIL_EXIM AS
SELECT
    ITXVIEW_DETAIL_EXIM.CODE,
    ITXVIEW_DETAIL_EXIM.PROVISIONALCODE,
    ITXVIEW_DETAIL_EXIM.EXTERNALREFERENCE,
    ITXVIEW_DETAIL_EXIM.LOTCODE,
    ITXVIEW_DETAIL_EXIM.ITEMELEMENTCODE,
    count(ITXVIEW_DETAIL_EXIM.CODE) AS jml_roll,
    ITXVIEW_DETAIL_EXIM.USERPRIMARYQUANTITY,
    round(ITXVIEW_DETAIL_EXIM.USERSECONDARYQUANTITY, 2) AS USERSECONDARYQUANTITY,
    ITXVIEW_DETAIL_EXIM.QTY_FOC,
    CASE
        WHEN ITXVIEW_DETAIL_EXIM.QUALITYREASON IS NULL THEN '-'
        ELSE ITXVIEW_DETAIL_EXIM.QUALITYREASON
    END AS QUALITYREASON
FROM
    ITXVIEW_DETAIL_EXIM ITXVIEW_DETAIL_EXIM
GROUP BY
    ITXVIEW_DETAIL_EXIM.CODE,
    ITXVIEW_DETAIL_EXIM.PROVISIONALCODE,
    ITXVIEW_DETAIL_EXIM.EXTERNALREFERENCE,
    ITXVIEW_DETAIL_EXIM.LOTCODE,
    ITXVIEW_DETAIL_EXIM.ITEMELEMENTCODE,
    ITXVIEW_DETAIL_EXIM.USERPRIMARYQUANTITY,
    ITXVIEW_DETAIL_EXIM.USERSECONDARYQUANTITY,
    ITXVIEW_DETAIL_EXIM.QTY_FOC,
    ITXVIEW_DETAIL_EXIM.QUALITYREASON;


-- DB2ADMIN.ITXVIEW_SUBDETAIL_EXIM2 source

CREATE VIEW ITXVIEW_SUBDETAIL_EXIM2 AS
SELECT
    CODE,
    PROVISIONALCODE,
    COMPANYCODE,
    EXTERNALREFERENCE,
    LOTCODE,
    ITEMELEMENTCODE,
    MESSRS_ID,
    count(CODE) AS jml_roll,
    USERPRIMARYQUANTITY AS jml_kg,
    USERSECONDARYQUANTITY AS jml_yd,
    USERPRIMARYQUANTITY + 0.6 AS jml_gw,
    ITEMTYPEAFICODE,
    QTY_FOC_kg AS FOC_kg,
    QTY_FOC_yd AS FOC_yd,
    CASE
        WHEN QUALITYREASONCODE = 'FOC' THEN QUALITYREASONCODE
        ELSE '-'
    END AS QUALITYREASON,
    width_sintex,
    width
FROM
    (
        SELECT
            ALLOCATION.LOTCODE,
            ALLOCATION.CODE,
            ALLOCATION.USERPRIMARYQUANTITY,
            ROUND(ALLOCATION.USERSECONDARYQUANTITY, 2)AS USERSECONDARYQUANTITY,
            ALLOCATION.ITEMELEMENTCODE,
            ITXVIEW_PACKINGLIST_EXIM.EXTERNALITEM,
            ITXVIEW_PACKINGLIST_EXIM.COMPANYCODE,
            ITXVIEW_PACKINGLIST_EXIM.EXTERNALREFERENCE,
            ITXVIEW_PACKINGLIST_EXIM.PROVISIONALCODE,
            ITXVIEW_PACKINGLIST_EXIM.PROVISIONALDOCUMENTDATE,
            ITXVIEW_PACKINGLIST_EXIM.PROJECTCODE,
            ITXVIEW_PACKINGLIST_EXIM.ITEMTYPEAFICODE,
            ITXVIEW_PACKINGLIST_EXIM.MESSRS_ID,
            CASE
                WHEN E.QUALITYREASONCODE = 'FOC' THEN ALLOCATION.USERPRIMARYQUANTITY
                ELSE 0
            END AS QTY_FOC_kg,
            CASE
                WHEN E.QUALITYREASONCODE = 'FOC' THEN ROUND(ALLOCATION.USERSECONDARYQUANTITY, 2)
                ELSE 0
            END AS QTY_FOC_yd,
            E.QUALITYREASONCODE,
            p2.width,
            CASE
                WHEN E3.hasil_cut = 8 THEN E3.ELEMENTSCUT_WIDTHGROSS
                ELSE E2.WIDTHGROSS
            END AS width_sintex
        FROM
            ITXVIEW_PACKINGLIST_EXIM ITXVIEW_PACKINGLIST_EXIM
        LEFT JOIN (
                SELECT
                    *
                FROM
                    ALLOCATION ALLOCATION
                WHERE
                    ALLOCATION.DETAILTYPE = '0'
            )ALLOCATION ON
            ITXVIEW_PACKINGLIST_EXIM.CODE = ALLOCATION.CODE
        LEFT JOIN ELEMENTS E ON
            E.CODE = ALLOCATION.ITEMELEMENTCODE
            AND E.COMPANYCODE = ALLOCATION.COMPANYCODE
            AND E.ITEMTYPECODE = ALLOCATION.ITEMTYPECODE
            AND E.DECOSUBCODE01 = ALLOCATION.DECOSUBCODE01
            AND E.DECOSUBCODE02 = ALLOCATION.DECOSUBCODE02
            AND E.DECOSUBCODE03 = ALLOCATION.DECOSUBCODE03
            AND E.DECOSUBCODE04 = ALLOCATION.DECOSUBCODE04
            AND E.DECOSUBCODE05 = ALLOCATION.DECOSUBCODE05
            AND E.DECOSUBCODE06 = ALLOCATION.DECOSUBCODE06
            AND E.DECOSUBCODE07 = ALLOCATION.DECOSUBCODE07
            AND E.DECOSUBCODE08 = ALLOCATION.DECOSUBCODE08
            AND E.DECOSUBCODE09 = ALLOCATION.DECOSUBCODE09
            AND E.DECOSUBCODE10 = ALLOCATION.DECOSUBCODE10
        LEFT JOIN ELEMENTSINSPECTION E2 ON
            E2.ELEMENTCODE = E.CODE
            AND E2.COMPANYCODE = E.COMPANYCODE
        LEFT JOIN (
                SELECT
                    DISTINCT 
s.ITEMELEMENTCODE AS ELEMENTSCUT,
                    LEFT (
                        i.ITEMELEMENTCODE,
                        1
                    ) AS hasil_cut,
                    E.WIDTHGROSS AS ELEMENTSCUT_WIDTHGROSS,
                    E.WIDTHNET AS ELEMENTSCUT_WIDTHNET,
                    LEFT(s.ITEMELEMENTCODE, 8) AS DEMAND,
                    s.PROJECTCODE,
                    s.LOTCODE,
                    s.COMPANYCODE,
                    i.ITEMELEMENTCODE
                FROM
                    ITXVIEW_CUT_ELEMENT_TRANSACTION i
                LEFT JOIN STOCKTRANSACTION s ON
                    s.TRANSACTIONNUMBER = i.CUTORGTRTRANSACTIONNUMBER
                LEFT JOIN ELEMENTSINSPECTION E ON
                    E.ELEMENTCODE = s.ITEMELEMENTCODE
                    AND E.COMPANYCODE = s.COMPANYCODE
            )E3 ON
            trim(E3.ITEMELEMENTCODE) = trim(E.CODE)
            AND E3.COMPANYCODE = E.COMPANYCODE
        LEFT JOIN(
                SELECT
                    p.ITEMTYPECODE,
                    p.SUBCODE01,
                    p.SUBCODE02,
                    p.SUBCODE03,
                    p.SUBCODE04,
                    p.SUBCODE05,
                    p.SUBCODE06,
                    p.SUBCODE07,
                    p.SUBCODE08,
                    p.SUBCODE09,
                    p.SUBCODE10,
                    a.VALUEDECIMAL AS width
                FROM
                    PRODUCT p
                LEFT JOIN ADSTORAGE a ON
                    a.UNIQUEID = p.ABSUNIQUEID
                    AND a.NAMENAME = 'Width'
            )p2 ON
            p2.ITEMTYPECODE = ALLOCATION.ITEMTYPECODE
            AND p2.SUBCODE01 = ALLOCATION.DECOSUBCODE01
            AND p2.SUBCODE02 = ALLOCATION.DECOSUBCODE02
            AND p2.SUBCODE03 = ALLOCATION.DECOSUBCODE03
            AND p2.SUBCODE04 = ALLOCATION.DECOSUBCODE04
            AND p2.SUBCODE05 = ALLOCATION.DECOSUBCODE05
            AND p2.SUBCODE06 = ALLOCATION.DECOSUBCODE06
            AND p2.SUBCODE07 = ALLOCATION.DECOSUBCODE07
            AND p2.SUBCODE08 = ALLOCATION.DECOSUBCODE08
            AND p2.SUBCODE09 = ALLOCATION.DECOSUBCODE09
            AND p2.SUBCODE10 = ALLOCATION.DECOSUBCODE10
        WHERE
            ALLOCATION.ORIGINTRNTRANSACTIONNUMBER IS NULL
            --                                		        AND  ITXVIEW_PACKINGLIST_EXIM.PROVISIONALCODE = 'ESP2400064'
    )
    --                	        WHERE PROVISIONALCODE = 'ESP2400516'
GROUP BY
    PROVISIONALCODE,
    COMPANYCODE,
    LOTCODE,
    EXTERNALREFERENCE,
    CODE,
    USERPRIMARYQUANTITY,
    USERSECONDARYQUANTITY,
    ITEMELEMENTCODE,
    EXTERNALITEM,
    PROJECTCODE,
    ITEMTYPEAFICODE,
    MESSRS_ID,
    QTY_FOC_kg,
    QTY_FOC_yd,    
    QUALITYREASONCODE,
    width_sintex,
    width;


-- DB2ADMIN.ITXVIEW_SUBDETAIL_EXIM2A source

CREATE VIEW ITXVIEW_SUBDETAIL_EXIM2A AS
SELECT
    SUB.CODE,
    SUB.PROVISIONALCODE,
    SUB.COMPANYCODE,
    SUB.EXTERNALREFERENCE,
    SUB.LOTCODE,
    SUB.ITEMELEMENTCODE,
    SUB.MESSRS_ID,
    count(SUB.CODE) AS jml_roll,
    SUB.USERPRIMARYQUANTITY AS jml_kg,
    SUB.USERSECONDARYQUANTITY AS jml_yd,
    SUB.USERPRIMARYQUANTITY + 0.6 AS jml_gw,
    SUB.ITEMTYPEAFICODE,
    SUB.QTY_FOC_kg AS FOC_kg,
    SUB.QTY_FOC_yd AS FOC_yd,
    CASE
        WHEN SUB.QUALITYREASONCODE = 'FOC' THEN SUB.QUALITYREASONCODE
        ELSE '-'
    END AS QUALITYREASON,
    CASE
        WHEN LEFT(SUB.ITEMELEMENTCODE, 1) = 8 THEN E3.WIDTHNET
        WHEN SUB.width_sintex IS NULL THEN SUB.width
        ELSE SUB.width_sintex
    END width_sintex,
    SUB.width
FROM
    (
        SELECT
            ALLOCATION.LOTCODE,
            ALLOCATION.CODE,
            ALLOCATION.USERPRIMARYQUANTITY,
            ROUND(ALLOCATION.USERSECONDARYQUANTITY, 2)AS USERSECONDARYQUANTITY,
            ALLOCATION.ITEMELEMENTCODE,
            ITXVIEW_PACKINGLIST_EXIM.EXTERNALITEM,
            ITXVIEW_PACKINGLIST_EXIM.COMPANYCODE,
            ITXVIEW_PACKINGLIST_EXIM.EXTERNALREFERENCE,
            ITXVIEW_PACKINGLIST_EXIM.PROVISIONALCODE,
            ITXVIEW_PACKINGLIST_EXIM.PROVISIONALDOCUMENTDATE,
            ITXVIEW_PACKINGLIST_EXIM.PROJECTCODE,
            ITXVIEW_PACKINGLIST_EXIM.ITEMTYPEAFICODE,
            ITXVIEW_PACKINGLIST_EXIM.MESSRS_ID,
            CASE
                WHEN E.QUALITYREASONCODE = 'FOC' THEN ALLOCATION.USERPRIMARYQUANTITY
                ELSE 0
            END AS QTY_FOC_kg,
            CASE
                WHEN E.QUALITYREASONCODE = 'FOC' THEN ROUND(ALLOCATION.USERSECONDARYQUANTITY, 2)
                ELSE 0
            END AS QTY_FOC_yd,
            E.QUALITYREASONCODE,
            p2.width,
            E2.WIDTHGROSS AS width_sintex
        FROM
            ITXVIEW_PACKINGLIST_EXIM ITXVIEW_PACKINGLIST_EXIM
        LEFT JOIN (
                SELECT
                    *
                FROM
                    ALLOCATION ALLOCATION
                WHERE
                    ALLOCATION.DETAILTYPE = '0'
            )ALLOCATION ON
            ITXVIEW_PACKINGLIST_EXIM.CODE = ALLOCATION.CODE
        LEFT JOIN ELEMENTS E ON
            E.CODE = ALLOCATION.ITEMELEMENTCODE
            AND E.COMPANYCODE = ALLOCATION.COMPANYCODE
            AND E.ITEMTYPECODE = ALLOCATION.ITEMTYPECODE
            AND E.DECOSUBCODE01 = ALLOCATION.DECOSUBCODE01
            AND E.DECOSUBCODE02 = ALLOCATION.DECOSUBCODE02
            AND E.DECOSUBCODE03 = ALLOCATION.DECOSUBCODE03
            AND E.DECOSUBCODE04 = ALLOCATION.DECOSUBCODE04
            AND E.DECOSUBCODE05 = ALLOCATION.DECOSUBCODE05
            AND E.DECOSUBCODE06 = ALLOCATION.DECOSUBCODE06
            AND E.DECOSUBCODE07 = ALLOCATION.DECOSUBCODE07
            AND E.DECOSUBCODE08 = ALLOCATION.DECOSUBCODE08
            AND E.DECOSUBCODE09 = ALLOCATION.DECOSUBCODE09
            AND E.DECOSUBCODE10 = ALLOCATION.DECOSUBCODE10
        LEFT JOIN ELEMENTSINSPECTION E2 ON
            E2.ELEMENTCODE = E.CODE
            AND E2.COMPANYCODE = E.COMPANYCODE
        LEFT JOIN(
                SELECT
                    p.ITEMTYPECODE,
                    p.SUBCODE01,
                    p.SUBCODE02,
                    p.SUBCODE03,
                    p.SUBCODE04,
                    p.SUBCODE05,
                    p.SUBCODE06,
                    p.SUBCODE07,
                    p.SUBCODE08,
                    p.SUBCODE09,
                    p.SUBCODE10,
                    a.VALUEDECIMAL AS width
                FROM
                    PRODUCT p
                LEFT JOIN ADSTORAGE a ON
                    a.UNIQUEID = p.ABSUNIQUEID
                    AND a.NAMENAME = 'Width'
            )p2 ON
            p2.ITEMTYPECODE = ALLOCATION.ITEMTYPECODE
            AND p2.SUBCODE01 = ALLOCATION.DECOSUBCODE01
            AND p2.SUBCODE02 = ALLOCATION.DECOSUBCODE02
            AND p2.SUBCODE03 = ALLOCATION.DECOSUBCODE03
            AND p2.SUBCODE04 = ALLOCATION.DECOSUBCODE04
            AND p2.SUBCODE05 = ALLOCATION.DECOSUBCODE05
            AND p2.SUBCODE06 = ALLOCATION.DECOSUBCODE06
            AND p2.SUBCODE07 = ALLOCATION.DECOSUBCODE07
            AND p2.SUBCODE08 = ALLOCATION.DECOSUBCODE08
            AND p2.SUBCODE09 = ALLOCATION.DECOSUBCODE09
            AND p2.SUBCODE10 = ALLOCATION.DECOSUBCODE10
        WHERE
            ALLOCATION.ORIGINTRNTRANSACTIONNUMBER IS NULL
            --                                        		        AND  ITXVIEW_PACKINGLIST_EXIM.PROVISIONALCODE = 'SRE2400125'
    ) SUB
LEFT JOIN ITXVIEW_CUT_ELEMENT_PACKINGLIST E3 ON
    E3.ITEMELEMENTCODE = SUB.ITEMELEMENTCODE
    AND E3.COMPANYCODE = SUB.COMPANYCODE
    --                	        WHERE SUB.PROVISIONALCODE = 'SRE2400125'
GROUP BY
    SUB.PROVISIONALCODE,
    SUB.COMPANYCODE,
    SUB.LOTCODE,
    SUB.EXTERNALREFERENCE,
    SUB.CODE,
    SUB.USERPRIMARYQUANTITY,
    SUB.USERSECONDARYQUANTITY,
    SUB.ITEMELEMENTCODE,
    SUB.EXTERNALITEM,
    SUB.PROJECTCODE,
    SUB.ITEMTYPEAFICODE,
    SUB.MESSRS_ID,
    SUB.QTY_FOC_kg,
    SUB.QTY_FOC_yd,    
    SUB.QUALITYREASONCODE,
    SUB.width_sintex,
    E3.WIDTHNET,
    SUB.width;


-- DB2ADMIN.ITXVIEW_SUBGRANDTOTAL_PACKINGLIST_EXIM source

CREATE VIEW ITXVIEW_SUBGRANDTOTAL_PACKINGLIST_EXIM AS
SELECT
    ITXVIEW_DETAIL_EXIM.PROVISIONALCODE AS no_sales,
    ITXVIEW_DETAIL_EXIM.CODE AS code,
    ITXVIEW_DETAIL_EXIM.ITEMELEMENTCODE AS elementcode,
    ITXVIEW_DETAIL_EXIM.LOTCODE AS LOTCODE,
    count(ITXVIEW_DETAIL_EXIM.CODE) AS jml_roll,
    ITXVIEW_DETAIL_EXIM.USERPRIMARYQUANTITY AS jml_kg,
    round(ITXVIEW_DETAIL_EXIM.USERSECONDARYQUANTITY, 2) AS jml_yd,
    ITXVIEW_DETAIL_EXIM.USERPRIMARYQUANTITY + 0.6 AS jml_gw
FROM
    ITXVIEW_DETAIL_EXIM ITXVIEW_DETAIL_EXIM
GROUP BY
    ITXVIEW_DETAIL_EXIM.PROVISIONALCODE,
    ITXVIEW_DETAIL_EXIM.CODE,
    ITXVIEW_DETAIL_EXIM.ITEMELEMENTCODE,
    ITXVIEW_DETAIL_EXIM.LOTCODE,
    ITXVIEW_DETAIL_EXIM.USERPRIMARYQUANTITY,
    ITXVIEW_DETAIL_EXIM.USERSECONDARYQUANTITY;


-- DB2ADMIN.ITXVIEW_SUBPACKINGLIST_EXIM source

CREATE VIEW ITXVIEW_SUBPACKINGLIST_EXIM AS
SELECT
    CODE,
    CONCAT(EXTERNALREFERENCE, ITEM_NO) AS DESC_OF_GOODS,
    PROVISIONALCODE,
    SALDOCPROVISIONALCOUNTERCODE,
    PROVISIONALDOCUMENTDATE,
    EXTERNALREFERENCE,
    EXTERNALITEM,
    ITEM_NO,
    LOTCODE,
    NO_ORDER,
    MESSRS_ID,
    CONSIGNEE_ID,
    ITEMTYPEAFICODE,
    DECOSUBCODE01,
    DECOSUBCODE02,
    DECOSUBCODE03,
    DECOSUBCODE04,
    DECOSUBCODE05,
    DECOSUBCODE06,
    DECOSUBCODE07,
    DECOSUBCODE08,
    ITEMDESCRIPTION
FROM
    (
        SELECT
            ITXVIEW_DETAIL_EXIM.CODE AS CODE,
            ITXVIEW_DETAIL_EXIM.PROVISIONALCODE AS PROVISIONALCODE,
            ITXVIEW_DETAIL_EXIM.SALDOCPROVISIONALCOUNTERCODE,
            ITXVIEW_DETAIL_EXIM.PROVISIONALDOCUMENTDATE AS PROVISIONALDOCUMENTDATE,
            ITXVIEW_DETAIL_EXIM.EXTERNALREFERENCE AS EXTERNALREFERENCE,
            ITXVIEW_DETAIL_EXIM.EXTERNALITEM AS EXTERNALITEM,
            CASE
                WHEN EXTERNALITEM <> '' THEN EXTERNALITEM
                ELSE trim(DECOSUBCODE02) || ' ' || trim(DECOSUBCODE02)
            END AS ITEM_NO,
            ITXVIEW_DETAIL_EXIM.LOTCODE AS LOTCODE,
            ITXVIEW_DETAIL_EXIM.PROJECTCODE AS NO_ORDER,
            ITXVIEW_DETAIL_EXIM.MESSRS_ID AS MESSRS_ID,
            ITXVIEW_DETAIL_EXIM.CONSIGNEE_ID AS CONSIGNEE_ID,
            ITXVIEW_DETAIL_EXIM.ITEMTYPEAFICODE AS ITEMTYPEAFICODE,
            ITXVIEW_DETAIL_EXIM.DECOSUBCODE01 AS DECOSUBCODE01,
            ITXVIEW_DETAIL_EXIM.DECOSUBCODE02 AS DECOSUBCODE02,
            ITXVIEW_DETAIL_EXIM.DECOSUBCODE03 AS DECOSUBCODE03,
            ITXVIEW_DETAIL_EXIM.DECOSUBCODE04 AS DECOSUBCODE04,
            ITXVIEW_DETAIL_EXIM.DECOSUBCODE05 AS DECOSUBCODE05,
            ITXVIEW_DETAIL_EXIM.DECOSUBCODE06 AS DECOSUBCODE06,
            ITXVIEW_DETAIL_EXIM.DECOSUBCODE07 AS DECOSUBCODE07,
            ITXVIEW_DETAIL_EXIM.DECOSUBCODE08 AS DECOSUBCODE08,
            ITXVIEW_DETAIL_EXIM.ITEMDESCRIPTION AS ITEMDESCRIPTION
        FROM
            ITXVIEW_DETAIL_EXIM ITXVIEW_DETAIL_EXIM
        LEFT JOIN ITXVIEWCOLOR ITXVIEWCOLOR ON
            ITXVIEW_DETAIL_EXIM.DECOSUBCODE01 = ITXVIEWCOLOR.SUBCODE01
            AND ITXVIEW_DETAIL_EXIM.DECOSUBCODE02 = ITXVIEWCOLOR.SUBCODE02
            AND ITXVIEW_DETAIL_EXIM.DECOSUBCODE03 = ITXVIEWCOLOR.SUBCODE03
            AND ITXVIEW_DETAIL_EXIM.DECOSUBCODE04 = ITXVIEWCOLOR.SUBCODE04
            AND ITXVIEW_DETAIL_EXIM.DECOSUBCODE05 = ITXVIEWCOLOR.SUBCODE05
            AND ITXVIEW_DETAIL_EXIM.DECOSUBCODE06 = ITXVIEWCOLOR.SUBCODE06
            AND ITXVIEW_DETAIL_EXIM.DECOSUBCODE07 = ITXVIEWCOLOR.SUBCODE07
            AND ITXVIEW_DETAIL_EXIM.DECOSUBCODE08 = ITXVIEWCOLOR.SUBCODE08
        LEFT JOIN ITXVIEW_HEADER_PACKLINGLIST_EXIM HEADER_PL_EXIM ON
            ITXVIEW_DETAIL_EXIM.PROVISIONALCODE = HEADER_PL_EXIM.NO_SALES
        GROUP BY
            ITXVIEW_DETAIL_EXIM.CODE,
            ITXVIEW_DETAIL_EXIM.PROVISIONALCODE,
            ITXVIEW_DETAIL_EXIM.SALDOCPROVISIONALCOUNTERCODE,
            ITXVIEW_DETAIL_EXIM.PROVISIONALDOCUMENTDATE,
            ITXVIEW_DETAIL_EXIM.EXTERNALREFERENCE,
            ITXVIEW_DETAIL_EXIM.EXTERNALITEM,
            ITXVIEW_DETAIL_EXIM.LOTCODE,
            ITXVIEW_DETAIL_EXIM.PROJECTCODE,
            ITXVIEW_DETAIL_EXIM.MESSRS_ID,
            ITXVIEW_DETAIL_EXIM.CONSIGNEE_ID,
            ITXVIEW_DETAIL_EXIM.ITEMTYPEAFICODE,
            ITXVIEW_DETAIL_EXIM.DECOSUBCODE01,
            ITXVIEW_DETAIL_EXIM.DECOSUBCODE02,
            ITXVIEW_DETAIL_EXIM.DECOSUBCODE03,
            ITXVIEW_DETAIL_EXIM.DECOSUBCODE04,
            ITXVIEW_DETAIL_EXIM.DECOSUBCODE05,
            ITXVIEW_DETAIL_EXIM.DECOSUBCODE06,
            ITXVIEW_DETAIL_EXIM.DECOSUBCODE07,
            ITXVIEW_DETAIL_EXIM.DECOSUBCODE08,
            ITXVIEW_DETAIL_EXIM.ITEMDESCRIPTION
    );


-- DB2ADMIN.ITXVIEW_SUBPACKINGLIST_EXIM2 source

CREATE VIEW ITXVIEW_SUBPACKINGLIST_EXIM2 AS
SELECT
    DISTINCT
    --    CODE,
    CONCAT(EXTERNALREFERENCE, ITEM_NO) AS DESC_OF_GOODS,
    PROVISIONALCODE,
    PROVISIONALCOUNTERCODE,
    COMPANYCODE,
    PROVISIONALDOCUMENTDATE,
    EXTERNALREFERENCE,
    EXTERNALITEM,
    ITEM_NO,
    LOTCODE,
    NO_ORDER,
    MESSRS_ID,
    CONSIGNEE_ID,
    ITEMTYPEAFICODE,
    DECOSUBCODE01,
    DECOSUBCODE02,
    DECOSUBCODE03,
    DECOSUBCODE04,
    DECOSUBCODE05,
    DECOSUBCODE06,
    DECOSUBCODE07,
    DECOSUBCODE08,
    ITEMDESCRIPTION
FROM
    (
        SELECT
            DISTINCT 
	ALLOCATION2.CODE,
            ALLOCATION2.LOTCODE,
            SALESORDER.CODE AS NO_ORDER,
            s.PROVISIONALCODE,
            s.PROVISIONALCOUNTERCODE,
            s.COMPANYCODE,
            s.PROVISIONALDOCUMENTDATE,
            s2.EXTERNALREFERENCE,
            s2.INTERNALREFERENCE,
            s2.EXTERNALITEM,
            CASE
                WHEN s2.EXTERNALITEM <> '' THEN s2.EXTERNALITEM
                ELSE trim(s2.SUBCODE02) || ' ' || trim(s2.SUBCODE02)
            END AS ITEM_NO,
            BUSINESSPARTNER.NUMBERID AS MESSRS_ID,
            ADDRESS.CODE AS CONSIGNEE_ID,
            s2.ITEMTYPEAFICODE,
            s2.ITEMDESCRIPTION,
            ALLOCATION2.DECOSUBCODE01 AS DECOSUBCODE01,
            ALLOCATION2.DECOSUBCODE02 AS DECOSUBCODE02,
            ALLOCATION2.DECOSUBCODE03 AS DECOSUBCODE03,
            ALLOCATION2.DECOSUBCODE04 AS DECOSUBCODE04,
            ALLOCATION2.DECOSUBCODE05 AS DECOSUBCODE05,
            ALLOCATION2.DECOSUBCODE06 AS DECOSUBCODE06,
            ALLOCATION2.DECOSUBCODE07 AS DECOSUBCODE07,
            ALLOCATION2.DECOSUBCODE08 AS DECOSUBCODE08
        FROM
            SALESDOCUMENT s
        LEFT JOIN SALESDOCUMENTLINE s2 ON
            s.PROVISIONALCODE = s2.SALESDOCUMENTPROVISIONALCODE
        LEFT JOIN SALESORDER SALESORDER ON
            TRIM(s2.DLVSALORDERLINESALESORDERCODE) = TRIM(SALESORDER.CODE)
        LEFT JOIN ADDRESS ADDRESS ON
            s.DELIVERYPOINTUNIQUEID = ADDRESS.UNIQUEID
            AND s.DELIVERYPOINTCODE = ADDRESS.CODE
        LEFT JOIN ORDERPARTNER ORDERPARTNER ON
            s.FNCORDPRNCUSTOMERSUPPLIERCODE = ORDERPARTNER.CUSTOMERSUPPLIERCODE
        LEFT JOIN BUSINESSPARTNER BUSINESSPARTNER ON
            ORDERPARTNER.ORDERBUSINESSPARTNERNUMBERID = BUSINESSPARTNER.NUMBERID
        LEFT JOIN (
                SELECT
                    *
                FROM
                    ALLOCATION ALLOCATION
                WHERE
                    ALLOCATION.DETAILTYPE = '1'
                    AND ALLOCATION.ORDERCODE IS NOT NULL
            )ALLOCATION ON
            s2.SUBCODE01 = ALLOCATION.DECOSUBCODE01
            AND s2.SUBCODE02 = ALLOCATION.DECOSUBCODE02
            AND s2.SUBCODE03 = ALLOCATION.DECOSUBCODE03
            AND s2.SUBCODE04 = ALLOCATION.DECOSUBCODE04
            AND s2.SUBCODE05 = ALLOCATION.DECOSUBCODE05
            AND s2.SUBCODE06 = ALLOCATION.DECOSUBCODE06
            AND s2.SUBCODE07 = ALLOCATION.DECOSUBCODE07
            AND s2.SUBCODE08 = ALLOCATION.DECOSUBCODE08
            AND s2.SALESDOCUMENTPROVISIONALCODE = ALLOCATION.ORDERCODE
            AND s2.ORDERLINE = ALLOCATION.ORDERLINE
        LEFT JOIN (
                SELECT
                    *
                FROM
                    ALLOCATION ALLOCATION2
                WHERE
                    ALLOCATION2.DETAILTYPE = '0'
            ) ALLOCATION2 ON
            ALLOCATION.CODE = ALLOCATION2.CODE
            AND ALLOCATION.DECOSUBCODE01 = ALLOCATION2.DECOSUBCODE01
            AND ALLOCATION.DECOSUBCODE02 = ALLOCATION2.DECOSUBCODE02
            AND ALLOCATION.DECOSUBCODE03 = ALLOCATION2.DECOSUBCODE03
            AND ALLOCATION.DECOSUBCODE04 = ALLOCATION2.DECOSUBCODE04
            AND ALLOCATION.DECOSUBCODE05 = ALLOCATION2.DECOSUBCODE05
            AND ALLOCATION.DECOSUBCODE06 = ALLOCATION2.DECOSUBCODE06
            AND ALLOCATION.DECOSUBCODE07 = ALLOCATION2.DECOSUBCODE07
            AND ALLOCATION.DECOSUBCODE08 = ALLOCATION2.DECOSUBCODE08
        WHERE
            ALLOCATION2.ORIGINTRNTRANSACTIONNUMBER IS NULL
    );


-- DB2ADMIN.ITXVIEW_SUBPACKINGLIST_EXIM3 source

CREATE VIEW ITXVIEW_SUBPACKINGLIST_EXIM3 AS
SELECT
    DISTINCT
    --    CODE,
    CONCAT(EXTERNALREFERENCE, ITEM_NO) AS DESC_OF_GOODS,
    PROVISIONALCODE,
    PROVISIONALCOUNTERCODE,
    COMPANYCODE,
    PROVISIONALDOCUMENTDATE,
    EXTERNALREFERENCE,
    EXTERNALITEM,
    ITEM_NO,
    LOTCODE,
    NO_ORDER,
    MESSRS_ID,
    CONSIGNEE_ID,
    ITEMTYPEAFICODE,
    DECOSUBCODE01,
    DECOSUBCODE02,
    DECOSUBCODE03,
    DECOSUBCODE04,
    DECOSUBCODE05,
    DECOSUBCODE06,
    DECOSUBCODE07,
    DECOSUBCODE08,
    ITEMDESCRIPTION,
    GSM,
    WIDTH
FROM
    (
        SELECT
            DISTINCT 
	ALLOCATION2.CODE,
            ALLOCATION2.LOTCODE,
            SALESORDER.CODE AS NO_ORDER,
            s.PROVISIONALCODE,
            s.PROVISIONALCOUNTERCODE,
            s.COMPANYCODE,
            s.PROVISIONALDOCUMENTDATE,
            s2.EXTERNALREFERENCE,
            s2.INTERNALREFERENCE,
            s2.EXTERNALITEM,
            CASE
                WHEN s2.EXTERNALITEM <> '' THEN s2.EXTERNALITEM
                ELSE trim(s2.SUBCODE02) || ' ' || trim(s2.SUBCODE02)
            END AS ITEM_NO,
            BUSINESSPARTNER.NUMBERID AS MESSRS_ID,
            ADDRESS.CODE AS CONSIGNEE_ID,
            s2.ITEMTYPEAFICODE,
            s2.ITEMDESCRIPTION,
            ALLOCATION2.DECOSUBCODE01 AS DECOSUBCODE01,
            ALLOCATION2.DECOSUBCODE02 AS DECOSUBCODE02,
            ALLOCATION2.DECOSUBCODE03 AS DECOSUBCODE03,
            ALLOCATION2.DECOSUBCODE04 AS DECOSUBCODE04,
            ALLOCATION2.DECOSUBCODE05 AS DECOSUBCODE05,
            ALLOCATION2.DECOSUBCODE06 AS DECOSUBCODE06,
            ALLOCATION2.DECOSUBCODE07 AS DECOSUBCODE07,
            ALLOCATION2.DECOSUBCODE08 AS DECOSUBCODE08,
            ITXVIEW_GRAMASI_EXIM.GSM,
            ITXVIEW_GRAMASI_EXIM.WIDTH
        FROM
            SALESDOCUMENT s
        LEFT JOIN SALESDOCUMENTLINE s2 ON
            s.PROVISIONALCODE = s2.SALESDOCUMENTPROVISIONALCODE
        LEFT JOIN SALESORDER SALESORDER ON
            TRIM(s2.DLVSALORDERLINESALESORDERCODE) = TRIM(SALESORDER.CODE)
        LEFT JOIN ADDRESS ADDRESS ON
            s.DELIVERYPOINTUNIQUEID = ADDRESS.UNIQUEID
            AND s.DELIVERYPOINTCODE = ADDRESS.CODE
        LEFT JOIN ORDERPARTNER ORDERPARTNER ON
            s.FNCORDPRNCUSTOMERSUPPLIERCODE = ORDERPARTNER.CUSTOMERSUPPLIERCODE
        LEFT JOIN BUSINESSPARTNER BUSINESSPARTNER ON
            ORDERPARTNER.ORDERBUSINESSPARTNERNUMBERID = BUSINESSPARTNER.NUMBERID
        LEFT JOIN (
                SELECT
                    *
                FROM
                    ALLOCATION ALLOCATION
                WHERE
                    ALLOCATION.DETAILTYPE = '1'
                    AND ALLOCATION.ORDERCODE IS NOT NULL
            )ALLOCATION ON
            s2.SUBCODE01 = ALLOCATION.DECOSUBCODE01
            AND s2.SUBCODE02 = ALLOCATION.DECOSUBCODE02
            AND s2.SUBCODE03 = ALLOCATION.DECOSUBCODE03
            AND s2.SUBCODE04 = ALLOCATION.DECOSUBCODE04
            AND s2.SUBCODE05 = ALLOCATION.DECOSUBCODE05
            AND s2.SUBCODE06 = ALLOCATION.DECOSUBCODE06
            AND s2.SUBCODE07 = ALLOCATION.DECOSUBCODE07
            AND s2.SUBCODE08 = ALLOCATION.DECOSUBCODE08
            AND s2.SALESDOCUMENTPROVISIONALCODE = ALLOCATION.ORDERCODE
            AND s2.ORDERLINE = ALLOCATION.ORDERLINE
        LEFT JOIN (
                SELECT
                    *
                FROM
                    ALLOCATION ALLOCATION2
                WHERE
                    ALLOCATION2.DETAILTYPE = '0'
            ) ALLOCATION2 ON
            ALLOCATION.CODE = ALLOCATION2.CODE
            AND ALLOCATION.DECOSUBCODE01 = ALLOCATION2.DECOSUBCODE01
            AND ALLOCATION.DECOSUBCODE02 = ALLOCATION2.DECOSUBCODE02
            AND ALLOCATION.DECOSUBCODE03 = ALLOCATION2.DECOSUBCODE03
            AND ALLOCATION.DECOSUBCODE04 = ALLOCATION2.DECOSUBCODE04
            AND ALLOCATION.DECOSUBCODE05 = ALLOCATION2.DECOSUBCODE05
            AND ALLOCATION.DECOSUBCODE06 = ALLOCATION2.DECOSUBCODE06
            AND ALLOCATION.DECOSUBCODE07 = ALLOCATION2.DECOSUBCODE07
            AND ALLOCATION.DECOSUBCODE08 = ALLOCATION2.DECOSUBCODE08
        LEFT JOIN ITXVIEW_GRAMASI_EXIM ITXVIEW_GRAMASI_EXIM ON
            s2.SUBCODE01 = ITXVIEW_GRAMASI_EXIM.SUBCODE01
            AND 
	    s2.SUBCODE02 = ITXVIEW_GRAMASI_EXIM.SUBCODE02
            AND 
	    s2.SUBCODE03 = ITXVIEW_GRAMASI_EXIM.SUBCODE03
            AND 
	    s2.SUBCODE04 = ITXVIEW_GRAMASI_EXIM.SUBCODE04
            AND 
	    s2.SUBCODE05 = ITXVIEW_GRAMASI_EXIM.SUBCODE05
            AND 
	    s2.SUBCODE06 = ITXVIEW_GRAMASI_EXIM.SUBCODE06
            AND 
	    s2.SUBCODE07 = ITXVIEW_GRAMASI_EXIM.SUBCODE07
            AND
	    s2.SUBCODE08 = ITXVIEW_GRAMASI_EXIM.SUBCODE08
        WHERE
            ALLOCATION2.ORIGINTRNTRANSACTIONNUMBER IS NULL
    );


-- DB2ADMIN.ITXVIEW_SUB_DETAILCOMMERCIALINV_EXIM source

CREATE VIEW ITXVIEW_SUB_DETAILCOMMERCIALINV_EXIM AS
SELECT
    SD.PROVISIONALCODE,
    SDL.PRICE,
    SDL.USERPRIMARYQUANTITY,
    SDL.USERSECONDARYQUANTITY,
    SDL.ORDERLINE
FROM
    SALESDOCUMENT SD
LEFT JOIN SALESDOCUMENTLINE SDL ON
    SD.PROVISIONALCODE = SDL.SALESDOCUMENTPROVISIONALCODE
    -- WHERE SD.PROVISIONALCODE = 'ESP2200489';


-- DB2ADMIN.ITXVIEW_SUB_EXIM_COLOR source

CREATE VIEW ITXVIEW_SUB_EXIM_COLOR AS
SELECT
    DISTINCT
    --	    ITXVIEW_SUBPACKINGLIST_EXIM.CODE,
    ITXVIEW_SUBPACKINGLIST_EXIM.LOTCODE,
    ITXVIEW_SUBPACKINGLIST_EXIM.PROVISIONALCODE,
    ITXVIEW_SUBPACKINGLIST_EXIM.DECOSUBCODE02,
    ITXVIEW_SUBPACKINGLIST_EXIM.DECOSUBCODE03,
    ITXVIEW_SUBPACKINGLIST_EXIM.EXTERNALREFERENCE,
    ITXVIEW_SUBPACKINGLIST_EXIM.EXTERNALITEM,
    CASE
        WHEN ITXVIEW_SUBPACKINGLIST_EXIM.EXTERNALITEM <> '' THEN ITXVIEW_SUBPACKINGLIST_EXIM.EXTERNALITEM
        ELSE trim(ITXVIEW_SUBPACKINGLIST_EXIM.DECOSUBCODE02) || ' ' || ITXVIEW_SUBPACKINGLIST_EXIM.DECOSUBCODE03
    END AS item_no,
    ITXVIEWCOLOR.WARNA
FROM
    ITXVIEW_SUBPACKINGLIST_EXIM2 ITXVIEW_SUBPACKINGLIST_EXIM
LEFT JOIN ITXVIEWCOLOR ITXVIEWCOLOR ON
    ITXVIEW_SUBPACKINGLIST_EXIM.DECOSUBCODE01 = ITXVIEWCOLOR.SUBCODE01
    AND ITXVIEW_SUBPACKINGLIST_EXIM.DECOSUBCODE02 = ITXVIEWCOLOR.SUBCODE02
    AND ITXVIEW_SUBPACKINGLIST_EXIM.DECOSUBCODE03 = ITXVIEWCOLOR.SUBCODE03
    AND ITXVIEW_SUBPACKINGLIST_EXIM.DECOSUBCODE04 = ITXVIEWCOLOR.SUBCODE04
    AND ITXVIEW_SUBPACKINGLIST_EXIM.DECOSUBCODE05 = ITXVIEWCOLOR.SUBCODE05
    AND ITXVIEW_SUBPACKINGLIST_EXIM.DECOSUBCODE06 = ITXVIEWCOLOR.SUBCODE06
    AND ITXVIEW_SUBPACKINGLIST_EXIM.DECOSUBCODE07 = ITXVIEWCOLOR.SUBCODE07
    AND ITXVIEW_SUBPACKINGLIST_EXIM.DECOSUBCODE08 = ITXVIEWCOLOR.SUBCODE08
    --WHERE
    --	ITXVIEW_SUBPACKINGLIST_EXIM.PROVISIONALCODE = 'SRE2400125';


-- DB2ADMIN.ITXVIEW_SUB_EXIM_COLOR2 source

CREATE VIEW ITXVIEW_SUB_EXIM_COLOR2 AS
SELECT
    CODE,
    PROVISIONALCODE,
    LOTCODE,
    DECOSUBCODE02,
    DECOSUBCODE03,
    item_no,
    WARNA
FROM
    (
        SELECT
            ITXVIEW_DETAIL_EXIM.CODE AS CODE,
            ITXVIEW_DETAIL_EXIM.PROVISIONALCODE AS PROVISIONALCODE,
            ITXVIEW_DETAIL_EXIM.LOTCODE AS LOTCODE,
            ITXVIEW_DETAIL_EXIM.DECOSUBCODE01 AS DECOSUBCODE01,
            ITXVIEW_DETAIL_EXIM.DECOSUBCODE02 AS DECOSUBCODE02,
            ITXVIEW_DETAIL_EXIM.DECOSUBCODE03 AS DECOSUBCODE03,
            ITXVIEW_DETAIL_EXIM.DECOSUBCODE04 AS DECOSUBCODE04,
            CASE
                WHEN ITXVIEW_DETAIL_EXIM.EXTERNALITEM <> '' THEN ITXVIEW_DETAIL_EXIM.EXTERNALITEM
                ELSE trim(ITXVIEW_DETAIL_EXIM.DECOSUBCODE02) || ' ' || ITXVIEW_DETAIL_EXIM.DECOSUBCODE03
            END AS item_no,
            ITXVIEWCOLOR.WARNA
        FROM
            ITXVIEW_DETAIL_EXIM ITXVIEW_DETAIL_EXIM
        LEFT JOIN ITXVIEWCOLOR ITXVIEWCOLOR ON
            ITXVIEW_DETAIL_EXIM.DECOSUBCODE01 = ITXVIEWCOLOR.SUBCODE01
            AND ITXVIEW_DETAIL_EXIM.DECOSUBCODE02 = ITXVIEWCOLOR.SUBCODE02
            AND ITXVIEW_DETAIL_EXIM.DECOSUBCODE03 = ITXVIEWCOLOR.SUBCODE03
            AND ITXVIEW_DETAIL_EXIM.DECOSUBCODE04 = ITXVIEWCOLOR.SUBCODE04
            AND ITXVIEW_DETAIL_EXIM.DECOSUBCODE05 = ITXVIEWCOLOR.SUBCODE05
            AND ITXVIEW_DETAIL_EXIM.DECOSUBCODE06 = ITXVIEWCOLOR.SUBCODE06
            AND ITXVIEW_DETAIL_EXIM.DECOSUBCODE07 = ITXVIEWCOLOR.SUBCODE07
            AND ITXVIEW_DETAIL_EXIM.DECOSUBCODE08 = ITXVIEWCOLOR.SUBCODE08
        GROUP BY
            ITXVIEW_DETAIL_EXIM.CODE,
            ITXVIEW_DETAIL_EXIM.PROVISIONALCODE,
            ITXVIEW_DETAIL_EXIM.EXTERNALREFERENCE,
            ITXVIEW_DETAIL_EXIM.EXTERNALITEM,
            ITXVIEW_DETAIL_EXIM.LOTCODE,
            ITXVIEW_DETAIL_EXIM.DECOSUBCODE01,
            ITXVIEW_DETAIL_EXIM.DECOSUBCODE02,
            ITXVIEW_DETAIL_EXIM.DECOSUBCODE03,
            ITXVIEW_DETAIL_EXIM.DECOSUBCODE04,
            ITXVIEWCOLOR.WARNA
    );


-- DB2ADMIN.ITXVIEW_SUB_FOC_INVOICE source

CREATE VIEW ITXVIEW_SUB_FOC_INVOICE AS
SELECT
    code_allocation,
    Invoice,
    no_sj,
    kode_bep,
    id_bep,
    nama_bep,
    kode_cus,
    nama_cus,
    payment_terms,
    issue_date,
    tgl_inv,
    tanggal_inv,
    no_order,
    jenis_order,
    no_po,
    FAKTUR_PAJAK,
    desc_kain,
    fabric_type,
    article_group,
    kode_variant,
    CASE
        WHEN jenis_order = 'EXPORT'
        AND id_bep <> 989 THEN ''
        WHEN jenis_order = 'SAMPLE'
        AND id_bep <> 888
        OR kode_cus = 'BIHQSS' THEN ''
        WHEN jenis_order = 'REPLCEXP'
        AND id_bep <> 888 THEN ''
        ELSE kode_jk
    END AS kode_jk,
    jenis_kain,
    kain,
    hs_code,
    unit,
    curr,
    WARNA,
    berat,
    berat_lain,
    rate,
    price_usd,
    price_idr,
    totaL_usd,
    total_idr
FROM
    (
        SELECT
            ITXVIEW_ALLOCATION_SURATJALAN_PPC.CODE AS code_allocation,
            trim(PLANTINVOICE.CODE) AS Invoice,
            trim(SALESORDER.FNCORDPRNCUSTOMERSUPPLIERCODE) AS kode_bep,
            trim(BUSINESSPARTNER.NUMBERID) AS id_bep,
            BUSINESSPARTNER.LEGALNAME1 AS nama_bep,
            CASE
                WHEN ADDRESS.CODE IS NULL THEN 'Warning! Kolom Address Code Sales Order Kosong. USER: ' || TRIM(SALESORDER.CREATIONUSER)
                ELSE ADDRESS.CODE
            END AS kode_cus,
            CASE
                WHEN trim(ADDRESS.ADDRESSEE) IS NULL THEN 'Warning! Kolom Address Code Sales Order Kosong. USER: ' || TRIM(SALESORDER.CREATIONUSER)
                ELSE trim(ADDRESS.ADDRESSEE)
            END AS nama_cus,
            CASE
                WHEN PAYMENTMETHODIE.NOOFDAYS = 0 THEN trim(PAYMENTMETHOD.LONGDESCRIPTION)
                ELSE trim(PAYMENTMETHODIE.NOOFDAYS)
            END AS payment_terms,
            ALLOCATION.ALLOCATIONDATE AS tgl_inv,
            SALESDOCUMENT2.GOODSISSUEDATE AS issue_date,
            CASE
                WHEN trim(ALLOCATION.ALLOCATIONDATE) <= DATE('2022-08-15') THEN CASE
                    WHEN trim(SALESDOCUMENT2.GOODSISSUEDATE) IS NULL THEN trim(ALLOCATION.ALLOCATIONDATE)
                    ELSE trim(SALESDOCUMENT2.GOODSISSUEDATE)
                END
                ELSE trim(SALESDOCUMENT2.GOODSISSUEDATE)
            END AS tanggal_inv,
            trim(SALESDOCUMENTLINE.PREVIOUSCODE) AS NO_SJ,
            trim(PLANTINVOICE.CONTRACTNOCODE) AS NO_ORDER,
            trim(SALESORDER.COUNTERCODE) AS jenis_order,
            CASE
                WHEN SALESDOCUMENTLINE.EXTERNALREFERENCE IS NULL THEN CASE
                    WHEN SALESDOCUMENT.ORDERPARTNERBRANDCODE IS NULL THEN SALESDOCUMENTLINE.EXTERNALREFERENCE || '()'
                    ELSE trim(SALESDOCUMENTLINE.EXTERNALREFERENCE) || ' (' || trim(SALESDOCUMENT.ORDERPARTNERBRANDCODE) || ')'
                END
                ELSE CASE
                    WHEN SALESDOCUMENT.ORDERPARTNERBRANDCODE IS NULL THEN SALESDOCUMENTLINE.EXTERNALREFERENCE || '()'
                    ELSE trim(SALESDOCUMENTLINE.EXTERNALREFERENCE) || ' (' || trim(SALESDOCUMENT.ORDERPARTNERBRANDCODE) || ')'
                END
            END AS NO_PO,
            CASE
                WHEN PLANTINVOICE.BLNUMBER IS NULL THEN 'Warning! Kolom faktur pajak Invoice Kosong. USER : ' || TRIM(PLANTINVOICE.CREATIONUSER)
                ELSE PLANTINVOICE.BLNUMBER
            END AS FAKTUR_PAJAK,
            CASE
                WHEN trim(SALESORDER.TEMPLATECODE) LIKE '%CWD%' THEN trim(SALESORDER.DESCRIPTION)
                ELSE '-'
            END AS DESC_KAIN,
            SALESDOCUMENTLINE.SUBCODE02 AS article_group,
            SALESDOCUMENTLINE.SUBCODE01 AS fabric_type,
            SALESDOCUMENTLINE.SUBCODE04 AS kode_variant,
            JK.SUBCODE02 AS kode_jk1,
            JK.SUBCODE03 AS kode_jk2,
            CASE
                WHEN trim(JK.LONGDESCRIPTION) <> '' THEN JK.LONGDESCRIPTION
                ELSE JK.SUBCODE02 || JK.SUBCODE03
            END AS kode_jk,
            CASE
                WHEN SALESORDER.COUNTERCODE = 'EXPORT'
                AND BUSINESSPARTNER.NUMBERID <> 989 THEN 'Kain Rajut Celup'
                WHEN SALESORDER.COUNTERCODE = 'SAMPLE'
                AND BUSINESSPARTNER.NUMBERID <> 888
                OR ADDRESS.CODE = 'BIHQSS' THEN 'Kain Rajut Celup'
                WHEN SALESORDER.COUNTERCODE = 'REPLCEXP'
                AND BUSINESSPARTNER.NUMBERID <> 888 THEN 'Kain Rajut Celup'
                ELSE trim(SALESDOCUMENTLINE.ITEMDESCRIPTION)
            END AS jenis_kain,
            PRODUCT.LONGDESCRIPTION AS kain,
            trim(JK.EXTERNALREFERENCE) AS hs_code,
            trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) AS unit,
            PLANTINVOICE.ORDERCURRENCYCODE AS curr,
            ITXVIEWCOLOR.WARNA,
            (
                round( ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASEPRIMARYQUANTITY, 2 )
            ) AS BERAT,
            CASE
                WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'kg' THEN SUM(round(ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASEPRIMARYQUANTITY, 2))
                WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'yd' THEN SUM(round(ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASESECONDARYQUANTITY, 2))
                WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'm' THEN SUM(round(ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASESECONDARYQUANTITY * 0.9144, 2))
                WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'un' THEN CASE
                    WHEN trim(SALESDOCUMENTLINE.ITEMTYPEAFICODE) = 'CAP' THEN SUM(round(ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASEPRIMARYQUANTITY, 2))
                    ELSE SUM(round(ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASESECONDARYQUANTITY, 2))
                END
            END AS BERAT_LAIN,
            PLANTINVOICE.EXCHANGERATEOFCONTRACT AS rate,
            CASE
                WHEN PLANTINVOICE.ORDERCURRENCYCODE = 'USD' THEN SALESDOCUMENTLINE.price
                ELSE 0
            END AS PRICE_USD,
            CASE
                WHEN PLANTINVOICE.ORDERCURRENCYCODE = 'IDR' THEN SALESDOCUMENTLINE.price
                ELSE floor( SALESDOCUMENTLINE.price * PLANTINVOICE.EXCHANGERATEOFCONTRACT )
            END AS PRICE_IDR,
            CASE
                WHEN trim(PLANTINVOICE.ORDERCURRENCYCODE) = 'USD' THEN CASE
                    WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'kg' THEN round( SUM( round( ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASEPRIMARYQUANTITY, 2 )) * round( SALESDOCUMENTLINE.price, 2 ), 2 )
                    WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'yd' THEN round( SUM( round( ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASESECONDARYQUANTITY, 2 )) * round( SALESDOCUMENTLINE.price, 2 ), 2 )
                    WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'm' THEN round( SUM( round( ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASESECONDARYQUANTITY * 0.9144, 2 )) * round( SALESDOCUMENTLINE.price, 2 ), 2 )
                    WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'un' THEN CASE
                        WHEN trim(SALESDOCUMENTLINE.ITEMTYPEAFICODE) = 'CAP' THEN round( SUM( round( ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASEPRIMARYQUANTITY, 2 )) * round( SALESDOCUMENTLINE.price, 2 ), 2 )
                        ELSE
                	round( SUM( round( ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASESECONDARYQUANTITY, 2 )) * round( SALESDOCUMENTLINE.price, 2 ), 2 )
                    END
                END
                ELSE 0
            END AS TOTAL_USD,
            CASE
                WHEN trim(PLANTINVOICE.ORDERCURRENCYCODE) = 'IDR' THEN CASE
                    WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'kg' THEN floor(SUM(round( ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASEPRIMARYQUANTITY, 2 )) * round( SALESDOCUMENTLINE.price, 2 ))
                    WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'yd' THEN floor(SUM(round( ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASESECONDARYQUANTITY, 2 )) * round( SALESDOCUMENTLINE.price, 2 ))
                    WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'm' THEN floor(SUM(round( ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASESECONDARYQUANTITY * 0.9144, 2 )) * round( SALESDOCUMENTLINE.price, 2 ))
                    WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'un' THEN CASE
                        WHEN trim(SALESDOCUMENTLINE.ITEMTYPEAFICODE) = 'CAP' THEN floor(SUM(round( ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASEPRIMARYQUANTITY, 2 )) * round( SALESDOCUMENTLINE.price, 2 ))
                        ELSE
                	floor(SUM(round( ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASESECONDARYQUANTITY, 2 )) * round( SALESDOCUMENTLINE.price, 2 ))
                    END
                END
                ELSE CASE
                    WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'kg' THEN floor(round(SUM(round(ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASEPRIMARYQUANTITY, 2 )) * round( SALESDOCUMENTLINE.price, 2 ), 2 ) * PLANTINVOICE.EXCHANGERATEOFCONTRACT)
                    WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'yd' THEN floor(round(SUM(round(ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASESECONDARYQUANTITY, 2 )) * round( SALESDOCUMENTLINE.price, 2 ), 2 ) * PLANTINVOICE.EXCHANGERATEOFCONTRACT)
                    WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'm' THEN floor(round(SUM(round(ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASESECONDARYQUANTITY * 0.9144, 2 )) * round( SALESDOCUMENTLINE.price, 2 ), 2 ) * PLANTINVOICE.EXCHANGERATEOFCONTRACT)
                    WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'un' THEN CASE
                        WHEN trim(SALESDOCUMENTLINE.ITEMTYPEAFICODE) = 'CAP' THEN floor(round(SUM(round(ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASEPRIMARYQUANTITY, 2 )) * round( SALESDOCUMENTLINE.price, 2 ), 2 ) * PLANTINVOICE.EXCHANGERATEOFCONTRACT)
                        ELSE
                	floor(round(SUM(round(ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASESECONDARYQUANTITY, 2 )) * round( SALESDOCUMENTLINE.price, 2 ), 2 ) * PLANTINVOICE.EXCHANGERATEOFCONTRACT)
                    END
                END
            END AS TOTAL_IDR
        FROM
            PLANTINVOICE PLANTINVOICE
        LEFT JOIN SALESORDER SALESORDER ON
            PLANTINVOICE.CONTRACTNOCODE = SALESORDER.CODE
        LEFT JOIN SALESDOCUMENT SALESDOCUMENT ON
            PLANTINVOICE.CODE = SALESDOCUMENT.PROVISIONALCODE
            --        AND PLANTINVOICE.CODE = SALESDOCUMENT.DEFINITIVECODE
        LEFT JOIN PAYMENTMETHOD PAYMENTMETHOD ON
            PLANTINVOICE.TERMSOFPAYMENTCODE = PAYMENTMETHOD.CODE
        LEFT JOIN PAYMENTMETHODIE PAYMENTMETHODIE ON
            PLANTINVOICE.TERMSOFPAYMENTCODE = PAYMENTMETHODIE.CODE
        LEFT JOIN ADDRESS ADDRESS ON
            ADDRESS.UNIQUEID = SALESORDER.PAYMENTCUSTOMERUNIQUEID
            AND ADDRESS.CODE = SALESORDER.PAYMENTCUSTOMERCODE
        LEFT JOIN ORDERPARTNER ORDERPARTNER ON
            ORDERPARTNER.CUSTOMERSUPPLIERCODE = PLANTINVOICE.BUYERIFOTCCUSTOMERSUPPLIERCODE
        LEFT JOIN BUSINESSPARTNER BUSINESSPARTNER ON
            BUSINESSPARTNER.NUMBERID = ORDERPARTNER.ORDERBUSINESSPARTNERNUMBERID
        LEFT JOIN SALESDOCUMENTLINE SALESDOCUMENTLINE ON
            SALESDOCUMENTLINE.SALESDOCUMENTPROVISIONALCODE = SALESDOCUMENT.PROVISIONALCODE
        LEFT JOIN SALESDOCUMENT SALESDOCUMENT2 ON
            SALESDOCUMENT2.PROVISIONALCODE = SALESDOCUMENTLINE.PREVIOUSCODE
        LEFT JOIN PLANTINVOICELINE PLANTINVOICELINE ON
            PLANTINVOICELINE.PLANTINVOICECODE = SALESDOCUMENTLINE.SALESDOCUMENTPROVISIONALCODE
            AND PLANTINVOICELINE.INVOICELINENO = CASE
                WHEN LENGTH(RTRIM(PREVIOUSORDERLINE)) = 2 THEN SUBSTR(SALESDOCUMENTLINE.PREVIOUSORDERLINE, 1, 1)
                WHEN LENGTH(RTRIM(PREVIOUSORDERLINE)) = 3 THEN SUBSTR(SALESDOCUMENTLINE.PREVIOUSORDERLINE, 1, 2)
                WHEN LENGTH(RTRIM(PREVIOUSORDERLINE)) = 4 THEN SUBSTR(SALESDOCUMENTLINE.PREVIOUSORDERLINE, 1, 3)
            END
        LEFT JOIN ITXVIEW_SUB_INV_ITEMJENISKAIN JK ON
            SALESDOCUMENT.PROVISIONALCODE = JK.PROVISIONALCODE
            AND SALESDOCUMENTLINE.SUBCODE02 = JK.SUBCODE02
            AND SALESDOCUMENTLINE.SUBCODE03 = JK.SUBCODE03
            AND SALESDOCUMENTLINE.SUBCODE04 = JK.SUBCODE04
            AND SALESDOCUMENTLINE.SUBCODE05 = JK.SUBCODE05
            AND SALESDOCUMENTLINE.SUBCODE06 = JK.SUBCODE06
        LEFT JOIN SALESORDERLINE SALESORDERLINE ON
            SALESORDERLINE.PROJECTCODE = SALESORDER.PROJECTCODE
            AND SALESORDERLINE.ORDERLINE = SALESDOCUMENTLINE.DLVSALESORDERLINEORDERLINE
        LEFT JOIN (
                SELECT
                    *
                FROM
                    ALLOCATION ALLOCATION
                WHERE
                    ALLOCATION.DETAILTYPE = '1'
                    AND ALLOCATION.ORIGINTRNTRANSACTIONNUMBER IS NULL
                    AND ALLOCATION.DESTINATIONTYPE = '7'
            ) ALLOCATION ON
            SALESDOCUMENTLINE.SUBCODE01 = ALLOCATION.DECOSUBCODE01
            AND SALESDOCUMENTLINE.SUBCODE02 = ALLOCATION.DECOSUBCODE02
            AND SALESDOCUMENTLINE.SUBCODE03 = ALLOCATION.DECOSUBCODE03
            AND SALESDOCUMENTLINE.SUBCODE04 = ALLOCATION.DECOSUBCODE04
            AND SALESDOCUMENTLINE.SUBCODE05 = ALLOCATION.DECOSUBCODE05
            AND SALESDOCUMENTLINE.SUBCODE06 = ALLOCATION.DECOSUBCODE06
            AND SALESDOCUMENTLINE.SUBCODE07 = ALLOCATION.DECOSUBCODE07
            AND SALESDOCUMENTLINE.PROJECTCODE = ALLOCATION.PROJECTCODE
            AND SALESDOCUMENTLINE.PREVIOUSCODE = ALLOCATION.ORDERCODE
            AND SALESDOCUMENTLINE.PREVIOUSORDERLINE = ALLOCATION.ORDERLINE
        LEFT JOIN ITXVIEW_ALLOCATION_SURATJALAN_PPC ITXVIEW_ALLOCATION_SURATJALAN_PPC ON
            ITXVIEW_ALLOCATION_SURATJALAN_PPC.CODE = ALLOCATION.CODE
        LEFT JOIN DESIGN DESIGN ON
            DESIGN.SUBCODE01 = SALESDOCUMENTLINE.SUBCODE07
        LEFT JOIN DESIGNCOMPONENT DESIGNCOMPONENT ON
            DESIGNCOMPONENT.VARIANTCODE = SALESDOCUMENTLINE.SUBCODE08
            AND DESIGNCOMPONENT.DESIGNNUMBERID = DESIGN.NUMBERID
        LEFT JOIN (
                SELECT
                    ITXVIEWCOLOR.ITEMTYPECODE,
                    ITXVIEWCOLOR.SUBCODE01,
                    ITXVIEWCOLOR.SUBCODE02,
                    ITXVIEWCOLOR.SUBCODE03,
                    ITXVIEWCOLOR.SUBCODE04,
                    ITXVIEWCOLOR.SUBCODE05,
                    ITXVIEWCOLOR.SUBCODE06,
                    ITXVIEWCOLOR.SUBCODE07,
                    ITXVIEWCOLOR.SUBCODE08,
                    ITXVIEWCOLOR.WARNA
                FROM
                    ITXVIEWCOLOR ITXVIEWCOLOR
            ) ITXVIEWCOLOR ON
            ITXVIEWCOLOR.ITEMTYPECODE = SALESDOCUMENTLINE.ITEMTYPEAFICODE
            AND ITXVIEWCOLOR.SUBCODE01 = SALESDOCUMENTLINE.SUBCODE01
            AND ITXVIEWCOLOR.SUBCODE02 = SALESDOCUMENTLINE.SUBCODE02
            AND ITXVIEWCOLOR.SUBCODE03 = SALESDOCUMENTLINE.SUBCODE03
            AND ITXVIEWCOLOR.SUBCODE04 = SALESDOCUMENTLINE.SUBCODE04
            AND ITXVIEWCOLOR.SUBCODE05 = SALESDOCUMENTLINE.SUBCODE05
            AND ITXVIEWCOLOR.SUBCODE06 = SALESDOCUMENTLINE.SUBCODE06
            AND ITXVIEWCOLOR.SUBCODE07 = SALESDOCUMENTLINE.SUBCODE07
            AND ITXVIEWCOLOR.SUBCODE08 = SALESDOCUMENTLINE.SUBCODE08
        LEFT JOIN PRODUCT PRODUCT ON
            SALESDOCUMENTLINE.ITEMTYPEAFICODE = PRODUCT.ITEMTYPECODE
            AND SALESDOCUMENTLINE.SUBCODE01 = PRODUCT.SUBCODE01
            AND SALESDOCUMENTLINE.SUBCODE02 = PRODUCT.SUBCODE02
            AND SALESDOCUMENTLINE.SUBCODE03 = PRODUCT.SUBCODE03
            AND SALESDOCUMENTLINE.SUBCODE04 = PRODUCT.SUBCODE04
            AND SALESDOCUMENTLINE.SUBCODE05 = PRODUCT.SUBCODE05
            AND SALESDOCUMENTLINE.SUBCODE06 = PRODUCT.SUBCODE06
            AND SALESDOCUMENTLINE.SUBCODE07 = PRODUCT.SUBCODE07
            AND SALESDOCUMENTLINE.SUBCODE08 = PRODUCT.SUBCODE08
            --        WHERE PLANTINVOICE.CODE = 'EX23060005'
        GROUP BY
            ITXVIEW_ALLOCATION_SURATJALAN_PPC.CODE,
            ALLOCATION.ALLOCATIONDATE,
            SALESDOCUMENT2.GOODSISSUEDATE,
            BUSINESSPARTNER.LEGALNAME1,
            SALESORDER.FNCORDPRNCUSTOMERSUPPLIERCODE,
            ADDRESS.CODE,
            PLANTINVOICE.CODE,
            SALESDOCUMENTLINE.PREVIOUSCODE,
            SALESORDER.CREATIONUSER,
            SALESDOCUMENTLINE.ITEMDESCRIPTION,
            ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASEPRIMARYQUANTITY,
            PRODUCT.LONGDESCRIPTION,
            PRODUCT.SHORTDESCRIPTION,
            SALESDOCUMENTLINE.PREVIOUSCODE,
            SALESORDER.EXTERNALREFERENCE,
            SALESDOCUMENTLINE.EXTERNALREFERENCE,
            SALESDOCUMENTLINE.INTERNALREFERENCEDATE,
            SALESDOCUMENTLINE.EXTERNALREFERENCE,
            SALESDOCUMENT.EXTERNALREFERENCE,
            SALESORDER.ORDERPARTNERBRANDCODE,
            SALESDOCUMENT.ORDERPARTNERBRANDCODE,
            PLANTINVOICE.INVOICEDATE,
            PAYMENTMETHOD.LONGDESCRIPTION,
            PAYMENTMETHODIE.NOOFDAYS,
            PLANTINVOICE.CONTRACTNOCODE,
            PLANTINVOICE.CONSIGNEECUSTOMERSUPPLIERCODE,
            ADDRESS.ADDRESSEE,
            ADDRESS.TAXREGISTRATIONNUMBER,
            PLANTINVOICELINE.TAXTEMPLATECODE,
            PLANTINVOICE.ORDERCURRENCYCODE,
            PLANTINVOICE.EXCHANGERATEOFCONTRACT,
            SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE,
            PLANTINVOICE.BLNUMBER,
            SALESDOCUMENTLINE.ITEMTYPEAFICODE,
            SALESDOCUMENTLINE.price,
            SALESORDER.TEMPLATECODE,
            SALESORDER.DESCRIPTION,
            SALESDOCUMENTLINE.SUBCODE01,
            SALESDOCUMENTLINE.SUBCODE02,
            SALESDOCUMENTLINE.SUBCODE03,
            SALESDOCUMENTLINE.SUBCODE04,
            SALESDOCUMENTLINE.SUBCODE05,
            SALESDOCUMENTLINE.SUBCODE06,
            SALESDOCUMENTLINE.SUBCODE07,
            SALESDOCUMENTLINE.SUBCODE08,
            DESIGNCOMPONENT.SHORTDESCRIPTION,
            ITXVIEWCOLOR.WARNA,
            JK.SUBCODE02,
            JK.SUBCODE03,
            JK.LONGDESCRIPTION,
            JK.EXTERNALREFERENCE,
            SALESORDER.COUNTERCODE,
            BUSINESSPARTNER.NUMBERID,
            PLANTINVOICE.CREATIONUSER
    );


-- DB2ADMIN.ITXVIEW_SUB_FOC_INVOICE2 source

CREATE VIEW ITXVIEW_SUB_FOC_INVOICE2 AS
SELECT
    code_allocation,
    Invoice,
    no_sj,
    kode_bep,
    id_bep,
    nama_bep,
    kode_cus,
    nama_cus,
    payment_terms,
    issue_date,
    tgl_inv,
    tanggal_inv,
    no_order,
    jenis_order,
    no_po,
    FAKTUR_PAJAK,
    desc_kain,
    fabric_type,
    article_group,
    kode_variant,
    CASE
        WHEN jenis_order = 'EXPORT'
        AND id_bep <> 989 THEN ''
        WHEN jenis_order = 'SAMPLE'
        AND id_bep <> 888
        OR kode_cus = 'BIHQSS' THEN ''
        WHEN jenis_order = 'REPLCEXP'
        AND id_bep <> 888 THEN ''
        ELSE kode_jk
    END AS kode_jk,
    jenis_kain,
    kain,
    hs_code,
    unit,
    curr,
    WARNA,
    berat,
    berat_lain,
    rate,
    price_usd,
    price_idr,
    totaL_usd,
    total_idr
FROM
    (
        SELECT
            ITXVIEW_ALLOCATION_SURATJALAN_PPC.CODE AS code_allocation,
            trim(PLANTINVOICE.CODE) AS Invoice,
            trim(SALESORDER.FNCORDPRNCUSTOMERSUPPLIERCODE) AS kode_bep,
            trim(BUSINESSPARTNER.NUMBERID) AS id_bep,
            BUSINESSPARTNER.LEGALNAME1 AS nama_bep,
            CASE
                WHEN ADDRESS.CODE IS NULL THEN 'Warning! Kolom Address Code Sales Order Kosong. USER: ' || TRIM(SALESORDER.CREATIONUSER)
                ELSE ADDRESS.CODE
            END AS kode_cus,
            CASE
                WHEN trim(ADDRESS.ADDRESSEE) IS NULL THEN 'Warning! Kolom Address Code Sales Order Kosong. USER: ' || TRIM(SALESORDER.CREATIONUSER)
                ELSE trim(ADDRESS.ADDRESSEE)
            END AS nama_cus,
            CASE
                WHEN PAYMENTMETHODIE.NOOFDAYS = 0 THEN trim(PAYMENTMETHOD.LONGDESCRIPTION)
                ELSE trim(PAYMENTMETHODIE.NOOFDAYS)
            END AS payment_terms,
            ALLOCATION.ALLOCATIONDATE AS tgl_inv,
            SALESDOCUMENT2.GOODSISSUEDATE AS issue_date,
            CASE
                WHEN trim(ALLOCATION.ALLOCATIONDATE) <= DATE('2022-08-15') THEN CASE
                    WHEN trim(SALESDOCUMENT2.GOODSISSUEDATE) IS NULL THEN trim(ALLOCATION.ALLOCATIONDATE)
                    ELSE trim(SALESDOCUMENT2.GOODSISSUEDATE)
                END
                ELSE trim(SALESDOCUMENT2.GOODSISSUEDATE)
            END AS tanggal_inv,
            trim(SALESDOCUMENTLINE.PREVIOUSCODE) AS NO_SJ,
            trim(PLANTINVOICE.CONTRACTNOCODE) AS NO_ORDER,
            trim(SALESORDER.COUNTERCODE) AS jenis_order,
            CASE
                WHEN SALESDOCUMENTLINE.EXTERNALREFERENCE IS NULL THEN CASE
                    WHEN SALESDOCUMENT.ORDERPARTNERBRANDCODE IS NULL THEN SALESDOCUMENTLINE.EXTERNALREFERENCE || '()'
                    ELSE trim(SALESDOCUMENTLINE.EXTERNALREFERENCE) || ' (' || trim(SALESDOCUMENT.ORDERPARTNERBRANDCODE) || ')'
                END
                ELSE CASE
                    WHEN SALESDOCUMENT.ORDERPARTNERBRANDCODE IS NULL THEN SALESDOCUMENTLINE.EXTERNALREFERENCE || '()'
                    ELSE trim(SALESDOCUMENTLINE.EXTERNALREFERENCE) || ' (' || trim(SALESDOCUMENT.ORDERPARTNERBRANDCODE) || ')'
                END
            END AS NO_PO,
            CASE
                WHEN PLANTINVOICE.BLNUMBER IS NULL THEN 'Warning! Kolom faktur pajak Invoice Kosong. USER : ' || TRIM(PLANTINVOICE.CREATIONUSER)
                ELSE PLANTINVOICE.BLNUMBER
            END AS FAKTUR_PAJAK,
            CASE
                WHEN trim(SALESORDER.TEMPLATECODE) LIKE '%CWD%' THEN trim(SALESORDER.DESCRIPTION)
                ELSE '-'
            END AS DESC_KAIN,
            SALESDOCUMENTLINE.SUBCODE02 AS article_group,
            SALESDOCUMENTLINE.SUBCODE01 AS fabric_type,
            SALESDOCUMENTLINE.SUBCODE04 AS kode_variant,
            JK.SUBCODE02 AS kode_jk1,
            JK.SUBCODE03 AS kode_jk2,
            CASE
                WHEN trim(JK.LONGDESCRIPTION) <> '' THEN JK.LONGDESCRIPTION
                ELSE JK.SUBCODE02 || JK.SUBCODE03
            END AS kode_jk,
            CASE
                WHEN SALESORDER.COUNTERCODE = 'EXPORT'
                AND BUSINESSPARTNER.NUMBERID <> 989 THEN 'Kain Rajut Celup'
                WHEN SALESORDER.COUNTERCODE = 'SAMPLE'
                AND BUSINESSPARTNER.NUMBERID <> 888
                OR ADDRESS.CODE = 'BIHQSS' THEN 'Kain Rajut Celup'
                WHEN SALESORDER.COUNTERCODE = 'REPLCEXP'
                AND BUSINESSPARTNER.NUMBERID <> 888 THEN 'Kain Rajut Celup'
                ELSE trim(SALESDOCUMENTLINE.ITEMDESCRIPTION)
            END AS jenis_kain,
            PRODUCT.LONGDESCRIPTION AS kain,
            trim(JK.EXTERNALREFERENCE) AS hs_code,
            trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) AS unit,
            PLANTINVOICE.ORDERCURRENCYCODE AS curr,
            ITXVIEWCOLOR.WARNA,
            (
                round( ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASEPRIMARYQUANTITY, 2 )
            ) AS BERAT,
            CASE
                WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'kg' THEN SUM(round(ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASEPRIMARYQUANTITY, 2))
                WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'yd' THEN SUM(round(ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASESECONDARYQUANTITY, 2))
                WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'm' THEN SUM(round(ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASESECONDARYQUANTITY * 0.9144, 2))
                WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'un' THEN CASE
                    WHEN trim(SALESDOCUMENTLINE.ITEMTYPEAFICODE) = 'CAP' THEN SUM(round(ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASEPRIMARYQUANTITY, 2))
                    ELSE SUM(round(ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASESECONDARYQUANTITY, 2))
                END
            END AS BERAT_LAIN,
            PLANTINVOICE.EXCHANGERATEOFCONTRACT AS rate,
            CASE
                WHEN PLANTINVOICE.ORDERCURRENCYCODE = 'USD' THEN SALESDOCUMENTLINE.price
                ELSE 0
            END AS PRICE_USD,
            CASE
                WHEN PLANTINVOICE.ORDERCURRENCYCODE = 'IDR' THEN SALESDOCUMENTLINE.price
                ELSE floor( SALESDOCUMENTLINE.price * PLANTINVOICE.EXCHANGERATEOFCONTRACT )
            END AS PRICE_IDR,
            CASE
                WHEN trim(PLANTINVOICE.ORDERCURRENCYCODE) = 'USD' THEN CASE
                    WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'kg' THEN round( SUM( round( ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASEPRIMARYQUANTITY, 2 )) * round( SALESDOCUMENTLINE.price, 2 ), 2 )
                    WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'yd' THEN round( SUM( round( ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASESECONDARYQUANTITY, 2 )) * round( SALESDOCUMENTLINE.price, 2 ), 2 )
                    WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'm' THEN round( SUM( round( ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASESECONDARYQUANTITY * 0.9144, 2 )) * round( SALESDOCUMENTLINE.price, 2 ), 2 )
                    WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'un' THEN CASE
                        WHEN trim(SALESDOCUMENTLINE.ITEMTYPEAFICODE) = 'CAP' THEN round( SUM( round( ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASEPRIMARYQUANTITY, 2 )) * round( SALESDOCUMENTLINE.price, 2 ), 2 )
                        ELSE round( SUM( round( ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASESECONDARYQUANTITY, 2 )) * round( SALESDOCUMENTLINE.price, 2 ), 2 )
                    END
                END
                ELSE 0
            END AS TOTAL_USD,
            CASE
                WHEN trim(PLANTINVOICE.ORDERCURRENCYCODE) = 'IDR' THEN CASE
                    WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'kg' THEN floor(SUM(round( ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASEPRIMARYQUANTITY, 2 )) * round( SALESDOCUMENTLINE.price, 2 ))
                    WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'yd' THEN floor(SUM(round( ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASESECONDARYQUANTITY, 2 )) * round( SALESDOCUMENTLINE.price, 2 ))
                    WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'm' THEN floor(SUM(round( ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASESECONDARYQUANTITY * 0.9144, 2 )) * round( SALESDOCUMENTLINE.price, 2 ))
                    WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'un' THEN CASE
                        WHEN trim(SALESDOCUMENTLINE.ITEMTYPEAFICODE) = 'CAP' THEN floor(SUM(round( ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASEPRIMARYQUANTITY, 2 )) * round( SALESDOCUMENTLINE.price, 2 ))
                        ELSE floor(SUM(round( ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASESECONDARYQUANTITY, 2 )) * round( SALESDOCUMENTLINE.price, 2 ))
                    END
                END
                ELSE CASE
                    WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'kg' THEN floor(round(SUM(round(ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASEPRIMARYQUANTITY, 2 )) * round( SALESDOCUMENTLINE.price, 2 ), 2 ) * PLANTINVOICE.EXCHANGERATEOFCONTRACT)
                    WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'yd' THEN floor(round(SUM(round(ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASESECONDARYQUANTITY, 2 )) * round( SALESDOCUMENTLINE.price, 2 ), 2 ) * PLANTINVOICE.EXCHANGERATEOFCONTRACT)
                    WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'm' THEN floor(round(SUM(round(ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASESECONDARYQUANTITY * 0.9144, 2 )) * round( SALESDOCUMENTLINE.price, 2 ), 2 ) * PLANTINVOICE.EXCHANGERATEOFCONTRACT)
                    WHEN trim(SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE) = 'un' THEN CASE
                        WHEN trim(SALESDOCUMENTLINE.ITEMTYPEAFICODE) = 'CAP' THEN floor(round(SUM(round(ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASEPRIMARYQUANTITY, 2 )) * round( SALESDOCUMENTLINE.price, 2 ), 2 ) * PLANTINVOICE.EXCHANGERATEOFCONTRACT)
                        ELSE floor(round(SUM(round(ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASESECONDARYQUANTITY, 2 )) * round( SALESDOCUMENTLINE.price, 2 ), 2 ) * PLANTINVOICE.EXCHANGERATEOFCONTRACT)
                    END
                END
            END AS TOTAL_IDR
        FROM
            PLANTINVOICE PLANTINVOICE
        LEFT JOIN SALESORDER SALESORDER ON
            PLANTINVOICE.CONTRACTNOCODE = SALESORDER.CODE
        LEFT JOIN SALESDOCUMENT SALESDOCUMENT ON
            PLANTINVOICE.CODE = SALESDOCUMENT.PROVISIONALCODE
        LEFT JOIN PAYMENTMETHOD PAYMENTMETHOD ON
            PLANTINVOICE.TERMSOFPAYMENTCODE = PAYMENTMETHOD.CODE
        LEFT JOIN PAYMENTMETHODIE PAYMENTMETHODIE ON
            PLANTINVOICE.TERMSOFPAYMENTCODE = PAYMENTMETHODIE.CODE
        LEFT JOIN ADDRESS ADDRESS ON
            ADDRESS.UNIQUEID = SALESORDER.PAYMENTCUSTOMERUNIQUEID
            AND ADDRESS.CODE = SALESORDER.PAYMENTCUSTOMERCODE
        LEFT JOIN ORDERPARTNER ORDERPARTNER ON
            ORDERPARTNER.CUSTOMERSUPPLIERCODE = PLANTINVOICE.BUYERIFOTCCUSTOMERSUPPLIERCODE
        LEFT JOIN BUSINESSPARTNER BUSINESSPARTNER ON
            BUSINESSPARTNER.NUMBERID = ORDERPARTNER.ORDERBUSINESSPARTNERNUMBERID
        LEFT JOIN SALESDOCUMENTLINE SALESDOCUMENTLINE ON
            SALESDOCUMENTLINE.SALESDOCUMENTPROVISIONALCODE = SALESDOCUMENT.PROVISIONALCODE
        LEFT JOIN SALESDOCUMENT SALESDOCUMENT2 ON
            SALESDOCUMENT2.PROVISIONALCODE = SALESDOCUMENTLINE.PREVIOUSCODE
        LEFT JOIN PLANTINVOICELINE PLANTINVOICELINE ON
            PLANTINVOICELINE.PLANTINVOICECODE = SALESDOCUMENTLINE.SALESDOCUMENTPROVISIONALCODE
            AND PLANTINVOICELINE.INVOICELINENO = CASE
                WHEN LENGTH(RTRIM(PREVIOUSORDERLINE)) = 2 THEN SUBSTR(SALESDOCUMENTLINE.PREVIOUSORDERLINE, 1, 1)
                WHEN LENGTH(RTRIM(PREVIOUSORDERLINE)) = 3 THEN SUBSTR(SALESDOCUMENTLINE.PREVIOUSORDERLINE, 1, 2)
                WHEN LENGTH(RTRIM(PREVIOUSORDERLINE)) = 4 THEN SUBSTR(SALESDOCUMENTLINE.PREVIOUSORDERLINE, 1, 3)
            END
        LEFT JOIN ITXVIEW_SUB_INV_ITEMJENISKAIN JK ON
            SALESDOCUMENT.PROVISIONALCODE = JK.PROVISIONALCODE
            AND SALESDOCUMENTLINE.SUBCODE02 = JK.SUBCODE02
            AND SALESDOCUMENTLINE.SUBCODE03 = JK.SUBCODE03
            AND SALESDOCUMENTLINE.SUBCODE04 = JK.SUBCODE04
            AND SALESDOCUMENTLINE.SUBCODE05 = JK.SUBCODE05
            AND SALESDOCUMENTLINE.SUBCODE06 = JK.SUBCODE06
        LEFT JOIN SALESORDERLINE SALESORDERLINE ON
            SALESORDERLINE.SALESORDERCODE = SALESORDER.CODE
            AND SALESORDERLINE.ORDERLINE = SALESDOCUMENTLINE.DLVSALESORDERLINEORDERLINE
        LEFT JOIN (
                SELECT
                    *
                FROM
                    ALLOCATION ALLOCATION
                WHERE
                    ALLOCATION.DETAILTYPE = '1'
                    AND ALLOCATION.ORIGINTRNTRANSACTIONNUMBER IS NULL
                    AND ALLOCATION.DESTINATIONTYPE = '7'
            ) ALLOCATION ON
            SALESDOCUMENTLINE.SUBCODE01 = ALLOCATION.DECOSUBCODE01
            AND SALESDOCUMENTLINE.SUBCODE02 = ALLOCATION.DECOSUBCODE02
            AND SALESDOCUMENTLINE.SUBCODE03 = ALLOCATION.DECOSUBCODE03
            AND SALESDOCUMENTLINE.SUBCODE04 = ALLOCATION.DECOSUBCODE04
            AND SALESDOCUMENTLINE.SUBCODE05 = ALLOCATION.DECOSUBCODE05
            AND SALESDOCUMENTLINE.SUBCODE06 = ALLOCATION.DECOSUBCODE06
            AND SALESDOCUMENTLINE.SUBCODE07 = ALLOCATION.DECOSUBCODE07
            AND SALESDOCUMENTLINE.PREVIOUSCODE = ALLOCATION.ORDERCODE
            AND SALESDOCUMENTLINE.PREVIOUSORDERLINE = ALLOCATION.ORDERLINE
        LEFT JOIN ITXVIEW_ALLOCATION_SURATJALAN_PPC ITXVIEW_ALLOCATION_SURATJALAN_PPC ON
            ITXVIEW_ALLOCATION_SURATJALAN_PPC.CODE = ALLOCATION.CODE
        LEFT JOIN DESIGN DESIGN ON
            DESIGN.SUBCODE01 = SALESDOCUMENTLINE.SUBCODE07
        LEFT JOIN DESIGNCOMPONENT DESIGNCOMPONENT ON
            DESIGNCOMPONENT.VARIANTCODE = SALESDOCUMENTLINE.SUBCODE08
            AND DESIGNCOMPONENT.DESIGNNUMBERID = DESIGN.NUMBERID
        LEFT JOIN (
                SELECT
                    ITXVIEWCOLOR.ITEMTYPECODE,
                    ITXVIEWCOLOR.SUBCODE01,
                    ITXVIEWCOLOR.SUBCODE02,
                    ITXVIEWCOLOR.SUBCODE03,
                    ITXVIEWCOLOR.SUBCODE04,
                    ITXVIEWCOLOR.SUBCODE05,
                    ITXVIEWCOLOR.SUBCODE06,
                    ITXVIEWCOLOR.SUBCODE07,
                    ITXVIEWCOLOR.SUBCODE08,
                    ITXVIEWCOLOR.WARNA
                FROM
                    ITXVIEWCOLOR ITXVIEWCOLOR
            ) ITXVIEWCOLOR ON
            ITXVIEWCOLOR.ITEMTYPECODE = SALESDOCUMENTLINE.ITEMTYPEAFICODE
            AND ITXVIEWCOLOR.SUBCODE01 = SALESDOCUMENTLINE.SUBCODE01
            AND ITXVIEWCOLOR.SUBCODE02 = SALESDOCUMENTLINE.SUBCODE02
            AND ITXVIEWCOLOR.SUBCODE03 = SALESDOCUMENTLINE.SUBCODE03
            AND ITXVIEWCOLOR.SUBCODE04 = SALESDOCUMENTLINE.SUBCODE04
            AND ITXVIEWCOLOR.SUBCODE05 = SALESDOCUMENTLINE.SUBCODE05
            AND ITXVIEWCOLOR.SUBCODE06 = SALESDOCUMENTLINE.SUBCODE06
            AND ITXVIEWCOLOR.SUBCODE07 = SALESDOCUMENTLINE.SUBCODE07
            AND ITXVIEWCOLOR.SUBCODE08 = SALESDOCUMENTLINE.SUBCODE08
        LEFT JOIN PRODUCT PRODUCT ON
            SALESDOCUMENTLINE.ITEMTYPEAFICODE = PRODUCT.ITEMTYPECODE
            AND SALESDOCUMENTLINE.SUBCODE01 = PRODUCT.SUBCODE01
            AND SALESDOCUMENTLINE.SUBCODE02 = PRODUCT.SUBCODE02
            AND SALESDOCUMENTLINE.SUBCODE03 = PRODUCT.SUBCODE03
            AND SALESDOCUMENTLINE.SUBCODE04 = PRODUCT.SUBCODE04
            AND SALESDOCUMENTLINE.SUBCODE05 = PRODUCT.SUBCODE05
            AND SALESDOCUMENTLINE.SUBCODE06 = PRODUCT.SUBCODE06
            AND SALESDOCUMENTLINE.SUBCODE07 = PRODUCT.SUBCODE07
            AND SALESDOCUMENTLINE.SUBCODE08 = PRODUCT.SUBCODE08
        GROUP BY
            ITXVIEW_ALLOCATION_SURATJALAN_PPC.CODE,
            ALLOCATION.ALLOCATIONDATE,
            SALESDOCUMENT2.GOODSISSUEDATE,
            BUSINESSPARTNER.LEGALNAME1,
            SALESORDER.FNCORDPRNCUSTOMERSUPPLIERCODE,
            ADDRESS.CODE,
            PLANTINVOICE.CODE,
            SALESDOCUMENTLINE.PREVIOUSCODE,
            SALESORDER.CREATIONUSER,
            SALESDOCUMENTLINE.ITEMDESCRIPTION,
            ITXVIEW_ALLOCATION_SURATJALAN_PPC.BASEPRIMARYQUANTITY,
            PRODUCT.LONGDESCRIPTION,
            PRODUCT.SHORTDESCRIPTION,
            SALESDOCUMENTLINE.PREVIOUSCODE,
            SALESORDER.EXTERNALREFERENCE,
            SALESDOCUMENTLINE.EXTERNALREFERENCE,
            SALESDOCUMENTLINE.INTERNALREFERENCEDATE,
            SALESDOCUMENTLINE.EXTERNALREFERENCE,
            SALESDOCUMENT.EXTERNALREFERENCE,
            SALESORDER.ORDERPARTNERBRANDCODE,
            SALESDOCUMENT.ORDERPARTNERBRANDCODE,
            PLANTINVOICE.INVOICEDATE,
            PAYMENTMETHOD.LONGDESCRIPTION,
            PAYMENTMETHODIE.NOOFDAYS,
            PLANTINVOICE.CONTRACTNOCODE,
            PLANTINVOICE.CONSIGNEECUSTOMERSUPPLIERCODE,
            ADDRESS.ADDRESSEE,
            ADDRESS.TAXREGISTRATIONNUMBER,
            PLANTINVOICELINE.TAXTEMPLATECODE,
            PLANTINVOICE.ORDERCURRENCYCODE,
            PLANTINVOICE.EXCHANGERATEOFCONTRACT,
            SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE,
            PLANTINVOICE.BLNUMBER,
            SALESDOCUMENTLINE.ITEMTYPEAFICODE,
            SALESDOCUMENTLINE.price,
            SALESORDER.TEMPLATECODE,
            SALESORDER.DESCRIPTION,
            SALESDOCUMENTLINE.SUBCODE01,
            SALESDOCUMENTLINE.SUBCODE02,
            SALESDOCUMENTLINE.SUBCODE03,
            SALESDOCUMENTLINE.SUBCODE04,
            SALESDOCUMENTLINE.SUBCODE05,
            SALESDOCUMENTLINE.SUBCODE06,
            SALESDOCUMENTLINE.SUBCODE07,
            SALESDOCUMENTLINE.SUBCODE08,
            DESIGNCOMPONENT.SHORTDESCRIPTION,
            ITXVIEWCOLOR.WARNA,
            JK.SUBCODE02,
            JK.SUBCODE03,
            JK.LONGDESCRIPTION,
            JK.EXTERNALREFERENCE,
            SALESORDER.COUNTERCODE,
            BUSINESSPARTNER.NUMBERID,
            PLANTINVOICE.CREATIONUSER
    );


-- DB2ADMIN.ITXVIEW_SUB_INV_COLORJASA source

-- DB2ADMIN.ITXVIEW_SUB_INV_COLORJASA source

CREATE VIEW ITXVIEW_SUB_INV_COLORJASA AS
SELECT
    a.UNIQUEID,
    s.CODE,
    a.NAMENAME,
    a.VALUESTRING
FROM
    SALESORDER s
LEFT JOIN SALESORDERLINE s2 ON
    s.CODE = s2.SALESORDERCODE
LEFT JOIN ADSTORAGE a ON
    a.UNIQUEID = s2.ABSUNIQUEID;


-- DB2ADMIN.ITXVIEW_SUB_INV_ITEMJENISKAIN source

CREATE VIEW ITXVIEW_SUB_INV_ITEMJENISKAIN AS
SELECT
    s.PROVISIONALCODE,
    s.SALESORDERCOUNTERCODE,
    a.ORDPRNCUSTOMERSUPPLIERCODE,
    s2.EXTERNALITEM,
    s2.SUBCODE02,
    s2.SUBCODE03,
    s2.SUBCODE04,
    s2.SUBCODE05,
    s2.SUBCODE06,
    s2.ITEMDESCRIPTION,
    s2.ORDERLINE,
    a.LONGDESCRIPTION,
    p.LONGDESCRIPTION AS jenis_kain,
    a.EXTERNALREFERENCE,
    a.INACTIVE
FROM
    SALESDOCUMENT s
LEFT JOIN SALESDOCUMENTLINE s2 ON
    s.PROVISIONALCODE = s2.SALESDOCUMENTPROVISIONALCODE
LEFT JOIN ITXVIEWORDERPARTNERLINKACTIVE a ON
    s.ORDPRNCUSTOMERSUPPLIERCODE = a.ORDPRNCUSTOMERSUPPLIERCODE
    AND
   s2.ITEMTYPEAFICODE = a.ITEMTYPEAFICODE
    AND
    s2.SUBCODE01 = a.SUBCODE01
    AND
   s2.SUBCODE02 = a.SUBCODE02
    AND
   s2.SUBCODE03 = a.SUBCODE03
    AND
   s2.SUBCODE04 = a.SUBCODE04
    AND
   s2.SUBCODE05 = a.SUBCODE05
    AND
   s2.SUBCODE06 = a.SUBCODE06
LEFT JOIN PRODUCT p ON
    s2.ITEMTYPEAFICODE = p.ITEMTYPECODE
    AND
    s2.SUBCODE01 = p.SUBCODE01
    AND
   s2.SUBCODE02 = p.SUBCODE02
    AND
   s2.SUBCODE03 = p.SUBCODE03
    AND
   s2.SUBCODE04 = p.SUBCODE04
    AND
   s2.SUBCODE05 = p.SUBCODE05
    AND
   s2.SUBCODE06 = p.SUBCODE06
    AND
   s2.SUBCODE07 = p.SUBCODE07
    --    AND
    --   s2.SUBCODE08 = p.SUBCODE08;
    --   WHERE s.PROVISIONALCODE = 'CA2200017'
    -- WHERE s.SALESORDERCOUNTERCODE ='CAPITAL' --AND PROVISIONALCODE = 'CA2200017';


-- DB2ADMIN.ITXVIEW_SUB_JENISBENANG_TAS source

CREATE VIEW ITXVIEW_SUB_JENISBENANG_TAS AS
SELECT
    b.NUMBERID,
    b.SUBCODE01,
    b.SUBCODE02,
    b.SUBCODE03,
    b.SUBCODE04,
    --    b2.SEQUENCE,
    LISTAGG (
        '(' || TRIM(f.SUMMARIZEDDESCRIPTION) || ')'
    ) AS DESCRIP
FROM
    BILLOFMATERIAL b
LEFT JOIN BOMCOMPONENT b2 ON
    b2.BILLOFMATERIALNUMBERID = b.NUMBERID
LEFT JOIN FULLITEMKEYDECODER f ON
    f.SUBCODE01 = b2.SUBCODE01
    AND f.SUBCODE02 = b2.SUBCODE02
    AND f.SUBCODE03 = b2.SUBCODE03
    AND f.SUBCODE04 = b2.SUBCODE04
    AND f.SUBCODE05 = b2.SUBCODE05
    AND f.SUBCODE06 = b2.SUBCODE06
    AND f.SUBCODE07 = b2.SUBCODE07
    AND f.SUBCODE08 = b2.SUBCODE08
    --    WHERE b.SUBCODE01 = 'TC' AND b.SUBCODE02 = 'DKI' AND b.SUBCODE03 = 'D22113' AND b.SUBCODE04 = 'A01'
GROUP BY
    b.NUMBERID,
    b.SUBCODE01,
    b.SUBCODE02,
    b.SUBCODE03,
    b.SUBCODE04
    --    b2.SEQUENCE;


-- DB2ADMIN.ITXVIEW_SUB_KK_TAS source

CREATE VIEW ITXVIEW_SUB_KK_TAS AS
SELECT
    P1.CODE AS NO_DEMAND,
    P2.PRODUCTIONDEMANDCODE,
    P1.USERPRIMARYQUANTITY AS QTY,
    P1.USERSECONDARYQUANTITY AS QTY2,
    P1.USERSECONDARYUOMCODE AS SATUAN,
    P1.CUSTOMERCODE,
    ITXVIEW_JENISBENANG.DESCRIP,
    P1.SUBCODE01,
    P1.SUBCODE02,
    P1.SUBCODE03,
    P1.SUBCODE04,
    P1.SUBCODE05,
    P1.SUBCODE06,
    P1.SUBCODE07,
    P1.ABSUNIQUEID
FROM
    PRODUCTIONDEMAND P1
LEFT JOIN PRODUCTIONDEMANDSTEP P2 ON
    P1.CODE = P2.PRODUCTIONDEMANDCODE
LEFT JOIN ITXVIEW_JENISBENANG ITXVIEW_JENISBENANG ON
    P1.SUBCODE01 = ITXVIEW_JENISBENANG.SUBCODE01
    AND P1.SUBCODE02 = ITXVIEW_JENISBENANG.SUBCODE02
    AND P1.SUBCODE03 = ITXVIEW_JENISBENANG.SUBCODE03
    AND P1.SUBCODE04 = ITXVIEW_JENISBENANG.SUBCODE04
GROUP BY
    P1.CODE,
    P2.PRODUCTIONDEMANDCODE,
    P1.USERPRIMARYQUANTITY,
    P1.USERSECONDARYQUANTITY,
    P1.USERSECONDARYUOMCODE,
    P1.CUSTOMERCODE,
    ITXVIEW_JENISBENANG.DESCRIP,
    P1.SUBCODE03,
    P1.SUBCODE01,
    P1.SUBCODE02,
    P1.SUBCODE04,
    P1.SUBCODE05,
    P1.SUBCODE06,
    P1.SUBCODE07,
    P1.ABSUNIQUEID;


-- DB2ADMIN.ITXVIEW_SUB_SALESRELEASELINE source

CREATE VIEW ITXVIEW_SUB_SALESRELEASELINE AS
SELECT
    NO_SALES,
    NO_RELEASE,
    LINE_SALESRLS,
    NO_PO,
    NO_ITEM,
    WARNA,
    PROGRESSSTATUS,
    ORDER_KG,
    ORDER_YD,
    KK_WH,
    KK_LOTCODE,
    kk_kgs,
    kk_yds,
    KK_YD_FOC,
    KK_FOC,
    KET_FOC,
    JML_ROLL
FROM
    (
        SELECT
            SRL.PROJECTCODE AS NO_SALES,
            SRL.CODE AS NO_RELEASE,
            SRL.DLVSALESORDERLINEORDERLINE AS LINE_SALESRLS,
            CASE
                WHEN SOL.EXTERNALREFERENCE IS NOT NULL THEN SOL.EXTERNALREFERENCE
                ELSE SO.EXTERNALREFERENCE
            END AS NO_PO,
            CASE
                WHEN SRL.EXTERNALITEM IS NOT NULL THEN SRL.EXTERNALITEM
                ELSE TRIM(SRL.SUBCODE02) || ' ' || TRIM(SRL.SUBCODE03)
            END AS NO_ITEM,
            VIEWCOLOR.WARNA AS WARNA,
            SRL_QTY.PROGRESSSTATUS AS PROGRESSSTATUS,
            SRL_QTY.ORDER_KG AS ORDER_KG,
            SRL_QTY.ORDER_YD AS ORDER_YD,
            SRL_QTY.KK_WH AS KK_WH,
            ITXVIEW_SALESRELEASELINE_SUB_LOTCODE.KK_LOTCODE AS KK_LOTCODE,
            A.USERPRIMARYQUANTITY AS kk_kgs,
            A.USERSECONDARYQUANTITY AS kk_yds,
            SALESRELEASELINE_FOC.KK_YD_FOC AS KK_YD_FOC,
            SALESRELEASELINE_FOC.KK_FOC AS KK_FOC,
            SALESRELEASELINE_FOC.KET_FOC AS KET_FOC,
            ITXVIEW_SALESRELEASELINE_SUB_LOTCODE.JML_ROLL AS JML_ROLL
        FROM
            SALESRELEASELINE SRL
        LEFT JOIN SALESORDER SO ON
            SRL.PROJECTCODE = SO.CODE
        LEFT JOIN SALESORDERLINE SOL ON
            SO.CODE = SOL.SALESORDERCODE
        LEFT JOIN (
                SELECT
                    *
                FROM
                    ALLOCATION A
                WHERE
                    A.DETAILTYPE = '1'
            )A ON
            SRL.CODE = A.ORDERCODE
            AND SRL.PROJECTCODE = A.PROJECTCODE
            AND SRL.DLVSALESORDERLINEORDERLINE = SOL.ORDERLINE
            AND SOL.SUBCODE01 = A.DECOSUBCODE01
            AND SOL.SUBCODE02 = A.DECOSUBCODE02
            AND SOL.SUBCODE03 = A.DECOSUBCODE03
            AND SOL.SUBCODE04 = A.DECOSUBCODE04
            AND SOL.SUBCODE05 = A.DECOSUBCODE05
            AND SOL.SUBCODE06 = A.DECOSUBCODE06
            AND SOL.SUBCODE07 = A.DECOSUBCODE07
            AND SOL.SUBCODE08 = A.DECOSUBCODE08
        LEFT JOIN ITXVIEWCOLOR VIEWCOLOR ON
            SOL.SUBCODE01 = VIEWCOLOR.SUBCODE01
            AND SOL.SUBCODE02 = VIEWCOLOR.SUBCODE02
            AND SOL.SUBCODE03 = VIEWCOLOR.SUBCODE03
            AND SOL.SUBCODE04 = VIEWCOLOR.SUBCODE04
            AND SOL.SUBCODE05 = VIEWCOLOR.SUBCODE05
            AND SOL.SUBCODE06 = VIEWCOLOR.SUBCODE06
            AND SOL.SUBCODE07 = VIEWCOLOR.SUBCODE07
        LEFT JOIN ITXVIEW_SALESRELEASELINE_SUB_LOTCODE ITXVIEW_SALESRELEASELINE_SUB_LOTCODE ON
            A.CODE = ITXVIEW_SALESRELEASELINE_SUB_LOTCODE.CODE
        LEFT JOIN ITXVIEW_SALESRELEASELINE_FOC SALESRELEASELINE_FOC ON
            A.CODE = SALESRELEASELINE_FOC.ALLOCATION_CODE
        LEFT JOIN ITXVIEW_SALESRELEASELINE_QTY SRL_QTY ON
            SRL.CODE = SRL_QTY.NO_RELEASE
            AND SRL.PROJECTCODE = SRL_QTY.NO_ORDER
            AND ITXVIEW_SALESRELEASELINE_SUB_LOTCODE.KK_LOTCODE = SRL_QTY.LOTCODE
        GROUP BY
            SRL.PROJECTCODE,
            SRL.CODE,
            SRL.DLVSALESORDERLINEORDERLINE,
            SOL.EXTERNALREFERENCE,
            SO.EXTERNALREFERENCE,
            SRL.EXTERNALITEM,
            SRL.SUBCODE02,
            SRL.SUBCODE03,
            VIEWCOLOR.WARNA,
            SRL_QTY.PROGRESSSTATUS,
            SRL_QTY.ORDER_KG,
            SRL_QTY.ORDER_YD,
            SRL_QTY.KK_WH,
            ITXVIEW_SALESRELEASELINE_SUB_LOTCODE.KK_LOTCODE,
            A.USERPRIMARYQUANTITY,
            A.USERSECONDARYQUANTITY,
            SALESRELEASELINE_FOC.KK_YD_FOC,
            SALESRELEASELINE_FOC.KK_FOC,
            SALESRELEASELINE_FOC.KET_FOC,
            ITXVIEW_SALESRELEASELINE_SUB_LOTCODE.JML_ROLL
    );


-- DB2ADMIN.ITXVIEW_SUB_SALESRELEASELINE_KK_WH source

CREATE VIEW ITXVIEW_SUB_SALESRELEASELINE_KK_WH AS
SELECT
    code,
    lotcode AS KK_LOTCODE,
    --    WAREHOUSELOCATIONCODE AS KK_WH,
    LISTAGG(
        DISTINCT(
            TRIM(ITXVIEWALLOCATION0_SJEXIM.WAREHOUSELOCATIONCODE)
        ),
        ', '
    ) AS KK_WH
FROM
    ITXVIEWALLOCATION0_SJEXIM
    --        WHERE code = '000000104777'
GROUP BY
    code,
    lotcode
    --    WAREHOUSELOCATIONCODE;


-- DB2ADMIN.ITXVIEW_SUB_SURATJALAN_EXIM source

CREATE VIEW ITXVIEW_SUB_SURATJALAN_EXIM AS
SELECT
    DISTINCT
    --    ELEMENTCODE,
    PROVISIONALCODE,
    COMPANYCODE,
    TRANSPORTSTARTDATE,
    JENIS_ORDER,
    TGL_BERANGKAT,
    TANGGAL_BERANGKAT,
    ISSUE_DATE,
    KET_SHIPPING,
    TERMSOFSHIPPINGCODE,
    TERMSOFSHIPPINGDESCRIPTION,
    PAYMENTMETHODCODE,
    PRICE,
    UNIT,
    ITEMTYPEAFICODE,
    COUNTERCODE,
    terms_shipping,
    CASE
        WHEN terms_shipping_description IS NULL THEN VESSEL_NM
        WHEN VESSEL_NM IS NULL THEN terms_shipping_description
        ELSE
    	terms_shipping_description || ' ' || VESSEL_NM
    END AS terms_shipping_description,
    PROJECTCODE,
    SUBCODE01,
    SUBCODE05,
    EXTERNALREFERENCE,
    EXTERNALITEM,
    DLVSALORDERLINESALESORDERCODE,
    BRAND_NM,
    CUSTOMERSUPPLIERCODE,
    CODE,
    ADDRESSEE,
    COLOR_DESC,
    COUNTRY_NM
    --    QUALITYREASONCODE
FROM
    (
        SELECT
            DISTINCT
            --        ITXVIEW_SURATJALAN_EXIM_FOC.ELEMENTCODE AS ELEMENTCODE,
            SALESDOCUMENT.PROVISIONALCODE AS PROVISIONALCODE,
            SALESDOCUMENT.COMPANYCODE,
            SALESDOCUMENT.TRANSPORTSTARTDATE AS TRANSPORTSTARTDATE,
            SALESORDER.COUNTERCODE AS jenis_order,
            --    COUNT_ORDER.JMLORDER,
            SALESDOCUMENT.PROVISIONALDOCUMENTDATE AS tgl_berangkat,
            CASE
                WHEN trim(SALESDOCUMENT.PROVISIONALDOCUMENTDATE) <= DATE('2022-08-15') THEN
			CASE
                    WHEN trim(SALESDOCUMENT.GOODSISSUEDATE) IS NOT NULL THEN trim(SALESDOCUMENT.GOODSISSUEDATE)
                    ELSE
        	trim(SALESDOCUMENT.PROVISIONALDOCUMENTDATE)
                END
                ELSE
    	trim(SALESDOCUMENT.GOODSISSUEDATE)
            END AS tanggal_berangkat,
            SALESDOCUMENT.GOODSISSUEDATE AS issue_date,
            --    SALESDOCUMENT.APPEARANCEDESCRIPTION,
            SALESDOCUMENT.NUMBERPLATE AS KET_SHIPPING,
            SALESDOCUMENT.TERMSOFSHIPPINGCODE AS TERMSOFSHIPPINGCODE,
            SALESDOCUMENT.TERMSOFSHIPPINGDESCRIPTION AS TERMSOFSHIPPINGDESCRIPTION,
            SALESDOCUMENT.PAYMENTMETHODCODE AS PAYMENTMETHODCODE,
            SALESDOCUMENTLINE.PRICE AS PRICE,
            SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE AS UNIT,
            SALESDOCUMENTLINE.ITEMTYPEAFICODE AS ITEMTYPEAFICODE,
            SALESDOCUMENTLINE.SALDOCPROVISIONALCOUNTERCODE AS COUNTERCODE,
            CASE
                WHEN SALESDOCUMENT.TERMSOFSHIPPINGCODE = 'CO' THEN
    	'COURIER NAME'
                WHEN SALESDOCUMENT.TERMSOFSHIPPINGCODE IN ('SE') THEN
    	'CONTAINER'
                ELSE
    	''
            END AS terms_shipping,
            CASE
                WHEN SALESDOCUMENT.TERMSOFSHIPPINGCODE = 'CO' THEN
    	SALESDOCUMENT.NUMBERPLATE
                WHEN SALESDOCUMENT.TERMSOFSHIPPINGCODE IN ('SE') THEN
        SALESDOCUMENT.APPEARANCEDESCRIPTION
                ELSE
    	''
            END AS terms_shipping_description,
            ADS.VALUESTRING AS VESSEL_NM,
            SALESORDER.CODE AS PROJECTCODE,
            SALESDOCUMENTLINE.SUBCODE01 AS SUBCODE01,
            SALESDOCUMENTLINE.SUBCODE05 AS SUBCODE05,
            SALESDOCUMENTLINE.EXTERNALREFERENCE AS EXTERNALREFERENCE,
            SALESDOCUMENTLINE.EXTERNALITEM AS EXTERNALITEM,
            SALESDOCUMENTLINE.DLVSALORDERLINESALESORDERCODE AS DLVSALORDERLINESALESORDERCODE,
            TRIM(ORDERPARTNERBRAND.LONGDESCRIPTION) AS BRAND_NM,
            ORDERPARTNER.CUSTOMERSUPPLIERCODE AS CUSTOMERSUPPLIERCODE,
            ALLOCATION.CODE AS CODE,
            CASE
                WHEN SALESDOCUMENT.PROVISIONALCODE = 'POD2400341' THEN 'MAKALOT GARMENT CO.LTD'
                ELSE 
        	 	ADDRESS.ADDRESSEE
            END AS ADDRESSEE,
            CASE
                WHEN SALESDOCUMENT.PROVISIONALCODE = 'POD2400341' THEN NULL
                ELSE 
        	 USERGENERICGROUP.LONGDESCRIPTION
            END AS COLOR_DESC,
            COUNTRY.LONGDESCRIPTION AS COUNTRY_NM
        FROM
            SALESDOCUMENT SALESDOCUMENT
        LEFT JOIN SALESORDER SALESORDER ON
            SALESDOCUMENT.DELIVERYPOINTUNIQUEID = SALESORDER.DELIVERYPOINTUNIQUEID
            AND SALESDOCUMENT.COMPANYCODE = SALESORDER.COMPANYCODE
            --        LEFT JOIN ADDRESS ADDRESS ON SALESORDER.DELIVERYPOINTUNIQUEID = ADDRESS.UNIQUEID AND SALESORDER.DELIVERYPOINTCODE = ADDRESS.CODE
        LEFT JOIN ADDRESS ADDRESS ON
            SALESDOCUMENT.DELIVERYPOINTUNIQUEID = ADDRESS.UNIQUEID
            AND SALESDOCUMENT.DELIVERYPOINTCODE = ADDRESS.CODE
        LEFT JOIN ORDERPARTNER ORDERPARTNER ON
            SALESDOCUMENT.FNCORDPRNCUSTOMERSUPPLIERCODE = ORDERPARTNER.CUSTOMERSUPPLIERCODE
        LEFT JOIN PAYMENTMETHOD PAYMENTMETHOD ON
            ORDERPARTNER.PAYMENTMETHODCODE = PAYMENTMETHOD.CODE
        LEFT JOIN SALESDOCUMENTLINE SALESDOCUMENTLINE ON
            SALESORDER.CODE = SALESDOCUMENTLINE.DLVSALORDERLINESALESORDERCODE
            AND SALESDOCUMENT.PROVISIONALCODE = SALESDOCUMENTLINE.SALESDOCUMENTPROVISIONALCODE
            AND SALESDOCUMENt.COMPANYCODE = SALESDOCUMENTLINE.SALESDOCUMENTCOMPANYCODE
            AND SALESDOCUMENT.PROVISIONALCOUNTERCODE = SALESDOCUMENTLINE.SALDOCPROVISIONALCOUNTERCODE
        LEFT JOIN USERGENERICGROUP USERGENERICGROUP ON
            SALESDOCUMENTLINE.SUBCODE05 = USERGENERICGROUP.CODE
        LEFT JOIN ORDERPARTNERBRAND ORDERPARTNERBRAND ON
            ORDERPARTNER.CUSTOMERSUPPLIERCODE = ORDERPARTNERBRAND.ORDPRNCUSTOMERSUPPLIERCODE
            AND SALESORDER.ORDERPARTNERBRANDCODE = ORDERPARTNERBRAND.CODE
            AND SALESORDER.COMPANYCODE = ORDERPARTNERBRAND.ORDPRNCSMSUPPLIERCOMPANYCODE
        LEFT JOIN BUSINESSPARTNER BUSINESSPARTNER ON
            ORDERPARTNER.ORDERBUSINESSPARTNERNUMBERID = BUSINESSPARTNER.NUMBERID
        LEFT JOIN COUNTRY COUNTRY ON
            ADDRESS.COUNTRYCODE = COUNTRY.CODE
        LEFT JOIN (
                SELECT
                    *
                FROM
                    ALLOCATION ALLOCATION
                WHERE
                    ALLOCATION.DETAILTYPE = '1'
                    AND ALLOCATION.ORIGINTRNTRANSACTIONNUMBER IS NULL
                    AND ALLOCATION.DESTINATIONTYPE = 7
            )ALLOCATION ON
            SALESDOCUMENTLINE.SUBCODE01 = ALLOCATION.DECOSUBCODE01
            AND
    SALESDOCUMENTLINE.SUBCODE02 = ALLOCATION.DECOSUBCODE02
            AND
    SALESDOCUMENTLINE.SUBCODE03 = ALLOCATION.DECOSUBCODE03
            AND
    SALESDOCUMENTLINE.SUBCODE04 = ALLOCATION.DECOSUBCODE04
            AND
    SALESDOCUMENTLINE.SUBCODE05 = ALLOCATION.DECOSUBCODE05
            AND
    SALESDOCUMENTLINE.SUBCODE06 = ALLOCATION.DECOSUBCODE06
            AND
    SALESDOCUMENTLINE.SUBCODE07 = ALLOCATION.DECOSUBCODE07
            AND
    SALESDOCUMENT.PROVISIONALCODE = ALLOCATION.ORDERCODE
            AND
    SALESDOCUMENTLINE.ORDERLINE = ALLOCATION.ORDERLINE
        LEFT JOIN (
                SELECT
                    *
                FROM
                    ADSTORAGE ADS
                WHERE
                    ADS.NAMENAME = 'vesselname'
            )ADS ON
            SALESDOCUMENT.ABSUNIQUEID = ADS.UNIQUEID
            --LEFT JOIN ITXVIEW_SURATJALAN_EXIM_COUNT_JMLORDER COUNT_ORDER ON
            --    SALESDOCUMENT.PROVISIONALCODE = COUNT_ORDER.PROVISIONALCODE
        WHERE
            ALLOCATION.ORDERCODE IS NOT NULL
            --                                                		AND SALESDOCUMENT.PROVISIONALCODE = 'PSM2301135'
            --                            AND SALESDOCUMENTLINE.USERSECONDARYUOMCODE ='un'
        GROUP BY
            SALESDOCUMENT.PROVISIONALCODE,
            SALESDOCUMENT.COMPANYCODE,
            SALESDOCUMENT.TRANSPORTSTARTDATE,
            SALESORDER.COUNTERCODE,
            SALESDOCUMENT.PROVISIONALDOCUMENTDATE,
            SALESDOCUMENT.GOODSISSUEDATE,
            SALESDOCUMENT.APPEARANCEDESCRIPTION,
            SALESDOCUMENT.NUMBERPLATE,
            SALESDOCUMENT.TERMSOFSHIPPINGCODE,
            SALESDOCUMENT.TERMSOFSHIPPINGDESCRIPTION,
            SALESDOCUMENT.PAYMENTMETHODCODE,
            SALESDOCUMENTLINE.PRICE,
            SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE,
            SALESDOCUMENTLINE.ITEMTYPEAFICODE,
            SALESDOCUMENTLINE.SALDOCPROVISIONALCOUNTERCODE,
            SALESORDER.CODE,
            SALESDOCUMENTLINE.SUBCODE01,
            SALESDOCUMENTLINE.SUBCODE05,
            SALESDOCUMENTLINE.EXTERNALREFERENCE,
            SALESDOCUMENTLINE.EXTERNALITEM,
            SALESDOCUMENTLINE.DLVSALORDERLINESALESORDERCODE,
            ADS.VALUESTRING,
            ORDERPARTNERBRAND.LONGDESCRIPTION,
            ORDERPARTNER.CUSTOMERSUPPLIERCODE,
            ALLOCATION.CODE,
            ALLOCATION.ALLOCATIONDATE,
            ALLOCATION.ORDERCODE,
            ALLOCATION.ORDERLINE,
            ADDRESS.ADDRESSEE,
            USERGENERICGROUP.LONGDESCRIPTION,
            COUNTRY.LONGDESCRIPTION
    )
    --        WHERE PROVISIONALCODE = 'PSM2301135';


-- DB2ADMIN.ITXVIEW_SUMMARY_QTY_DELIVERY source

CREATE VIEW ITXVIEW_SUMMARY_QTY_DELIVERY AS 
SELECT
    DISTINCT 
	s4.SALESDOCUMENTPROVISIONALCODE,
    s5.GOODSISSUEDATE,
    a2.CODE,
    iasp.LOTCODE,
    s.ORDERLINE,
    ip.LANGGANAN AS PELANGGAN,
    s.SALESORDERCODE AS NO_ORDER,
    s.EXTERNALREFERENCE AS NO_PO,
    TRIM(s.SUBCODE02) || '-' || TRIM(s.SUBCODE03) AS KET_PRODUCT,
    s.INTERNALREFERENCE AS STYLE,
    il.LEBAR,
    CASE
        WHEN i.GRAMASI_KFF IS NULL THEN i.GRAMASI_FKF
        ELSE i.GRAMASI_KFF
    END AS GRAMASI,
    i2.WARNA,
    TRIM(s.SUBCODE05) AS NO_WARNA,
    s.USERPRIMARYQUANTITY AS NETTO,
    TRIM(s.USERPRIMARYUOMCODE) AS SATUAN_NETTO,
    s.USERSECONDARYQUANTITY AS NETTO_2,
    TRIM(s.USERSECONDARYUOMCODE) AS SATUAN_NETTO_2,
    p.SECONDARYUNSTEADYCVSFACTOR AS KONVERSI,
    COALESCE(s3.CONFIRMEDDELIVERYDATE, s2.CONFIRMEDDUEDATE) AS ACTUAL_DELIVERY,
    a2.LINENUMBER,
    (a2.USERPRIMARYQUANTITY) AS QTY_SUDAH_KIRIM,
    (a2.USERSECONDARYQUANTITY) AS QTY_SUDAH_KIRIM_2,
    e.QUALITYREASONCODE
FROM
    SALESORDERLINE s
LEFT JOIN SALESORDER s2 ON
    s2.CODE = s.SALESORDERCODE
LEFT JOIN ITXVIEW_PELANGGAN ip ON
    ip.ORDPRNCUSTOMERSUPPLIERCODE = s2.ORDPRNCUSTOMERSUPPLIERCODE
    AND ip.CODE = s.SALESORDERCODE
LEFT JOIN ITXVIEW_KGBRUTO ik ON
    ik.PROJECTCODE = s.SALESORDERCODE
    AND ik.ORIGDLVSALORDERLINEORDERLINE = s.ORDERLINE
LEFT JOIN ITXVIEWLEBAR il ON
    il.SALESORDERCODE = s.SALESORDERCODE
    AND il.ORDERLINE = s.ORDERLINE
LEFT JOIN ITXVIEWGRAMASI i ON
    i.SALESORDERCODE = s.SALESORDERCODE
    AND i.ORDERLINE = s.ORDERLINE
LEFT JOIN ITXVIEWCOLOR i2 ON
    i2.ITEMTYPECODE = s.ITEMTYPEAFICODE
    AND i2.SUBCODE01 = s.SUBCODE01
    AND i2.SUBCODE02 = s.SUBCODE02
    AND i2.SUBCODE03 = s.SUBCODE03
    AND i2.SUBCODE04 = s.SUBCODE04
    AND i2.SUBCODE05 = s.SUBCODE05
    AND i2.SUBCODE06 = s.SUBCODE06
    AND i2.SUBCODE07 = s.SUBCODE07
    AND i2.SUBCODE08 = s.SUBCODE08
    AND i2.SUBCODE09 = s.SUBCODE09
    AND i2.SUBCODE10 = s.SUBCODE10
LEFT JOIN PRODUCT p ON
    p.ITEMTYPECODE = s.ITEMTYPEAFICODE
    AND p.SUBCODE01 = s.SUBCODE01
    AND p.SUBCODE02 = s.SUBCODE02
    AND p.SUBCODE03 = s.SUBCODE03
    AND p.SUBCODE04 = s.SUBCODE04
    AND p.SUBCODE05 = s.SUBCODE05
    AND p.SUBCODE06 = s.SUBCODE06
    AND p.SUBCODE07 = s.SUBCODE07
    AND p.SUBCODE08 = s.SUBCODE08
    AND p.SUBCODE09 = s.SUBCODE09
    AND p.SUBCODE10 = s.SUBCODE10
LEFT JOIN SALESORDERDELIVERY s3 ON
    s3.SALESORDERLINESALESORDERCODE = s.SALESORDERCODE
    AND s3.SALESORDERLINEORDERLINE = s.ORDERLINE
LEFT JOIN SALESDOCUMENTLINE s4 ON
    s4.DLVSALORDERLINESALESORDERCODE = s.SALESORDERCODE
    AND s4.DLVSALESORDERLINEORDERLINE = s.ORDERLINE
    AND s4.DOCUMENTTYPETYPE = 05
    AND NOT s4.PROGRESSSTATUS = 0
LEFT JOIN ALLOCATION a ON
    a.ORDERCODE = s4.SALESDOCUMENTPROVISIONALCODE
    AND a.ORDERLINE = s4.ORDERLINE
LEFT JOIN ITXVIEW_ALLOCATION_SURATJALAN_PPC iasp ON
    iasp.CODE = a.CODE
LEFT JOIN ALLOCATION a2 ON
    a2.CODE = a.CODE
    AND a2.LOTCODE = iasp.LOTCODE
    AND NOT a2.PICKINGCODE IS NULL
LEFT JOIN SALESDOCUMENT s5 ON
    s5.PROVISIONALCODE = s4.SALESDOCUMENTPROVISIONALCODE
LEFT JOIN ELEMENTS e ON
    e.CODE = a2.ITEMELEMENTCODE
WHERE
    s.LINESTATUS = '1'
    --	AND s.SALESORDERCODE = 'EXP2400330' 
    --	AND s.ORDERLINE = 70
    --	AND iasp.LOTCODE = '00143138'
GROUP BY
    s4.SALESDOCUMENTPROVISIONALCODE,
    s5.GOODSISSUEDATE,
    a2.CODE,
    iasp.LOTCODE,
    s.ORDERLINE,
    ip.LANGGANAN,
    s.SALESORDERCODE,
    s.EXTERNALREFERENCE,
    s.SUBCODE02,
    s.SUBCODE03,
    s.INTERNALREFERENCE,
    il.LEBAR,
    i.GRAMASI_KFF,
    i.GRAMASI_FKF,
    i2.WARNA,
    s.SUBCODE05,
    s.USERPRIMARYQUANTITY,
    s.USERPRIMARYUOMCODE,
    s.USERSECONDARYQUANTITY,
    s.USERSECONDARYUOMCODE,
    p.SECONDARYUNSTEADYCVSFACTOR,
    s3.CONFIRMEDDELIVERYDATE,
    s2.CONFIRMEDDUEDATE,
    a2.LINENUMBER,
    a2.USERPRIMARYQUANTITY,
    a2.USERSECONDARYQUANTITY,
    e.QUALITYREASONCODE;


-- DB2ADMIN.ITXVIEW_SUMSALESORDER source

CREATE VIEW ITXVIEW_SUMSALESORDER AS
SELECT
    o.LONGDESCRIPTION AS BUYER,
    MONTH(s.ORDERDATE) AS BULAN,
    YEAR(s.ORDERDATE) AS TAHUN,
    SUM(s2.NETTO) AS SUM_NETTO,
    SUM(s2.NETTO_SS) AS SUM_NETTO_SS
FROM
    SALESORDER s
LEFT JOIN ORDERPARTNERBRAND o ON
    o.ORDPRNCUSTOMERSUPPLIERCODE = s.ORDPRNCUSTOMERSUPPLIERCODE
LEFT JOIN (
        SELECT
            s2.SALESORDERCODE,
            COUNT(s2.SALESORDERCODE) AS COUNTLINE,
            --        SUM(s2.USERPRIMARYQUANTITY) AS NETTO
        CASE
                WHEN s2.LINETEMPLATECODE IN (
                    'SME', 'SMD'
                )
        	THEN SUM(s2.USERPRIMARYQUANTITY)
            END AS NETTO_SS,
            CASE
                WHEN s2.LINETEMPLATECODE NOT IN (
                    'SME', 'SMD'
                )
        	THEN SUM(s2.USERPRIMARYQUANTITY)
            END AS NETTO
        FROM
            SALESORDERLINE s2
        LEFT JOIN ADSTORAGE a ON
            a.UNIQUEID = s2.ABSUNIQUEID
            AND a.NAMENAME = 'SampleComments5'
        WHERE
            s2.LINESTATUS = 1
            AND s2.LINETEMPLATECODE NOT IN (
                'CAP', 'CWD', 'CWE', 'ENQ', 'LAB', 'STO', 'TAS'
            )
        GROUP BY
            s2.SALESORDERCODE,
            s2.LINETEMPLATECODE,
            a.NAMENAME
    )s2 ON
    s2.SALESORDERCODE = s.CODE
WHERE
    CURRENTSTATUS = 1
    --AND  YEAR(s.ORDERDATE) = 2023
    --AND  o.LONGDESCRIPTION = 'ADIDAS'
GROUP BY
    o.LONGDESCRIPTION,
    MONTH(s.ORDERDATE),
    YEAR(s.ORDERDATE);


-- DB2ADMIN.ITXVIEW_SUMSALESORDER_BRUTO source

CREATE VIEW ITXVIEW_SUMSALESORDER_BRUTO AS
SELECT
    BUYER,
    MONTH(ORDERDATE) AS BULAN,
    YEAR(ORDERDATE) AS TAHUN,
    SUM(BRUTO) AS SUM_BRUTO,
    SUM(BRUTO_SS) AS SUM_BRUTO_SS
FROM
    (
        SELECT
            p.ORIGDLVSALORDLINESALORDERCODE AS PROJECTCODE,
            a.NAMENAME,
            a.VALUESTRING,
            p.ORDERDATE,
            o.LONGDESCRIPTION AS BUYER,
            p2.USERPRIMARYUOMCODE AS UOMCODE,
            CASE
                WHEN s.LINETEMPLATECODE IN (
                    'SME', 'SMD'
                )
        	THEN SUM(p2.USERPRIMARYQUANTITY)
            END AS BRUTO_SS,
            CASE
                WHEN s.LINETEMPLATECODE NOT IN (
                    'SME', 'SMD'
                )
        	THEN SUM(p2.USERPRIMARYQUANTITY)
            END AS BRUTO
        FROM
            PRODUCTIONDEMAND p
        LEFT JOIN PRODUCTIONRESERVATION p2 ON
            p2.ORDERCODE = p.CODE
        LEFT JOIN SALESORDERLINE s ON
            s.SALESORDERCODE = p.ORIGDLVSALORDLINESALORDERCODE
            AND s.ORDERLINE = p.ORIGDLVSALORDERLINEORDERLINE
        LEFT JOIN SALESORDER s2 ON
            s2.CODE = s.SALESORDERCODE
        LEFT JOIN ADSTORAGE a ON
            a.UNIQUEID = p.ABSUNIQUEID
            AND a.NAMENAME = 'OriginalPDCode'
        LEFT JOIN ORDERPARTNERBRAND o ON
            o.ORDPRNCUSTOMERSUPPLIERCODE = s2.ORDPRNCUSTOMERSUPPLIERCODE
        WHERE
            (
                p2.ITEMTYPEAFICODE = 'KGF'
                    OR p2.ITEMTYPEAFICODE = 'FKG'
            )
            AND (
                p.ITEMTYPEAFICODE = 'KFF'
                    OR p.ITEMTYPEAFICODE = 'FKF'
            )
            AND p2.PRODUCTIONORDERCODE IS NOT NULL
            AND s.LINETEMPLATECODE NOT IN (
                'CAP', 'CWD', 'CWE', 'ENQ', 'LAB', 'STO', 'TAS'
            )
        GROUP BY
            p.ORIGDLVSALORDLINESALORDERCODE,
            p2.USERPRIMARYUOMCODE,
            o.LONGDESCRIPTION,
            p.ORDERDATE,
            s.LINETEMPLATECODE,
            a.NAMENAME,
            a.VALUESTRING
    )
WHERE
    NAMENAME IS NULL
    --	AND  YEAR(ORDERDATE) = 2023
    --	AND BUYER = 'ADIDAS'
GROUP BY 
    BUYER,
    MONTH(ORDERDATE),
    YEAR(ORDERDATE);


-- DB2ADMIN.ITXVIEW_SUMSALESORDER_SA source

CREATE VIEW ITXVIEW_SUMSALESORDER_SA AS
SELECT
    --    o.LONGDESCRIPTION AS BUYER,
    s.CREATIONUSER AS SALES_ASISSTANT,
    MONTH(s.ORDERDATE) AS BULAN,
    YEAR(s.ORDERDATE) AS TAHUN,
    ROUND(SUM(s2.NETTO), 2) AS SUM_NETTO
FROM
    SALESORDER s
    --LEFT JOIN ORDERPARTNERBRAND o ON
    --    o.ORDPRNCUSTOMERSUPPLIERCODE = s.ORDPRNCUSTOMERSUPPLIERCODE
LEFT JOIN (
        SELECT
            s2.SALESORDERCODE,
            COUNT(s2.SALESORDERCODE) AS COUNTLINE,
            SUM(s2.USERPRIMARYQUANTITY) AS NETTO
        FROM
            SALESORDERLINE s2
        GROUP BY
            s2.SALESORDERCODE
    )s2 ON
    s2.SALESORDERCODE = s.CODE
GROUP BY
    --    o.LONGDESCRIPTION,
    s.CREATIONUSER,
    MONTH(s.ORDERDATE),
    YEAR(s.ORDERDATE);


-- DB2ADMIN.ITXVIEW_SUPPLIER_BENANG source

CREATE VIEW ITXVIEW_SUPPLIER_BENANG AS
SELECT
    DISTINCT 
b.LEGALNAME1,
    a.VALUESTRING AS SUPPLIER,
    i.*
FROM
    INTERNALDOCUMENTLINE i
LEFT JOIN ADSTORAGE a ON
    a.UNIQUEID = i.ABSUNIQUEID
    AND a.FIELDNAME = 'SuppName'
LEFT JOIN BUSINESSPARTNER b ON
    b.SEARCHNAME = a.VALUESTRING
    --WHERE i.INTDOCUMENTPROVISIONALCODE ='I2P5024000440';


-- DB2ADMIN.ITXVIEW_SURATJALAN_BENANG_RETUR source

CREATE VIEW ITXVIEW_SURATJALAN_BENANG_RETUR AS 
SELECT
    B.INTDOCUMENTPROVISIONALCODE,
    B.ITEMDESCRIPTION,
    B.USERPRIMARYQUANTITY,
    B.USERSECONDARYQUANTITY,
    P.LONGDESCRIPTION AS JENIS_BENANG,
    ST.LOTCODE,
    ID_USER.FIRST_ AS TTD_HORMAT_KAMI
    --	B.SUBCODE01,
    --	B.SUBCODE02,
    --	B.SUBCODE03,
    --	B.SUBCODE04,
    --	B.SUBCODE05,
    --	B.SUBCODE06,
    --	B.SUBCODE07 
FROM
    INTERNALDOCUMENT A
LEFT JOIN INTERNALDOCUMENTLINE B ON
    A.PROVISIONALCODE = B.INTDOCUMENTPROVISIONALCODE
LEFT JOIN PRODUCT P ON
    B.SUBCODE01 = P.SUBCODE01
    AND
B.SUBCODE02 = P.SUBCODE02
    AND
B.SUBCODE03 = P.SUBCODE03
    AND
B.SUBCODE04 = P.SUBCODE04
    AND
B.SUBCODE05 = P.SUBCODE05
    AND
B.SUBCODE06 = P.SUBCODE06
    AND
B.SUBCODE07 = P.SUBCODE07
LEFT JOIN (
        SELECT
            *
        FROM
            STOCKTRANSACTION ST
        WHERE
            ST.TEMPLATECODE = '203'
            AND ST.TOKENCODE IS NULL
    )ST ON
    B.INTDOCUMENTPROVISIONALCODE = ST.ORDERCODE
    AND
B.ORDERLINE = ST.ORDERLINE
LEFT JOIN ACT_ID_USER ID_USER ON
    B.CREATIONUSER = ID_USER.ID_
WHERE
    A.ORDPRNCUSTOMERSUPPLIERCODE = 'P503'
    --    	AND B.INTDOCUMENTPROVISIONALCODE in ('I2M0122002273')--,'I2M0122002275')
GROUP BY
    B.INTDOCUMENTPROVISIONALCODE,
    B.ITEMDESCRIPTION,
    B.USERPRIMARYQUANTITY,
    B.USERSECONDARYQUANTITY,
    P.LONGDESCRIPTION,
    ST.LOTCODE,
    ID_USER.FIRST_;


-- DB2ADMIN.ITXVIEW_SURATJALAN_EXIM source

CREATE VIEW ITXVIEW_SURATJALAN_EXIM AS
SELECT
    PROVISIONALCODE,
    code,
    elementcode,
    LOTCODE,
    TRANSPORTSTARTDATE,
    JENIS_ORDER,
    TGL_BERANGKAT,
    TANGGAL_BERANGKAT,
    ISSUE_DATE,
    KET_SHIPPING,
    TERMSOFSHIPPINGCODE,
    TERMSOFSHIPPINGDESCRIPTION,
    PAYMENTMETHODCODE,
    PRICE,
    UNIT,
    ITEMTYPEAFICODE,
    terms_shipping,
    terms_shipping_description,
    PROJECTCODE,
    SUBCODE01,
    SUBCODE05,
    EXTERNALREFERENCE,
    EXTERNALITEM,
    DLVSALORDERLINESALESORDERCODE,
    BRAND_NM,
    CUSTOMERSUPPLIERCODE,
    ADDRESSEE,
    COLOR_DESC,
    COUNTRY_NM,
    QUALITYREASONCODE,
    jml_roll,
    jml_kg,
    jml_yd,
    jml_gw
FROM
    (
        SELECT
            ITXVIEW_DETAIL_EXIM.PROVISIONALCODE,
            ITXVIEW_DETAIL_EXIM.CODE AS code,
            ITXVIEW_DETAIL_EXIM.ITEMELEMENTCODE AS elementcode,
            ITXVIEW_DETAIL_EXIM.LOTCODE AS LOTCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.TRANSPORTSTARTDATE,
            ITXVIEW_SUB_SURATJALAN_EXIM.JENIS_ORDER,
            ITXVIEW_SUB_SURATJALAN_EXIM.TGL_BERANGKAT,
            ITXVIEW_SUB_SURATJALAN_EXIM.TANGGAL_BERANGKAT,
            ITXVIEW_SUB_SURATJALAN_EXIM.ISSUE_DATE,
            ITXVIEW_SUB_SURATJALAN_EXIM.KET_SHIPPING,
            ITXVIEW_SUB_SURATJALAN_EXIM.TERMSOFSHIPPINGCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.TERMSOFSHIPPINGDESCRIPTION,
            ITXVIEW_SUB_SURATJALAN_EXIM.PAYMENTMETHODCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.PRICE,
            ITXVIEW_SUB_SURATJALAN_EXIM.UNIT,
            ITXVIEW_SUB_SURATJALAN_EXIM.ITEMTYPEAFICODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.terms_shipping,
            ITXVIEW_SUB_SURATJALAN_EXIM.terms_shipping_description,
            ITXVIEW_SUB_SURATJALAN_EXIM.PROJECTCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.SUBCODE01,
            ITXVIEW_SUB_SURATJALAN_EXIM.SUBCODE05,
            ITXVIEW_SUB_SURATJALAN_EXIM.EXTERNALREFERENCE,
            ITXVIEW_SUB_SURATJALAN_EXIM.EXTERNALITEM,
            ITXVIEW_SUB_SURATJALAN_EXIM.DLVSALORDERLINESALESORDERCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.BRAND_NM,
            ITXVIEW_SUB_SURATJALAN_EXIM.CUSTOMERSUPPLIERCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.ADDRESSEE,
            ITXVIEW_SUB_SURATJALAN_EXIM.COLOR_DESC,
            ITXVIEW_SUB_SURATJALAN_EXIM.COUNTRY_NM,
            E.QUALITYREASONCODE,
            count(ITXVIEW_DETAIL_EXIM.CODE) AS jml_roll,
            CASE
                WHEN E.QUALITYREASONCODE = 'FOC' THEN ITXVIEW_DETAIL_EXIM.USERPRIMARYQUANTITY * 0
                ELSE ITXVIEW_DETAIL_EXIM.USERPRIMARYQUANTITY
            END AS jml_kg,
            CASE
                WHEN E.QUALITYREASONCODE = 'FOC' THEN round(ITXVIEW_DETAIL_EXIM.USERSECONDARYQUANTITY, 2) * 0
                ELSE round(ITXVIEW_DETAIL_EXIM.USERSECONDARYQUANTITY, 2)
            END AS jml_yd,
            CASE
                WHEN E.QUALITYREASONCODE = 'FOC' THEN (
                    ITXVIEW_DETAIL_EXIM.USERPRIMARYQUANTITY + 0.6
                ) * 0
                ELSE ITXVIEW_DETAIL_EXIM.USERPRIMARYQUANTITY + 0.6
            END AS jml_gw
        FROM
            ITXVIEW_DETAIL_EXIM ITXVIEW_DETAIL_EXIM
        LEFT JOIN ITXVIEW_SUB_SURATJALAN_EXIM ITXVIEW_SUB_SURATJALAN_EXIM ON
            ITXVIEW_SUB_SURATJALAN_EXIM.PROVISIONALCODE = ITXVIEW_DETAIL_EXIM.PROVISIONALCODE
            AND ITXVIEW_SUB_SURATJALAN_EXIM.CODE = ITXVIEW_DETAIL_EXIM.CODE
        LEFT JOIN ELEMENTSINSPECTION E ON
            ITXVIEW_DETAIL_EXIM.ITEMELEMENTCODE = E.ELEMENTCODE
        GROUP BY
            ITXVIEW_DETAIL_EXIM.PROVISIONALCODE,
            ITXVIEW_DETAIL_EXIM.CODE,
            ITXVIEW_DETAIL_EXIM.ITEMELEMENTCODE,
            ITXVIEW_DETAIL_EXIM.LOTCODE,
            ITXVIEW_DETAIL_EXIM.USERPRIMARYQUANTITY,
            ITXVIEW_DETAIL_EXIM.USERSECONDARYQUANTITY,
            ITXVIEW_SUB_SURATJALAN_EXIM.TRANSPORTSTARTDATE,
            ITXVIEW_SUB_SURATJALAN_EXIM.JENIS_ORDER,
            ITXVIEW_SUB_SURATJALAN_EXIM.TGL_BERANGKAT,
            ITXVIEW_SUB_SURATJALAN_EXIM.TANGGAL_BERANGKAT,
            ITXVIEW_SUB_SURATJALAN_EXIM.ISSUE_DATE,
            ITXVIEW_SUB_SURATJALAN_EXIM.KET_SHIPPING,
            ITXVIEW_SUB_SURATJALAN_EXIM.TERMSOFSHIPPINGCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.TERMSOFSHIPPINGDESCRIPTION,
            ITXVIEW_SUB_SURATJALAN_EXIM.PAYMENTMETHODCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.PRICE,
            ITXVIEW_SUB_SURATJALAN_EXIM.UNIT,
            ITXVIEW_SUB_SURATJALAN_EXIM.ITEMTYPEAFICODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.terms_shipping,
            ITXVIEW_SUB_SURATJALAN_EXIM.terms_shipping_description,
            ITXVIEW_SUB_SURATJALAN_EXIM.PROJECTCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM. SUBCODE01,
            ITXVIEW_SUB_SURATJALAN_EXIM.SUBCODE05,
            ITXVIEW_SUB_SURATJALAN_EXIM.EXTERNALREFERENCE,
            ITXVIEW_SUB_SURATJALAN_EXIM.EXTERNALITEM,
            ITXVIEW_SUB_SURATJALAN_EXIM.DLVSALORDERLINESALESORDERCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.BRAND_NM,
            ITXVIEW_SUB_SURATJALAN_EXIM.CUSTOMERSUPPLIERCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.ADDRESSEE,
            ITXVIEW_SUB_SURATJALAN_EXIM.COLOR_DESC,
            ITXVIEW_SUB_SURATJALAN_EXIM.COUNTRY_NM,
            E.QUALITYREASONCODE
    );


-- DB2ADMIN.ITXVIEW_SURATJALAN_EXIM2 source

CREATE VIEW ITXVIEW_SURATJALAN_EXIM2 AS
SELECT
    DISTINCT PROVISIONALCODE,
    ALLOCATIONCODE ,
    ITEMELEMENTCODE,
    TRANSPORTSTARTDATE,
    JENIS_ORDER,
    TGL_BERANGKAT,
    TANGGAL_BERANGKAT,
    ISSUE_DATE,
    KET_SHIPPING,
    TERMSOFSHIPPINGCODE,
    TERMSOFSHIPPINGDESCRIPTION,
    PAYMENTMETHODCODE,
    PRICE,
    UNIT,
    ITEMTYPEAFICODE,
    terms_shipping,
    terms_shipping_description,
    PROJECTCODE,
    SUBCODE01,
    SUBCODE05,
    EXTERNALREFERENCE,
    EXTERNALITEM,
    DLVSALORDERLINESALESORDERCODE,
    BRAND_NM,
    CUSTOMERSUPPLIERCODE,
    ADDRESSEE,
    COLOR_DESC,
    COUNTRY_NM,
    QUALITYREASONCODE,
    USERPRIMARYUOMCODE,
    QTY_KG,
    CASE
        WHEN USERSECONDARYUOMCODE = 'm' THEN BASESECONDARYQUANTITY
        WHEN USERSECONDARYUOMCODE = 'yd' THEN USERSECONDARYQUANTITY
        ELSE 0
    END QTY_YARDMETER,
    USERSECONDARYUOMCODE,
    CASE
        WHEN USERSECONDARYUOMCODE IN ('un') THEN qty_pcs
        ELSE 0
    END QTY_PCS,
    BASEPRIMARYUOMCODE,
    COUNTROLL,
    COUNTBALL,
    FOC_KG,
    CASE
        WHEN USERSECONDARYUOMCODE = 'm' THEN FOC_METER
        WHEN USERSECONDARYUOMCODE = 'yd' THEN FOC_YD
        ELSE 0
    END FOC_YARDMETER,
    JML_ROLL_FOC,
    COUNTERCODE
FROM
    (
        SELECT
            DISTINCT ITXVIEW_SUB_SURATJALAN_EXIM.PROVISIONALCODE,
            ALLOCATION.CODE AS ALLOCATIONCODE,
            ALLOCATION.ITEMELEMENTCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.TRANSPORTSTARTDATE,
            ITXVIEW_SUB_SURATJALAN_EXIM.JENIS_ORDER,
            ITXVIEW_SUB_SURATJALAN_EXIM.TGL_BERANGKAT,
            ITXVIEW_SUB_SURATJALAN_EXIM.TANGGAL_BERANGKAT,
            ITXVIEW_SUB_SURATJALAN_EXIM.ISSUE_DATE,
            ITXVIEW_SUB_SURATJALAN_EXIM.KET_SHIPPING,
            ITXVIEW_SUB_SURATJALAN_EXIM.TERMSOFSHIPPINGCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.TERMSOFSHIPPINGDESCRIPTION,
            ITXVIEW_SUB_SURATJALAN_EXIM.PAYMENTMETHODCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.PRICE,
            ITXVIEW_SUB_SURATJALAN_EXIM.UNIT,
            ITXVIEW_SUB_SURATJALAN_EXIM.ITEMTYPEAFICODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.terms_shipping,
            ITXVIEW_SUB_SURATJALAN_EXIM.terms_shipping_description,
            ITXVIEW_SUB_SURATJALAN_EXIM.PROJECTCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.SUBCODE01,
            ITXVIEW_SUB_SURATJALAN_EXIM.SUBCODE05,
            ITXVIEW_SUB_SURATJALAN_EXIM.EXTERNALREFERENCE,
            ITXVIEW_SUB_SURATJALAN_EXIM.EXTERNALITEM,
            ITXVIEW_SUB_SURATJALAN_EXIM.DLVSALORDERLINESALESORDERCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.BRAND_NM,
            ITXVIEW_SUB_SURATJALAN_EXIM.CUSTOMERSUPPLIERCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.ADDRESSEE,
            ITXVIEW_SUB_SURATJALAN_EXIM.COLOR_DESC,
            ITXVIEW_SUB_SURATJALAN_EXIM.COUNTRY_NM,
            E.QUALITYREASONCODE AS QUALITYREASONCODE,
            CASE
                WHEN E.QUALITYREASONCODE = 'FOC'
                AND ITXVIEW_SUB_SURATJALAN_EXIM.COUNTERCODE = 'DREPROV ' THEN ALLOCATION.USERPRIMARYQUANTITY
                WHEN E.QUALITYREASONCODE = 'FOC'
                AND ITXVIEW_SUB_SURATJALAN_EXIM.COUNTERCODE IN(
                    'EXDPROV', 'EXPPROV', 'PFEPROV'
                ) THEN 0
                ELSE ALLOCATION.USERPRIMARYQUANTITY
            END AS QTY_KG,
            CASE
                WHEN E.QUALITYREASONCODE = 'FOC'
                AND ITXVIEW_SUB_SURATJALAN_EXIM.COUNTERCODE = 'DREPROV ' THEN ALLOCATION.USERSECONDARYQUANTITY
                WHEN E.QUALITYREASONCODE = 'FOC'
                AND ITXVIEW_SUB_SURATJALAN_EXIM.COUNTERCODE IN(
                    'EXDPROV', 'EXPPROV', 'PFEPROV'
                ) THEN 0
                ELSE ALLOCATION.USERSECONDARYQUANTITY
            END AS USERSECONDARYQUANTITY,
            CASE
                WHEN E.QUALITYREASONCODE = 'FOC'
                AND ITXVIEW_SUB_SURATJALAN_EXIM.COUNTERCODE IN(
                    'DREDEF', 'DREPROV', 'DRDDEF', 'DRPPROV'
                ) THEN ROUND(ALLOCATION.BASESECONDARYQUANTITY * 0.9144, 2)
                WHEN E.QUALITYREASONCODE = 'FOC'
                AND ITXVIEW_SUB_SURATJALAN_EXIM.COUNTERCODE IN(
                    'EXDPROV', 'EXPPROV', 'PFEPROV'
                ) THEN 0
                ELSE ROUND(ALLOCATION.BASESECONDARYQUANTITY * 0.9144, 2)
            END BASESECONDARYQUANTITY,
            ALLOCATION.USERPRIMARYUOMCODE AS USERPRIMARYUOMCODE,
            ALLOCATION.USERSECONDARYUOMCODE AS USERSECONDARYUOMCODE,
            CASE
                WHEN E.QUALITYREASONCODE = 'FOC'
                AND ITXVIEW_SUB_SURATJALAN_EXIM.COUNTERCODE IN(
                    'DREDEF', 'DREPROV', 'DRDDEF', 'DRPPROV'
                ) THEN ALLOCATION.USERSECONDARYUSEDQUANTITY
                WHEN E.QUALITYREASONCODE = 'FOC'
                AND ITXVIEW_SUB_SURATJALAN_EXIM.COUNTERCODE IN(
                    'EXDPROV', 'EXPPROV', 'PFEPROV'
                ) THEN 0
                WHEN ALLOCATION.ITEMTYPECODE <> 'CAP' THEN round(ALLOCATION.USERSECONDARYUSEDQUANTITY , 2)
                WHEN ALLOCATION.ITEMTYPECODE = 'CAP'
                AND ALLOCATION.BASEPRIMARYUOMCODE IN (
                    'Lot', 'un'
                ) THEN ALLOCATION.BASEPRIMARYQUANTITY
                ELSE ALLOCATION.BASESECONDARYQUANTITY
            END qty_pcs,
            ALLOCATION.BASEPRIMARYUOMCODE,
            CASE
                WHEN ITXVIEW_SUB_SURATJALAN_EXIM.ITEMTYPEAFICODE = 'KFF' THEN COUNT(ALLOCATION.ITEMELEMENTCODE)
                ELSE 0
            END AS COUNTROLL,
            CASE
                WHEN ITXVIEW_SUB_SURATJALAN_EXIM.ITEMTYPEAFICODE = 'FKF' THEN COUNT(ALLOCATION.ITEMELEMENTCODE)
                ELSE 0
            END AS COUNTBALL,
            CASE
                WHEN E.QUALITYREASONCODE = 'FOC'
                AND ITXVIEW_SUB_SURATJALAN_EXIM.COUNTERCODE IN(
                    'EXDPROV', 'EXPPROV', 'PFEPROV'
                ) THEN ALLOCATION.USERPRIMARYQUANTITY
                ELSE 0
            END AS FOC_KG,
            CASE
                WHEN E.QUALITYREASONCODE = 'FOC'
                AND ITXVIEW_SUB_SURATJALAN_EXIM.COUNTERCODE IN(
                    'EXDPROV', 'EXPPROV', 'PFEPROV'
                ) THEN ALLOCATION.USERSECONDARYQUANTITY
                ELSE 0
            END AS FOC_YD,
            CASE
                WHEN E.QUALITYREASONCODE = 'FOC'
                AND ITXVIEW_SUB_SURATJALAN_EXIM.COUNTERCODE IN(
                    'EXDPROV', 'EXPPROV', 'PFEPROV'
                ) THEN ROUND(ALLOCATION.BASESECONDARYQUANTITY * 0.9144, 2)
                ELSE 0
            END AS FOC_METER,
            CASE
                WHEN E.QUALITYREASONCODE = 'FOC'
                AND ITXVIEW_SUB_SURATJALAN_EXIM.COUNTERCODE IN(
                    'EXDPROV', 'EXPPROV', 'PFEPROV'
                ) THEN COUNT(E.QUALITYREASONCODE)
                ELSE 0
            END AS JML_ROLL_FOC,
            ITXVIEW_SUB_SURATJALAN_EXIM.COUNTERCODE
        FROM
            ITXVIEW_SUB_SURATJALAN_EXIM ITXVIEW_SUB_SURATJALAN_EXIM
        LEFT JOIN (
                SELECT
                    *
                FROM
                    ALLOCATION ALLOCATION
                WHERE
                    ALLOCATION.DETAILTYPE = '0'
            )ALLOCATION ON
            ITXVIEW_SUB_SURATJALAN_EXIM.CODE = ALLOCATION.CODE
        LEFT JOIN ELEMENTS E ON
            ALLOCATION.ITEMELEMENTCODE = E.CODE
        WHERE
            ALLOCATION.ORIGINTRNTRANSACTIONNUMBER IS NULL
        GROUP BY
            ITXVIEW_SUB_SURATJALAN_EXIM.PROVISIONALCODE,
            ALLOCATION.CODE,
            ALLOCATION.ITEMELEMENTCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.TRANSPORTSTARTDATE,
            ITXVIEW_SUB_SURATJALAN_EXIM.JENIS_ORDER,
            ITXVIEW_SUB_SURATJALAN_EXIM.TGL_BERANGKAT,
            ITXVIEW_SUB_SURATJALAN_EXIM.TANGGAL_BERANGKAT,
            ITXVIEW_SUB_SURATJALAN_EXIM.ISSUE_DATE,
            ITXVIEW_SUB_SURATJALAN_EXIM.KET_SHIPPING,
            ITXVIEW_SUB_SURATJALAN_EXIM.TERMSOFSHIPPINGCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.TERMSOFSHIPPINGDESCRIPTION,
            ITXVIEW_SUB_SURATJALAN_EXIM.PAYMENTMETHODCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.PRICE,
            ITXVIEW_SUB_SURATJALAN_EXIM.UNIT,
            ITXVIEW_SUB_SURATJALAN_EXIM.ITEMTYPEAFICODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.terms_shipping,
            ITXVIEW_SUB_SURATJALAN_EXIM.terms_shipping_description,
            ITXVIEW_SUB_SURATJALAN_EXIM.PROJECTCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.SUBCODE01,
            ITXVIEW_SUB_SURATJALAN_EXIM.SUBCODE05,
            ITXVIEW_SUB_SURATJALAN_EXIM.EXTERNALREFERENCE,
            ITXVIEW_SUB_SURATJALAN_EXIM.EXTERNALITEM,
            ITXVIEW_SUB_SURATJALAN_EXIM.DLVSALORDERLINESALESORDERCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.BRAND_NM,
            ITXVIEW_SUB_SURATJALAN_EXIM.CUSTOMERSUPPLIERCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.ADDRESSEE,
            ITXVIEW_SUB_SURATJALAN_EXIM.COLOR_DESC,
            ITXVIEW_SUB_SURATJALAN_EXIM.COUNTRY_NM,
            ITXVIEW_SUB_SURATJALAN_EXIM.COUNTERCODE,
            ALLOCATION.ITEMELEMENTCODE,
            E.QUALITYREASONCODE,
            ALLOCATION.ITEMTYPECODE,
            ALLOCATION.BASESECONDARYQUANTITY,
            ALLOCATION.USERPRIMARYQUANTITY,
            ALLOCATION.USERPRIMARYUOMCODE,
            ALLOCATION.USERSECONDARYQUANTITY,
            ALLOCATION.USERSECONDARYUOMCODE,
            ALLOCATION.BASEPRIMARYUOMCODE,
            ALLOCATION.BASEPRIMARYQUANTITY,
            ALLOCATION.USERSECONDARYUSEDQUANTITY
    );


-- DB2ADMIN.ITXVIEW_SURATJALAN_EXIM2A source

CREATE VIEW ITXVIEW_SURATJALAN_EXIM2A AS
SELECT
    DISTINCT
    PROVISIONALCODE,
    COMPANYCODE,
    ALLOCATIONCODE ,
    ITEMELEMENTCODE,
    TRANSPORTSTARTDATE,
    JENIS_ORDER,
    TGL_BERANGKAT,
    TANGGAL_BERANGKAT,
    ISSUE_DATE,
    KET_SHIPPING,
    TERMSOFSHIPPINGCODE,
    TERMSOFSHIPPINGDESCRIPTION,
    PAYMENTMETHODCODE,
    PRICE,
    UNIT,
    ITEMTYPEAFICODE,
    terms_shipping,
    terms_shipping_description,
    PROJECTCODE,
    SUBCODE01,
    SUBCODE05,
    EXTERNALREFERENCE,
    EXTERNALITEM,
    DLVSALORDERLINESALESORDERCODE,
    BRAND_NM,
    CUSTOMERSUPPLIERCODE,
    ADDRESSEE,
    --    COLOR_DESC,
    COUNTRY_NM,
    QUALITYREASONCODE,
    USERPRIMARYUOMCODE,
    QTY_KG,
     CASE
        WHEN USERSECONDARYUOMCODE = 'm' THEN BASESECONDARYQUANTITY
        WHEN USERSECONDARYUOMCODE = 'yd' THEN USERSECONDARYQUANTITY
        ELSE 0
    END QTY_YARDMETER,
    USERSECONDARYUOMCODE,
    CASE
        WHEN USERSECONDARYUOMCODE IN ('un') THEN qty_pcs
        ELSE 0
    END QTY_PCS,
    BASESECONDARYUOMCODE,
    CASE
        WHEN USERSECONDARYUOMCODE = 'm' THEN 'Meter'
        WHEN USERSECONDARYUOMCODE = 'yd' THEN 'Yards'
        ELSE ''
    END KET_YARDMETER,
    FOC_KG,
    CASE
        WHEN USERSECONDARYUOMCODE = 'm' THEN FOC_METER
        WHEN USERSECONDARYUOMCODE = 'yd' THEN FOC_YD
        ELSE 0
    END FOC_YARDMETER,
    JML_ROLL_FOC,
    COUNTROLL,
    COUNTBALL,
    COUNTERCODE
FROM
    (
        SELECT
            DISTINCT
        ITXVIEW_SUB_SURATJALAN_EXIM.PROVISIONALCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.COMPANYCODE,
            ALLOCATION.CODE AS ALLOCATIONCODE,
            ALLOCATION.ITEMELEMENTCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.TRANSPORTSTARTDATE,
            ITXVIEW_SUB_SURATJALAN_EXIM.JENIS_ORDER,
            ITXVIEW_SUB_SURATJALAN_EXIM.TGL_BERANGKAT,
            ITXVIEW_SUB_SURATJALAN_EXIM.TANGGAL_BERANGKAT,
            ITXVIEW_SUB_SURATJALAN_EXIM.ISSUE_DATE,
            ITXVIEW_SUB_SURATJALAN_EXIM.KET_SHIPPING,
            ITXVIEW_SUB_SURATJALAN_EXIM.TERMSOFSHIPPINGCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.TERMSOFSHIPPINGDESCRIPTION,
            ITXVIEW_SUB_SURATJALAN_EXIM.PAYMENTMETHODCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.PRICE,
            ITXVIEW_SUB_SURATJALAN_EXIM.UNIT,
            ITXVIEW_SUB_SURATJALAN_EXIM.ITEMTYPEAFICODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.terms_shipping,
            ITXVIEW_SUB_SURATJALAN_EXIM.terms_shipping_description,
            ITXVIEW_SUB_SURATJALAN_EXIM.PROJECTCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.SUBCODE01,
            ITXVIEW_SUB_SURATJALAN_EXIM.SUBCODE05,
            ITXVIEW_SUB_SURATJALAN_EXIM.EXTERNALREFERENCE,
            ITXVIEW_SUB_SURATJALAN_EXIM.EXTERNALITEM,
            ITXVIEW_SUB_SURATJALAN_EXIM.DLVSALORDERLINESALESORDERCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.BRAND_NM,
            ITXVIEW_SUB_SURATJALAN_EXIM.CUSTOMERSUPPLIERCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.ADDRESSEE,
            ITXVIEW_SUB_SURATJALAN_EXIM.COLOR_DESC,
            ITXVIEW_SUB_SURATJALAN_EXIM.COUNTRY_NM,
            E.QUALITYREASONCODE AS QUALITYREASONCODE,
            CASE
                WHEN E.QUALITYREASONCODE = 'FOC'
                AND ITXVIEW_SUB_SURATJALAN_EXIM.COUNTERCODE = 'DREPROV ' THEN ALLOCATION.USERPRIMARYQUANTITY
                WHEN E.QUALITYREASONCODE = 'FOC'
                AND ITXVIEW_SUB_SURATJALAN_EXIM.COUNTERCODE <> 'DREPROV ' THEN 0
                ELSE ALLOCATION.USERPRIMARYQUANTITY
            END AS QTY_KG,
            CASE
                WHEN E.QUALITYREASONCODE = 'FOC'
                AND ITXVIEW_SUB_SURATJALAN_EXIM.COUNTERCODE = 'DREPROV ' THEN ALLOCATION.USERSECONDARYQUANTITY
                WHEN E.QUALITYREASONCODE = 'FOC'
                AND ITXVIEW_SUB_SURATJALAN_EXIM.COUNTERCODE <> 'DREPROV ' THEN 0
                ELSE ALLOCATION.USERSECONDARYQUANTITY
            END AS USERSECONDARYQUANTITY,
            CASE
                WHEN E.QUALITYREASONCODE = 'FOC'
                AND ITXVIEW_SUB_SURATJALAN_EXIM.COUNTERCODE IN(
                    'DREDEF', 'DREPROV', 'DRDDEF', 'DRPPROV'
                ) THEN ALLOCATION.BASESECONDARYQUANTITY
                WHEN E.QUALITYREASONCODE = 'FOC'
                AND ITXVIEW_SUB_SURATJALAN_EXIM.COUNTERCODE IN(
                    'EXDPROV', 'EXPPROV', 'PFEPROV'
                ) THEN 0
                ELSE ROUND(ALLOCATION.BASESECONDARYQUANTITY * 0.9144, 2)
            END BASESECONDARYQUANTITY,
            trim(ALLOCATION.USERPRIMARYUOMCODE) AS USERPRIMARYUOMCODE,
            trim(ALLOCATION.USERSECONDARYUOMCODE) AS USERSECONDARYUOMCODE,
            CASE
                WHEN E.QUALITYREASONCODE = 'FOC'
                AND ITXVIEW_SUB_SURATJALAN_EXIM.COUNTERCODE IN(
                    'DREDEF', 'DREPROV', 'DRDDEF', 'DRPPROV'
                ) THEN ALLOCATION.BASESECONDARYQUANTITY
                WHEN E.QUALITYREASONCODE = 'FOC'
                AND ITXVIEW_SUB_SURATJALAN_EXIM.COUNTERCODE IN(
                    'EXDPROV', 'EXPPROV', 'PFEPROV'
                ) THEN 0
                WHEN ALLOCATION.ITEMTYPECODE <> 'CAP' THEN round(ALLOCATION.BASESECONDARYQUANTITY , 2)
                WHEN ALLOCATION.ITEMTYPECODE = 'CAP'
                AND ALLOCATION.BASEPRIMARYUOMCODE IN (
                    'Lot', 'un'
                ) THEN ALLOCATION.BASEPRIMARYQUANTITY
                ELSE ALLOCATION.BASESECONDARYQUANTITY
            END qty_pcs,
            TRIM(ALLOCATION.BASESECONDARYUOMCODE) BASESECONDARYUOMCODE ,
            CASE
                WHEN ITXVIEW_SUB_SURATJALAN_EXIM.ITEMTYPEAFICODE = 'KFF' THEN COUNT(ALLOCATION.ITEMELEMENTCODE)
                ELSE 0
            END AS COUNTROLL,
            CASE
                WHEN ITXVIEW_SUB_SURATJALAN_EXIM.ITEMTYPEAFICODE = 'FKF' THEN COUNT(ALLOCATION.ITEMELEMENTCODE)
                ELSE 0
            END AS COUNTBALL,
            CASE
                WHEN E.QUALITYREASONCODE = 'FOC'
                AND ITXVIEW_SUB_SURATJALAN_EXIM.COUNTERCODE IN(
                    'EXDPROV', 'EXPPROV', 'PFEPROV'
                ) THEN ALLOCATION.USERPRIMARYQUANTITY
                ELSE 0
            END AS FOC_KG,
            CASE
                WHEN E.QUALITYREASONCODE = 'FOC'
                AND ITXVIEW_SUB_SURATJALAN_EXIM.COUNTERCODE IN(
                    'EXDPROV', 'EXPPROV', 'PFEPROV'
                ) THEN ALLOCATION.USERSECONDARYQUANTITY
                ELSE 0
            END AS FOC_YD,
            CASE
                WHEN E.QUALITYREASONCODE = 'FOC'
                AND ITXVIEW_SUB_SURATJALAN_EXIM.COUNTERCODE IN(
                    'EXDPROV', 'EXPPROV', 'PFEPROV'
                ) THEN ROUND(ALLOCATION.BASESECONDARYQUANTITY * 0.9144, 2)
                ELSE 0
            END AS FOC_METER,
            CASE
                WHEN E.QUALITYREASONCODE = 'FOC'
                AND ITXVIEW_SUB_SURATJALAN_EXIM.COUNTERCODE IN(
                    'EXDPROV', 'EXPPROV', 'PFEPROV'
                ) THEN COUNT(E.QUALITYREASONCODE)
                ELSE 0
            END AS JML_ROLL_FOC,
            ITXVIEW_SUB_SURATJALAN_EXIM.COUNTERCODE
        FROM
            ITXVIEW_SUB_SURATJALAN_EXIM ITXVIEW_SUB_SURATJALAN_EXIM
        LEFT JOIN (
                SELECT
                    *
                FROM
                    ALLOCATION ALLOCATION
                WHERE
                    ALLOCATION.DETAILTYPE = '0'
            )ALLOCATION ON
            ITXVIEW_SUB_SURATJALAN_EXIM.CODE = ALLOCATION.CODE
            AND ITXVIEW_SUB_SURATJALAN_EXIM.COMPANYCODE = ALLOCATION.COMPANYCODE
        LEFT JOIN ELEMENTS E ON
            ALLOCATION.ITEMELEMENTCODE = E.CODE
            AND ITXVIEW_SUB_SURATJALAN_EXIM.COMPANYCODE = E.COMPANYCODE
        WHERE
            ALLOCATION.ORIGINTRNTRANSACTIONNUMBER IS NULL
            --                                    	AND ITXVIEW_SUB_SURATJALAN_EXIM.PROVISIONALCODE IN('PSM2301135')
            --    	AND ITXVIEW_SUB_SURATJALAN_EXIM.PROVISIONALCODE LIKE '%ESP22003%'
        GROUP BY
            ITXVIEW_SUB_SURATJALAN_EXIM.PROVISIONALCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.COMPANYCODE,
            ALLOCATION.CODE,
            ALLOCATION.ITEMELEMENTCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.TRANSPORTSTARTDATE,
            ITXVIEW_SUB_SURATJALAN_EXIM.JENIS_ORDER,
            ITXVIEW_SUB_SURATJALAN_EXIM.TGL_BERANGKAT,
            ITXVIEW_SUB_SURATJALAN_EXIM.TANGGAL_BERANGKAT,
            ITXVIEW_SUB_SURATJALAN_EXIM.ISSUE_DATE,
            ITXVIEW_SUB_SURATJALAN_EXIM.KET_SHIPPING,
            ITXVIEW_SUB_SURATJALAN_EXIM.TERMSOFSHIPPINGCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.TERMSOFSHIPPINGDESCRIPTION,
            ITXVIEW_SUB_SURATJALAN_EXIM.PAYMENTMETHODCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.PRICE,
            ITXVIEW_SUB_SURATJALAN_EXIM.UNIT,
            ITXVIEW_SUB_SURATJALAN_EXIM.ITEMTYPEAFICODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.terms_shipping,
            ITXVIEW_SUB_SURATJALAN_EXIM.terms_shipping_description,
            ITXVIEW_SUB_SURATJALAN_EXIM.PROJECTCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.SUBCODE01,
            ITXVIEW_SUB_SURATJALAN_EXIM.SUBCODE05,
            ITXVIEW_SUB_SURATJALAN_EXIM.EXTERNALREFERENCE,
            ITXVIEW_SUB_SURATJALAN_EXIM.EXTERNALITEM,
            ITXVIEW_SUB_SURATJALAN_EXIM.DLVSALORDERLINESALESORDERCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.BRAND_NM,
            ITXVIEW_SUB_SURATJALAN_EXIM.CUSTOMERSUPPLIERCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.ADDRESSEE,
            ITXVIEW_SUB_SURATJALAN_EXIM.COLOR_DESC,
            ITXVIEW_SUB_SURATJALAN_EXIM.COUNTRY_NM,
            ITXVIEW_SUB_SURATJALAN_EXIM.COUNTERCODE,
            ALLOCATION.ITEMELEMENTCODE,
            E.QUALITYREASONCODE,
            ALLOCATION.ITEMTYPECODE,
            ALLOCATION.BASESECONDARYQUANTITY,
            ALLOCATION.USERPRIMARYQUANTITY,
            ALLOCATION.USERPRIMARYUOMCODE,
            ALLOCATION.USERSECONDARYQUANTITY,
            ALLOCATION.USERSECONDARYUOMCODE,
            ALLOCATION.BASESECONDARYUOMCODE,
            ALLOCATION.BASEPRIMARYQUANTITY,
            allocation.BASEPRIMARYUOMCODE,
            ALLOCATION.USERSECONDARYUSEDQUANTITY
    )
    --        WHERE PROVISIONALCODE ='PSM2301135';


-- DB2ADMIN.ITXVIEW_SURATJALAN_EXIM3 source

CREATE VIEW ITXVIEW_SURATJALAN_EXIM3 AS
SELECT
    DISTINCT PROVISIONALCODE,
    CODE,
    elementcode,
    TRANSPORTSTARTDATE,
    JENIS_ORDER,
    TGL_BERANGKAT,
    TANGGAL_BERANGKAT,
    ISSUE_DATE,
    KET_SHIPPING,
    TERMSOFSHIPPINGCODE,
    TERMSOFSHIPPINGDESCRIPTION,
    PAYMENTMETHODCODE,
    PRICE,
    UNIT,
    ITEMTYPEAFICODE,
    terms_shipping,
    terms_shipping_description,
    lc_number,
    IssuingBank,
    PROJECTCODE,
    SUBCODE01,
    SUBCODE05,
    EXTERNALREFERENCE,
    EXTERNALITEM,
    DLVSALORDERLINESALESORDERCODE,
    BRAND_NM,
    CUSTOMERSUPPLIERCODE,
    ADDRESSEE,
    COUNTRY_NM,
    COUNTROLL,
    COUNTBALL,
    QTY_KG,
    CASE
        WHEN ITEMTYPEAFICODE = 'KFF' THEN QTY_YARD
        ELSE 0
    END AS QTY_YARD,
    CASE
        WHEN ITEMTYPEAFICODE = 'FKF' THEN QTY_YARD
        ELSE 0
    END AS QTY_PCS,
    QUALITYREASONCODE
FROM
    (
        SELECT
            ITXVIEW_DETAIL_EXIM.PROVISIONALCODE,
            ITXVIEW_DETAIL_EXIM.CODE AS code,
            ITXVIEW_DETAIL_EXIM.ITEMELEMENTCODE AS elementcode,
            ITXVIEW_DETAIL_EXIM.LOTCODE AS LOTCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.TRANSPORTSTARTDATE,
            ITXVIEW_SUB_SURATJALAN_EXIM.JENIS_ORDER,
            ITXVIEW_SUB_SURATJALAN_EXIM.TGL_BERANGKAT,
            ITXVIEW_SUB_SURATJALAN_EXIM.TANGGAL_BERANGKAT,
            ITXVIEW_SUB_SURATJALAN_EXIM.ISSUE_DATE,
            ITXVIEW_SUB_SURATJALAN_EXIM.KET_SHIPPING,
            ITXVIEW_SUB_SURATJALAN_EXIM.TERMSOFSHIPPINGCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.TERMSOFSHIPPINGDESCRIPTION,
            ITXVIEW_SUB_SURATJALAN_EXIM.PAYMENTMETHODCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.PRICE,
            ITXVIEW_SUB_SURATJALAN_EXIM.UNIT,
            ITXVIEW_SUB_SURATJALAN_EXIM.ITEMTYPEAFICODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.terms_shipping,
            ITXVIEW_SUB_SURATJALAN_EXIM.terms_shipping_description,
            a.VALUESTRING AS lc_number,
            a2.VALUESTRING AS IssuingBank,
            ITXVIEW_SUB_SURATJALAN_EXIM.PROJECTCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.SUBCODE01,
            ITXVIEW_SUB_SURATJALAN_EXIM.SUBCODE05,
            ITXVIEW_SUB_SURATJALAN_EXIM.EXTERNALREFERENCE,
            ITXVIEW_SUB_SURATJALAN_EXIM.EXTERNALITEM,
            ITXVIEW_SUB_SURATJALAN_EXIM.DLVSALORDERLINESALESORDERCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.BRAND_NM,
            ITXVIEW_SUB_SURATJALAN_EXIM.CUSTOMERSUPPLIERCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.ADDRESSEE,
            ITXVIEW_SUB_SURATJALAN_EXIM.COUNTRY_NM,
            E.QUALITYREASONCODE,
            count(ITXVIEW_DETAIL_EXIM.CODE) AS jml_roll,
            CASE
                WHEN ITXVIEW_SUB_SURATJALAN_EXIM.ITEMTYPEAFICODE = 'KFF' THEN 1
                ELSE 0
            END AS COUNTROLL,
            CASE
                WHEN ITXVIEW_SUB_SURATJALAN_EXIM.ITEMTYPEAFICODE = 'FKF' THEN 1
                ELSE 0
            END AS COUNTBALL,
            CASE
                WHEN E.QUALITYREASONCODE = 'FOC' THEN ITXVIEW_DETAIL_EXIM.USERPRIMARYQUANTITY * 0
                ELSE ITXVIEW_DETAIL_EXIM.USERPRIMARYQUANTITY
            END AS QTY_KG,
            CASE
                WHEN E.QUALITYREASONCODE = 'FOC' THEN round(ITXVIEW_DETAIL_EXIM.USERSECONDARYQUANTITY, 2) * 0
                ELSE round(ITXVIEW_DETAIL_EXIM.USERSECONDARYQUANTITY, 2)
            END AS QTY_YARD,
            CASE
                WHEN E.QUALITYREASONCODE = 'FOC' THEN (
                    ITXVIEW_DETAIL_EXIM.USERPRIMARYQUANTITY + 0.6
                ) * 0
                ELSE ITXVIEW_DETAIL_EXIM.USERPRIMARYQUANTITY + 0.6
            END AS jml_gw
        FROM
            ITXVIEW_DETAIL_EXIM ITXVIEW_DETAIL_EXIM
        LEFT JOIN ITXVIEW_SUB_SURATJALAN_EXIM ITXVIEW_SUB_SURATJALAN_EXIM ON
            ITXVIEW_SUB_SURATJALAN_EXIM.PROVISIONALCODE = ITXVIEW_DETAIL_EXIM.PROVISIONALCODE
            AND ITXVIEW_SUB_SURATJALAN_EXIM.CODE = ITXVIEW_DETAIL_EXIM.CODE
        LEFT JOIN ELEMENTSINSPECTION E ON
            ITXVIEW_DETAIL_EXIM.ITEMELEMENTCODE = E.ELEMENTCODE
        LEFT JOIN SALESDOCUMENT s ON
            s.PROVISIONALCODE = ITXVIEW_DETAIL_EXIM.PROVISIONALCODE
        LEFT JOIN ADSTORAGE a ON
            a.UNIQUEID = s.ABSUNIQUEID
            AND a.NAMENAME = 'LCNumber'
        LEFT JOIN ADSTORAGE a2 ON
            a2.UNIQUEID = s.ABSUNIQUEID
            AND a2.NAMENAME = 'IssuingBank'
        GROUP BY
            ITXVIEW_DETAIL_EXIM.PROVISIONALCODE,
            ITXVIEW_DETAIL_EXIM.CODE,
            ITXVIEW_DETAIL_EXIM.ITEMELEMENTCODE,
            ITXVIEW_DETAIL_EXIM.LOTCODE,
            ITXVIEW_DETAIL_EXIM.USERPRIMARYQUANTITY,
            ITXVIEW_DETAIL_EXIM.USERSECONDARYQUANTITY,
            ITXVIEW_SUB_SURATJALAN_EXIM.TRANSPORTSTARTDATE,
            ITXVIEW_SUB_SURATJALAN_EXIM.JENIS_ORDER,
            ITXVIEW_SUB_SURATJALAN_EXIM.TGL_BERANGKAT,
            ITXVIEW_SUB_SURATJALAN_EXIM.TANGGAL_BERANGKAT,
            ITXVIEW_SUB_SURATJALAN_EXIM.ISSUE_DATE,
            ITXVIEW_SUB_SURATJALAN_EXIM.KET_SHIPPING,
            ITXVIEW_SUB_SURATJALAN_EXIM.TERMSOFSHIPPINGCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.TERMSOFSHIPPINGDESCRIPTION,
            ITXVIEW_SUB_SURATJALAN_EXIM.PAYMENTMETHODCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.PRICE,
            ITXVIEW_SUB_SURATJALAN_EXIM.UNIT,
            ITXVIEW_SUB_SURATJALAN_EXIM.ITEMTYPEAFICODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.terms_shipping,
            ITXVIEW_SUB_SURATJALAN_EXIM.terms_shipping_description,
            a.VALUESTRING,
            a2.VALUESTRING,
            ITXVIEW_SUB_SURATJALAN_EXIM.PROJECTCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.SUBCODE01,
            ITXVIEW_SUB_SURATJALAN_EXIM.SUBCODE05,
            ITXVIEW_SUB_SURATJALAN_EXIM.EXTERNALREFERENCE,
            ITXVIEW_SUB_SURATJALAN_EXIM.EXTERNALITEM,
            ITXVIEW_SUB_SURATJALAN_EXIM.DLVSALORDERLINESALESORDERCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.BRAND_NM,
            ITXVIEW_SUB_SURATJALAN_EXIM.CUSTOMERSUPPLIERCODE,
            ITXVIEW_SUB_SURATJALAN_EXIM.ADDRESSEE,
            ITXVIEW_SUB_SURATJALAN_EXIM.COUNTRY_NM,
            E.QUALITYREASONCODE
    )
GROUP BY
    PROVISIONALCODE,
    CODE,
    elementcode,
    TRANSPORTSTARTDATE,
    JENIS_ORDER,
    TGL_BERANGKAT,
    TANGGAL_BERANGKAT,
    ISSUE_DATE,
    KET_SHIPPING,
    TERMSOFSHIPPINGCODE,
    TERMSOFSHIPPINGDESCRIPTION,
    PAYMENTMETHODCODE,
    PRICE,
    UNIT,
    ITEMTYPEAFICODE,
    terms_shipping,
    terms_shipping_description,
    lc_number,
    IssuingBank,
    PROJECTCODE,
    SUBCODE01,
    SUBCODE05,
    EXTERNALREFERENCE,
    EXTERNALITEM,
    DLVSALORDERLINESALESORDERCODE,
    BRAND_NM,
    CUSTOMERSUPPLIERCODE,
    ADDRESSEE,
    COUNTRY_NM,
    COUNTROLL,
    COUNTBALL,
    QTY_KG,
    QTY_YARD,
    QUALITYREASONCODE;


-- DB2ADMIN.ITXVIEW_SURATJALAN_EXIM_COUNT_JMLORDER source

CREATE VIEW ITXVIEW_SURATJALAN_EXIM_COUNT_JMLORDER AS
SELECT
    SD.PROVISIONALCODE,
    COUNT(ITXVIEW_SUB_SURATJALAN_EXIM.PROJECTCODE) AS JMLORDER
FROM
    SALESDOCUMENT SD
LEFT JOIN ITXVIEW_SUB_SURATJALAN_EXIM ITXVIEW_SUB_SURATJALAN_EXIM ON
    SD.PROVISIONALCODE = ITXVIEW_SUB_SURATJALAN_EXIM.PROVISIONALCODE
GROUP BY
    SD.PROVISIONALCODE;


-- DB2ADMIN.ITXVIEW_SURATJALAN_EXIM_FOC source

CREATE VIEW ITXVIEW_SURATJALAN_EXIM_FOC AS
SELECT
    ALLOCATION.LOTCODE,
    ALLOCATION.CODE,
    ALLOCATION.USERPRIMARYQUANTITY,
    ROUND(ALLOCATION.USERSECONDARYQUANTITY, 2) AS USERSECONDARYQUANTITY,
    ALLOCATION.ITEMELEMENTCODE,
    ITXVIEW_PACKINGLIST_EXIM.PROVISIONALCODE,
    ALLOCATION.PROJECTCODE,
    E.QUALITYREASONCODE,
    E.ELEMENTCODE
FROM
    ITXVIEW_PACKINGLIST_EXIM ITXVIEW_PACKINGLIST_EXIM
LEFT JOIN (
        SELECT
            *
        FROM
            ALLOCATION ALLOCATION
        WHERE
            ALLOCATION.DETAILTYPE = '0'
    )ALLOCATION ON
    ITXVIEW_PACKINGLIST_EXIM.CODE = ALLOCATION.CODE
LEFT JOIN ELEMENTSINSPECTION E ON
    ALLOCATION.ITEMELEMENTCODE = E.ELEMENTCODE
WHERE
    ALLOCATION.ORIGINTRNTRANSACTIONNUMBER IS NULL;


-- DB2ADMIN.ITXVIEW_SURATJALAN_PPC source

CREATE VIEW ITXVIEW_SURATJALAN_PPC AS
SELECT
    DISTINCT 
    SUBSTR(SALESDOCUMENTLINE.DLVSALORDERLINESALESORDERCODE, 1, 3) AS TIPE,
    BUSINESSPARTNER.NUMBERID,
    BUSINESSPARTNER.LEGALNAME1,
    BUSINESSPARTNER.ADDRESSPHONENUMBER,
    BUSINESSPARTNER.ADDRESSFAXNUMBER,
    ALLOCATION.CODE,
    ALLOCATION.DECOSUBCODE01,
    ALLOCATION.DECOSUBCODE02,
    ALLOCATION.DECOSUBCODE03,
    ALLOCATION.DECOSUBCODE04,
    ALLOCATION.DECOSUBCODE05,
    ALLOCATION.DECOSUBCODE06,
    ALLOCATION.DECOSUBCODE07,
    ALLOCATION.DECOSUBCODE08,
    ALLOCATION.DECOSUBCODE09,
    ALLOCATION.DECOSUBCODE10,
    ALLOCATION.BASESECONDARYUOMCODE,
    --    WRKDOCUMENTPRINT.DELIVERYPOINTADDRESSLINE1,
    --    WRKDOCUMENTPRINT.DELIVERYPOINTADDRESSLINE2,
    --    WRKDOCUMENTPRINT.DELIVERYPOINTADDRESSLINE3,
    --    WRKDOCUMENTPRINT.DELIVERYPOINTPOSTALCODE,
    --    WRKDOCUMENTPRINT.DELIVERYPOINTTOWN,
    --    WRKDOCUMENTPRINT.DELIVERYPOINTDISTRICT,
    SALESDOCUMENT.PROJECTCODE,
    SALESDOCUMENT.PROVISIONALCODE,
    SALESDOCUMENT.PROVISIONALDOCUMENTDATE,
    SALESDOCUMENT.ORDPRNCUSTOMERSUPPLIERCODE,
    SALESDOCUMENT.ORDERPARTNERBRANDCODE,
    SALESDOCUMENT.GOODSISSUEDATE,
    SALESDOCUMENT.ABSUNIQUEID,
    CASE
        WHEN SALESDOCUMENTLINE.EXTERNALREFERENCE IS NULL THEN SALESDOCUMENT.EXTERNALREFERENCE
        ELSE SALESDOCUMENTLINE.EXTERNALREFERENCE
    END AS PO_NUMBER,
    SALESDOCUMENTLINE.ITEMTYPEAFICODE,
    SALESDOCUMENTLINE.SUBCODE01,
    SALESDOCUMENTLINE.SUBCODE02,
    SALESDOCUMENTLINE.SUBCODE03,
    SALESDOCUMENTLINE.SUBCODE04,
    TRIM(SALESDOCUMENTLINE.SUBCODE05) AS SUBCODE05,
    SALESDOCUMENTLINE.SUBCODE06,
    SALESDOCUMENTLINE.SUBCODE07,
    SALESDOCUMENTLINE.SUBCODE08,
    SALESDOCUMENTLINE.SUBCODE09,
    SALESDOCUMENTLINE.SUBCODE10,
    SALESDOCUMENTLINE.ITEMDESCRIPTION,
    SALESDOCUMENTLINE.DLVSALORDERLINESALESORDERCODE,
    CASE
        WHEN a.VALUESTRING IS NOT NULL THEN CAST(
            a.VALUESTRING AS decimal(5)
        )
        ELSE CAST(
            SALESDOCUMENTLINE.DLVSALESORDERLINEORDERLINE AS decimal(5)
        )
    END DLVSALESORDERLINEORDERLINE,
    SALESDOCUMENT.PAYMENTMETHODCODE,
    SALESDOCUMENT.CURRENCYCODE,
    SALESDOCUMENTLINE.PRICE,
    SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE,
    ORDERPARTNERBRAND.LONGDESCRIPTION
FROM
    BUSINESSPARTNER BUSINESSPARTNER
LEFT JOIN CUSTOMERSUPPLIERDATA CUSTOMERSUPPLIERDATA ON
    CUSTOMERSUPPLIERDATA.BUSINESSPARTNERNUMBERID = BUSINESSPARTNER.NUMBERID
LEFT JOIN ALLOCATION ALLOCATION ON
    ALLOCATION.CUSTOMERCODE = CUSTOMERSUPPLIERDATA.CODE
RIGHT JOIN WRKDOCUMENTPRINT WRKDOCUMENTPRINT ON
    WRKDOCUMENTPRINT.SALESDOCUMENTPROVISIONALCODE = ALLOCATION.ORDERCODE
RIGHT JOIN SALESDOCUMENT SALESDOCUMENT ON
    SALESDOCUMENT.PROVISIONALCODE = WRKDOCUMENTPRINT.SALESDOCUMENTPROVISIONALCODE
LEFT JOIN SALESDOCUMENTLINE SALESDOCUMENTLINE ON
    ALLOCATION.ORDERCODE = SALESDOCUMENTLINE.SALESDOCUMENTPROVISIONALCODE
    AND ALLOCATION.ORDERLINE = SALESDOCUMENTLINE.ORDERLINE
    AND ALLOCATION.ITEMTYPECODE = SALESDOCUMENTLINE.ITEMTYPEAFICODE
    AND ALLOCATION.DECOSUBCODE01 = SALESDOCUMENTLINE.SUBCODE01
    AND ALLOCATION.DECOSUBCODE02 = SALESDOCUMENTLINE.SUBCODE02
    AND ALLOCATION.DECOSUBCODE03 = SALESDOCUMENTLINE.SUBCODE03
    AND ALLOCATION.DECOSUBCODE04 = SALESDOCUMENTLINE.SUBCODE04
    AND ALLOCATION.DECOSUBCODE05 = SALESDOCUMENTLINE.SUBCODE05
    AND ALLOCATION.DECOSUBCODE06 = SALESDOCUMENTLINE.SUBCODE06
    AND ALLOCATION.DECOSUBCODE07 = SALESDOCUMENTLINE.SUBCODE07
    AND ALLOCATION.DECOSUBCODE08 = SALESDOCUMENTLINE.SUBCODE08
    AND ALLOCATION.DECOSUBCODE09 = SALESDOCUMENTLINE.SUBCODE09
    AND ALLOCATION.DECOSUBCODE10 = SALESDOCUMENTLINE.SUBCODE10
LEFT OUTER JOIN ORDERPARTNERBRAND ORDERPARTNERBRAND ON
    SALESDOCUMENT.ORDERPARTNERBRANDCODE = ORDERPARTNERBRAND.CODE
    AND SALESDOCUMENT.ORDPRNCUSTOMERSUPPLIERCODE = ORDERPARTNERBRAND.ORDPRNCUSTOMERSUPPLIERCODE
LEFT JOIN SALESORDERLINE s ON
    s.SALESORDERCODE = SALESDOCUMENTLINE.DLVSALORDERLINESALESORDERCODE
    AND s.ORDERLINE = SALESDOCUMENTLINE.DLVSALESORDERLINEORDERLINE
LEFT JOIN ADSTORAGE a ON
    a.UNIQUEID = s.ABSUNIQUEID
    AND a.NAMENAME = 'SampleComments5'
WHERE
    ALLOCATION.ORIGINTRNTRANSACTIONNUMBER IS NULL
    --    AND SALESDOCUMENT.PROVISIONALCODE = 'PCA2400002'
    --    AND SALESDOCUMENTLINE.DLVSALORDERLINESALESORDERCODE = 'DOM2300265';


-- DB2ADMIN.ITXVIEW_SURATJALAN_PPC2 source

CREATE VIEW ITXVIEW_SURATJALAN_PPC2 AS
SELECT
    DISTINCT 
    SUBSTR(SALESDOCUMENTLINE.DLVSALORDERLINESALESORDERCODE, 1, 3) AS TIPE,
    BUSINESSPARTNER.NUMBERID,
    BUSINESSPARTNER.LEGALNAME1,
    BUSINESSPARTNER.ADDRESSPHONENUMBER,
    BUSINESSPARTNER.ADDRESSFAXNUMBER,
    ALLOCATION.CODE,
    ALLOCATION.DECOSUBCODE01,
    ALLOCATION.DECOSUBCODE02,
    ALLOCATION.DECOSUBCODE03,
    ALLOCATION.DECOSUBCODE04,
    ALLOCATION.DECOSUBCODE05,
    ALLOCATION.DECOSUBCODE06,
    ALLOCATION.DECOSUBCODE07,
    ALLOCATION.DECOSUBCODE08,
    ALLOCATION.DECOSUBCODE09,
    ALLOCATION.DECOSUBCODE10,
    ALLOCATION.BASESECONDARYUOMCODE,
    SALESDOCUMENT.PROJECTCODE,
    SALESDOCUMENT.PROVISIONALCODE,
    SALESDOCUMENT.PROVISIONALDOCUMENTDATE,
    SALESDOCUMENT.ORDPRNCUSTOMERSUPPLIERCODE,
    SALESDOCUMENT.ORDERPARTNERBRANDCODE,
    SALESDOCUMENT.GOODSISSUEDATE,
    SALESDOCUMENT.ABSUNIQUEID,
    CASE
        WHEN SALESDOCUMENTLINE.EXTERNALREFERENCE IS NULL THEN SALESDOCUMENT.EXTERNALREFERENCE
        ELSE SALESDOCUMENTLINE.EXTERNALREFERENCE
    END AS PO_NUMBER,
    SALESDOCUMENTLINE.ITEMTYPEAFICODE,
    SALESDOCUMENTLINE.SUBCODE01,
    SALESDOCUMENTLINE.SUBCODE02,
    SALESDOCUMENTLINE.SUBCODE03,
    SALESDOCUMENTLINE.SUBCODE04,
    TRIM(SALESDOCUMENTLINE.SUBCODE05) AS SUBCODE05,
    SALESDOCUMENTLINE.SUBCODE06,
    SALESDOCUMENTLINE.SUBCODE07,
    SALESDOCUMENTLINE.SUBCODE08,
    SALESDOCUMENTLINE.SUBCODE09,
    SALESDOCUMENTLINE.SUBCODE10,
    CASE
        WHEN SALESDOCUMENT.PROVISIONALCOUNTERCODE = 'CWSPROV' THEN s.ITEMDESCRIPTION
        ELSE SALESDOCUMENTLINE.ITEMDESCRIPTION
    END AS ITEMDESCRIPTION,
    SALESDOCUMENTLINE.DLVSALORDERLINESALESORDERCODE,
    CASE
        WHEN a.VALUESTRING IS NOT NULL THEN CAST(
            a.VALUESTRING AS decimal(5)
        )
        ELSE CAST(
            SALESDOCUMENTLINE.DLVSALESORDERLINEORDERLINE AS decimal(5)
        )
    END DLVSALESORDERLINEORDERLINE,
    SALESDOCUMENT.PAYMENTMETHODCODE,
    SALESDOCUMENT.CURRENCYCODE,
    SALESDOCUMENTLINE.PRICE,
    SALESDOCUMENTLINE.PRICEUNITOFMEASURECODE,
    ORDERPARTNERBRAND.LONGDESCRIPTION
FROM
    BUSINESSPARTNER BUSINESSPARTNER
LEFT JOIN CUSTOMERSUPPLIERDATA CUSTOMERSUPPLIERDATA ON
    CUSTOMERSUPPLIERDATA.BUSINESSPARTNERNUMBERID = BUSINESSPARTNER.NUMBERID
LEFT JOIN ALLOCATION ALLOCATION ON
    ALLOCATION.CUSTOMERCODE = CUSTOMERSUPPLIERDATA.CODE
    AND ALLOCATION.COMPANYCODE = CUSTOMERSUPPLIERDATA.COMPANYCODE
RIGHT JOIN SALESDOCUMENT SALESDOCUMENT ON
    SALESDOCUMENT.PROVISIONALCODE = ALLOCATION.ORDERCODE
LEFT JOIN SALESDOCUMENTLINE SALESDOCUMENTLINE ON
    ALLOCATION.ORDERCODE = SALESDOCUMENTLINE.SALESDOCUMENTPROVISIONALCODE
    AND ALLOCATION.ORDERLINE = SALESDOCUMENTLINE.ORDERLINE
    AND ALLOCATION.ITEMTYPECODE = SALESDOCUMENTLINE.ITEMTYPEAFICODE
    AND ALLOCATION.DECOSUBCODE01 = SALESDOCUMENTLINE.SUBCODE01
    AND ALLOCATION.DECOSUBCODE02 = SALESDOCUMENTLINE.SUBCODE02
    AND ALLOCATION.DECOSUBCODE03 = SALESDOCUMENTLINE.SUBCODE03
    AND ALLOCATION.DECOSUBCODE04 = SALESDOCUMENTLINE.SUBCODE04
    AND ALLOCATION.DECOSUBCODE05 = SALESDOCUMENTLINE.SUBCODE05
    AND ALLOCATION.DECOSUBCODE06 = SALESDOCUMENTLINE.SUBCODE06
    AND ALLOCATION.DECOSUBCODE07 = SALESDOCUMENTLINE.SUBCODE07
    AND ALLOCATION.DECOSUBCODE08 = SALESDOCUMENTLINE.SUBCODE08
    AND ALLOCATION.DECOSUBCODE09 = SALESDOCUMENTLINE.SUBCODE09
    AND ALLOCATION.DECOSUBCODE10 = SALESDOCUMENTLINE.SUBCODE10
LEFT OUTER JOIN ORDERPARTNERBRAND ORDERPARTNERBRAND ON
    SALESDOCUMENT.ORDERPARTNERBRANDCODE = ORDERPARTNERBRAND.CODE
    AND SALESDOCUMENT.ORDPRNCUSTOMERSUPPLIERCODE = ORDERPARTNERBRAND.ORDPRNCUSTOMERSUPPLIERCODE
LEFT JOIN SALESORDERLINE s ON
    s.SALESORDERCODE = SALESDOCUMENTLINE.DLVSALORDERLINESALESORDERCODE
    AND s.ORDERLINE = SALESDOCUMENTLINE.DLVSALESORDERLINEORDERLINE
LEFT JOIN ADSTORAGE a ON
    a.UNIQUEID = s.ABSUNIQUEID
    AND a.NAMENAME = 'SampleComments5'
WHERE
    ALLOCATION.ORIGINTRNTRANSACTIONNUMBER IS NULL
    --        AND SALESDOCUMENT.PROVISIONALCODE = 'CWP2400001'
    --    AND SALESDOCUMENTLINE.DLVSALORDERLINESALESORDERCODE = 'DOM2300265';


-- DB2ADMIN.ITXVIEW_SURATJALAN_PPCNEW source

CREATE VIEW ITXVIEW_SURATJALAN_PPCNEW AS
SELECT 
    ALLOCATION.CODE,
    ALLOCATION.DECOSUBCODE01,
    ALLOCATION.DECOSUBCODE02,
    ALLOCATION.DECOSUBCODE03,
    ALLOCATION.DECOSUBCODE04,
    ALLOCATION.DECOSUBCODE05,
    ALLOCATION.DECOSUBCODE06,
    ALLOCATION.DECOSUBCODE07,
    ALLOCATION.DECOSUBCODE08,
    ALLOCATION.DECOSUBCODE09,
    ALLOCATION.DECOSUBCODE10,
    ALLOCATION.BASESECONDARYUOMCODE,
    ORDERPARTNERBRAND.LONGDESCRIPTION AS BUYER,
    BUSINESSPARTNER.LEGALNAME1 AS LANGGANAN,
    BUSINESSPARTNER.ADDRESSPHONENUMBER,
    BUSINESSPARTNER.ADDRESSFAXNUMBER,
    SALESDOCUMENT.PROJECTCODE,
    SALESDOCUMENT.PROVISIONALCODE,
    SALESDOCUMENT.PROVISIONALDOCUMENTDATE,
    SALESDOCUMENT.ORDPRNCUSTOMERSUPPLIERCODE,
    SALESDOCUMENT.ORDERPARTNERBRANDCODE,
    SALESDOCUMENT.PAYMENTMETHODCODE,
    SALESDOCUMENT.CURRENCYCODE,
    SALESDOCUMENTLINE.EXTERNALREFERENCE,
    SALESDOCUMENTLINE.ITEMTYPEAFICODE,
    SALESDOCUMENTLINE.SUBCODE01,
    SALESDOCUMENTLINE.SUBCODE02,
    SALESDOCUMENTLINE.SUBCODE03,
    SALESDOCUMENTLINE.SUBCODE04,
    SALESDOCUMENTLINE.SUBCODE05,
    SALESDOCUMENTLINE.SUBCODE06,
    SALESDOCUMENTLINE.SUBCODE07,
    SALESDOCUMENTLINE.SUBCODE08,
    SALESDOCUMENTLINE.SUBCODE09,
    SALESDOCUMENTLINE.SUBCODE10,
    SALESDOCUMENTLINE.ITEMDESCRIPTION,
    SALESDOCUMENTLINE.DLVSALORDERLINESALESORDERCODE,
    SALESDOCUMENTLINE.PRICE
FROM
    ALLOCATION ALLOCATION
LEFT JOIN 
	SALESDOCUMENT SALESDOCUMENT ON
    ALLOCATION.ORDERCODE = SALESDOCUMENT.PROVISIONALCODE
LEFT JOIN 
	SALESDOCUMENTLINE SALESDOCUMENTLINE ON
    ALLOCATION.PROJECTCODE = SALESDOCUMENTLINE.PROJECTCODE
    AND 
	ALLOCATION.DECOSUBCODE01 = SALESDOCUMENTLINE.SUBCODE01
    AND 
	ALLOCATION.DECOSUBCODE02 = SALESDOCUMENTLINE.SUBCODE02
    AND
	ALLOCATION.DECOSUBCODE03 = SALESDOCUMENTLINE.SUBCODE03
    AND
	ALLOCATION.DECOSUBCODE04 = SALESDOCUMENTLINE.SUBCODE04
    AND
	ALLOCATION.DECOSUBCODE05 = SALESDOCUMENTLINE.SUBCODE05
    AND
	ALLOCATION.DECOSUBCODE06 = SALESDOCUMENTLINE.SUBCODE06
    AND
	ALLOCATION.DECOSUBCODE07 = SALESDOCUMENTLINE.SUBCODE07
    AND
	ALLOCATION.DECOSUBCODE08 = SALESDOCUMENTLINE.SUBCODE08
    AND
	ALLOCATION.DECOSUBCODE09 = SALESDOCUMENTLINE.SUBCODE09
    AND
	ALLOCATION.DECOSUBCODE10 = SALESDOCUMENTLINE.SUBCODE10
    AND 
	SALESDOCUMENT.PROVISIONALCODE = SALESDOCUMENTLINE.SALESDOCUMENTPROVISIONALCODE
LEFT JOIN ORDERPARTNER ORDERPARTNER ON
    ORDERPARTNER.CUSTOMERSUPPLIERCODE = SALESDOCUMENT.ORDPRNCUSTOMERSUPPLIERCODE
LEFT JOIN BUSINESSPARTNER BUSINESSPARTNER ON
    BUSINESSPARTNER.NUMBERID = ORDERPARTNER.ORDERBUSINESSPARTNERNUMBERID
LEFT JOIN ORDERPARTNERBRAND ORDERPARTNERBRAND ON
    SALESDOCUMENT.ORDERPARTNERBRANDCODE = ORDERPARTNERBRAND.CODE
    AND SALESDOCUMENT.ORDPRNCUSTOMERSUPPLIERCODE = ORDERPARTNERBRAND.ORDPRNCUSTOMERSUPPLIERCODE;


-- DB2ADMIN.ITXVIEW_SURATJALAN_PPCX source

CREATE VIEW ITXVIEW_SURATJALAN_PPCX AS
SELECT
    BUSINESSPARTNER.LEGALNAME1,
    BUSINESSPARTNER.ADDRESSPHONENUMBER,
    BUSINESSPARTNER.ADDRESSFAXNUMBER,
    ITXVIEWALLOCATION0.LOTCODE,
    ALLOCATION.THEORETICISSUEDATE,
    ALLOCATION.DECOSUBCODE01,
    ALLOCATION.DECOSUBCODE02,
    ALLOCATION.DECOSUBCODE03,
    ALLOCATION.DECOSUBCODE04,
    ALLOCATION.DECOSUBCODE05,
    ALLOCATION.DECOSUBCODE06,
    ALLOCATION.DECOSUBCODE07,
    ALLOCATION.DECOSUBCODE08,
    ALLOCATION.DECOSUBCODE09,
    ALLOCATION.DECOSUBCODE10,
    ALLOCATION.BASESECONDARYUOMCODE,
    WRKDOCUMENTPRINT.DELIVERYPOINTADDRESSLINE1,
    WRKDOCUMENTPRINT.DELIVERYPOINTADDRESSLINE2,
    WRKDOCUMENTPRINT.DELIVERYPOINTADDRESSLINE3,
    WRKDOCUMENTPRINT.DELIVERYPOINTPOSTALCODE,
    WRKDOCUMENTPRINT.DELIVERYPOINTTOWN,
    WRKDOCUMENTPRINT.DELIVERYPOINTDISTRICT,
    SALESDOCUMENT.PROVISIONALCODE,
    SALESDOCUMENT.PROVISIONALDOCUMENTDATE,
    SALESDOCUMENT.ORDPRNCUSTOMERSUPPLIERCODE,
    SALESDOCUMENT.ORDERPARTNERBRANDCODE,
    SALESDOCUMENTLINE.EXTERNALREFERENCE,
    SALESDOCUMENTLINE.ITEMTYPEAFICODE,
    SALESDOCUMENTLINE.SUBCODE01,
    SALESDOCUMENTLINE.SUBCODE02,
    SALESDOCUMENTLINE.SUBCODE03,
    SALESDOCUMENTLINE.SUBCODE04,
    SALESDOCUMENTLINE.SUBCODE05,
    SALESDOCUMENTLINE.SUBCODE06,
    SALESDOCUMENTLINE.SUBCODE07,
    SALESDOCUMENTLINE.SUBCODE08,
    SALESDOCUMENTLINE.SUBCODE09,
    SALESDOCUMENTLINE.SUBCODE10,
    SALESDOCUMENTLINE.ITEMDESCRIPTION,
    SALESDOCUMENTLINE.DLVSALORDERLINESALESORDERCODE,
    SALESDOCUMENT.CURRENCYCODE,
    SALESDOCUMENTLINE.PRICE,
    ORDERPARTNERBRAND.LONGDESCRIPTION
FROM
    BUSINESSPARTNER BUSINESSPARTNER
LEFT OUTER JOIN DB2ADMIN.CUSTOMERSUPPLIERDATA CUSTOMERSUPPLIERDATA ON
    BUSINESSPARTNER.NUMBERID = CUSTOMERSUPPLIERDATA.BUSINESSPARTNERNUMBERID
LEFT OUTER JOIN DB2ADMIN.ALLOCATION ALLOCATION ON
    CUSTOMERSUPPLIERDATA.CODE = ALLOCATION.CUSTOMERCODE
RIGHT OUTER JOIN DB2ADMIN.WRKDOCUMENTPRINT WRKDOCUMENTPRINT ON
    ALLOCATION.PROJECTCODE = WRKDOCUMENTPRINT.PROJECTLONGDESCRIPTION
    AND ALLOCATION.ORDERCODE = WRKDOCUMENTPRINT.SALESDOCUMENTPROVISIONALCODE
RIGHT OUTER JOIN DB2ADMIN.SALESDOCUMENT SALESDOCUMENT ON
    WRKDOCUMENTPRINT.SALESDOCUMENTPROVISIONALCODE = SALESDOCUMENT.PROVISIONALCODE
    AND WRKDOCUMENTPRINT.PROJECTLONGDESCRIPTION = SALESDOCUMENT.PROJECTCODE
RIGHT OUTER JOIN DB2ADMIN.SALESDOCUMENTLINE SALESDOCUMENTLINE ON
    SALESDOCUMENT.PROVISIONALCODE = SALESDOCUMENTLINE.SALESDOCUMENTPROVISIONALCODE
LEFT OUTER JOIN DB2ADMIN.ORDERPARTNERBRAND ORDERPARTNERBRAND ON
    SALESDOCUMENT.ORDERPARTNERBRANDCODE = ORDERPARTNERBRAND.CODE
    AND SALESDOCUMENT.ORDPRNCUSTOMERSUPPLIERCODE = ORDERPARTNERBRAND.ORDPRNCUSTOMERSUPPLIERCODE
LEFT OUTER JOIN ITXVIEWALLOCATION0 ON
    ALLOCATION.CODE = ITXVIEWALLOCATION0.CODE;


-- DB2ADMIN.ITXVIEW_SURATJALAN_PPC_FOR_POSELESAI source

CREATE VIEW ITXVIEW_SURATJALAN_PPC_FOR_POSELESAI AS
SELECT
    DISTINCT 
    SALESDOCUMENT.PROGRESSSTATUS AS PROGRESSSTATUS_SALDOC,
    COALESCE(TRIM(SALESDOCUMENT.DEFINITIVECOUNTERCODE), TRIM(SALESDOCUMENT.PROVISIONALCOUNTERCODE)) AS DEFINITIVECOUNTERCODE,
    s.PROGRESSSTATUS,
    SALESDOCUMENT.DOCUMENTTYPETYPE,
    BUSINESSPARTNER.NUMBERID,
    BUSINESSPARTNER.LEGALNAME1,
    BUSINESSPARTNER.ADDRESSPHONENUMBER,
    BUSINESSPARTNER.ADDRESSFAXNUMBER,
    ALLOCATION.CODE,
    ALLOCATION.DECOSUBCODE01,
    ALLOCATION.DECOSUBCODE02,
    ALLOCATION.DECOSUBCODE03,
    ALLOCATION.DECOSUBCODE04,
    ALLOCATION.DECOSUBCODE05,
    ALLOCATION.DECOSUBCODE06,
    ALLOCATION.DECOSUBCODE07,
    ALLOCATION.DECOSUBCODE08,
    ALLOCATION.DECOSUBCODE09,
    ALLOCATION.DECOSUBCODE10,
    ALLOCATION.BASESECONDARYUOMCODE,
    --    WRKDOCUMENTPRINT.DELIVERYPOINTADDRESSLINE1,
    --    WRKDOCUMENTPRINT.DELIVERYPOINTADDRESSLINE2,
    --    WRKDOCUMENTPRINT.DELIVERYPOINTADDRESSLINE3,
    --    WRKDOCUMENTPRINT.DELIVERYPOINTPOSTALCODE,
    --    WRKDOCUMENTPRINT.DELIVERYPOINTTOWN,
    --    WRKDOCUMENTPRINT.DELIVERYPOINTDISTRICT,
    SALESDOCUMENT.PROJECTCODE,
    SALESDOCUMENT.DEFINITIVEDOCUMENTDATE,
    SALESDOCUMENT.PROVISIONALCODE,
    SALESDOCUMENT.PROVISIONALDOCUMENTDATE,
    SALESDOCUMENT.ORDPRNCUSTOMERSUPPLIERCODE,
    SALESDOCUMENT.ORDERPARTNERBRANDCODE,
    SALESDOCUMENT.GOODSISSUEDATE,
    SALESDOCUMENT.ABSUNIQUEID,
    CASE
        WHEN SALESDOCUMENT.EXTERNALREFERENCE IS NULL THEN SALESDOCUMENTLINE.EXTERNALREFERENCE
        ELSE SALESDOCUMENT.EXTERNALREFERENCE
    END AS PO_NUMBER,
    SALESDOCUMENTLINE.ITEMTYPEAFICODE,
    SALESDOCUMENTLINE.SUBCODE01,
    SALESDOCUMENTLINE.SUBCODE02,
    SALESDOCUMENTLINE.SUBCODE03,
    SALESDOCUMENTLINE.SUBCODE04,
    SALESDOCUMENTLINE.SUBCODE05,
    SALESDOCUMENTLINE.SUBCODE06,
    SALESDOCUMENTLINE.SUBCODE07,
    SALESDOCUMENTLINE.SUBCODE08,
    SALESDOCUMENTLINE.SUBCODE09,
    SALESDOCUMENTLINE.SUBCODE10,
    SALESDOCUMENTLINE.ITEMDESCRIPTION,
    SALESDOCUMENTLINE.DLVSALORDERLINESALESORDERCODE,
    CASE
        WHEN a.VALUESTRING IS NOT NULL THEN CAST(
            a.VALUESTRING AS decimal(5)
        )
        ELSE CAST(
            SALESDOCUMENTLINE.DLVSALESORDERLINEORDERLINE AS decimal(5)
        )
    END DLVSALESORDERLINEORDERLINE,
    SALESDOCUMENT.PAYMENTMETHODCODE,
    SALESDOCUMENT.CURRENCYCODE,
    SALESDOCUMENTLINE.PRICE,
    ALLOCATION.USERSECONDARYUOMCODE AS PRICEUNITOFMEASURECODE,
    ORDERPARTNERBRAND.LONGDESCRIPTION
FROM
    SALESDOCUMENT SALESDOCUMENT
LEFT JOIN SALESDOCUMENTLINE SALESDOCUMENTLINE ON
    SALESDOCUMENTLINE.SALESDOCUMENTPROVISIONALCODE = SALESDOCUMENT.PROVISIONALCODE
LEFT JOIN ORDERPARTNER ORDERPARTNER ON
    SALESDOCUMENT.COMPANYCODE = ORDERPARTNER.CUSTOMERSUPPLIERCOMPANYCODE
    AND SALESDOCUMENT.ORDERTYPE = ORDERPARTNER.CUSTOMERSUPPLIERTYPE
    AND SALESDOCUMENT.ORDPRNCUSTOMERSUPPLIERCODE = ORDERPARTNER.CUSTOMERSUPPLIERCODE
LEFT JOIN BUSINESSPARTNER BUSINESSPARTNER ON
    ORDERPARTNER.ORDERBUSINESSPARTNERNUMBERID = BUSINESSPARTNER.NUMBERID
LEFT JOIN CUSTOMERSUPPLIERDATA CUSTOMERSUPPLIERDATA ON
    CUSTOMERSUPPLIERDATA.BUSINESSPARTNERNUMBERID = BUSINESSPARTNER.NUMBERID
LEFT JOIN ALLOCATION ALLOCATION ON
    ALLOCATION.CUSTOMERCODE = CUSTOMERSUPPLIERDATA.CODE
    --									AND ALLOCATION.PROJECTCODE = SALESDOCUMENTLINE.DLVSALORDERLINESALESORDERCODE 
    AND ALLOCATION.ORDERCODE = SALESDOCUMENT.PROVISIONALCODE
    AND ALLOCATION.ORDERLINE = SALESDOCUMENTLINE.ORDERLINE
LEFT JOIN ORDERPARTNERBRAND ORDERPARTNERBRAND ON
    SALESDOCUMENT.ORDERPARTNERBRANDCODE = ORDERPARTNERBRAND.CODE
    AND SALESDOCUMENT.ORDPRNCUSTOMERSUPPLIERCODE = ORDERPARTNERBRAND.ORDPRNCUSTOMERSUPPLIERCODE
LEFT JOIN SALESORDERLINE s ON
    s.SALESORDERCODE = SALESDOCUMENTLINE.DLVSALORDERLINESALESORDERCODE
    AND s.ORDERLINE = SALESDOCUMENTLINE.DLVSALESORDERLINEORDERLINE
LEFT JOIN ADSTORAGE a ON
    a.UNIQUEID = s.ABSUNIQUEID
    AND a.NAMENAME = 'SampleComments5'
WHERE
    ALLOCATION.ORIGINTRNTRANSACTIONNUMBER IS NULL
    --    AND 
    --        ALLOCATION.CODE = '000000447460'
    --        SALESDOCUMENT.PROVISIONALCODE = 'ESP2400513'
    --        AND SALESDOCUMENTLINE.DLVSALORDERLINESALESORDERCODE = 'EXP2400168'
    --        AND NOT ALLOCATION.CODE IS NULL;


-- DB2ADMIN.ITXVIEW_SURCHARGE_COMMRECIAL_INV source

CREATE VIEW ITXVIEW_SURCHARGE_COMMRECIAL_INV AS 
SELECT
    PROVISIONALCODE,
    PROVISIONALCOUNTERCODE,
    --    SALESORDERCODE,
    sum(BIAYA_TAMBAHAN) AS BIAYA_TAMBAHAN,
    UPPER(judul) AS JUDUL
FROM
    (
        SELECT
            DISTINCT 
    s.PROVISIONALCODE AS PROVISIONALCODE,
            s3.SALESORDERCODE AS SALESORDERCODE,
            s.PROVISIONALCOUNTERCODE,
            s3.ORDERLINE,
            i.ITAXCODE AS KET,
            CASE
                WHEN i.ITAXCODE NOT IN (
                    '999', 'VT1'
                ) THEN i.VALUE
            END AS BIAYA_TAMBAHAN,
            CASE
                WHEN i.ITAXCODE = 'SUR' THEN 'Surcharge MOQ'
                WHEN i.ITAXCODE = 'MCQ'
                OR i.ITAXCODE = 'SCR'
                OR i.ITAXCODE = 'MC1' THEN 'Surcharge MCQ'
                WHEN i.ITAXCODE = 'FR1' THEN 'Surcharge'
                WHEN i.ITAXCODE = 'IN1' THEN 'Insurance'
                WHEN i.ITAXCODE = 'OH1'
                OR i.ITAXCODE = 'OH3' THEN 'Bank Charge'
                WHEN i.ITAXCODE = 'CFR' THEN 'COST REVISE FORM E ESP2300372 and ESP2300407'
                WHEN i.ITAXCODE = 'VT4' THEN 'VAT 11%'
                WHEN i.ITAXCODE = 'SUS' THEN 'Surcharge Export'
            END AS JUDUL
        FROM
            SALESDOCUMENT s
        LEFT JOIN SALESDOCUMENTLINE s4 ON
            s4.SALESDOCUMENTPROVISIONALCODE = s.PROVISIONALCODE
            AND s4.SALDOCPROVISIONALCOUNTERCODE = s.PROVISIONALCOUNTERCODE
        LEFT JOIN SALESORDERLINE s3 ON
            s3.SALESORDERCODE = s4.DLVSALORDERLINESALESORDERCODE
            AND s3.ORDERLINE = s4.DLVSALESORDERLINEORDERLINE
            AND s3.SUBCODE01 = s4.SUBCODE01
            AND s3.SUBCODE02 = s4.SUBCODE02
            AND s3.SUBCODE03 = s4.SUBCODE03
            AND s3.SUBCODE04 = s4.SUBCODE04
            AND s3.SUBCODE05 = s4.SUBCODE05
            AND s3.SUBCODE06 = s4.SUBCODE06
            AND s3.SUBCODE07 = s4.SUBCODE07
            AND s3.SUBCODE08 = s4.SUBCODE08
        LEFT JOIN INDTAXDETAIL i ON
            s3.ABSUNIQUEID = i.ABSUNIQUEID
        WHERE
            s.DOCUMENTTYPETYPE = 5
            AND i.ITAXCODE NOT IN (
                '999', 'VT1'
            )
            AND i.VALUE <> 0
            --         AND s.PROVISIONALCODE in('ESP2300909')
    )
WHERE
    BIAYA_TAMBAHAN <> 0
    --            AND PROVISIONALCODE LIKE '%ESP23%'
GROUP BY 
      PROVISIONALCODE,
    --      SALESORDERCODE,
    PROVISIONALCOUNTERCODE,
      JUDUL;


-- DB2ADMIN.ITXVIEW_TASK_ACT source

CREATE VIEW ITXVIEW_TASK_ACT AS
SELECT
    ACT_HI_ACTINST.PROC_INST_ID_ ,
    ACT_HI_ACTINST.EXECUTION_ID_ ,
    WFMLINKEDENTITY.REFERENCEDENTITYPK
FROM
    ACT_HI_ACTINST ACT_HI_ACTINST
LEFT JOIN ACT_HI_PROCINST ACT_HI_PROCINST ON
    ACT_HI_PROCINST.PROC_INST_ID_ = ACT_HI_ACTINST.PROC_INST_ID_
LEFT JOIN WFMLINKEDENTITY WFMLINKEDENTITY ON
    WFMLINKEDENTITY.REFERENCEDENTITYPK = ACT_HI_PROCINST.BUSINESS_KEY_
GROUP BY
    ACT_HI_ACTINST.PROC_INST_ID_ ,
    ACT_HI_ACTINST.EXECUTION_ID_ ,
    WFMLINKEDENTITY.REFERENCEDENTITYPK;


-- DB2ADMIN.ITXVIEW_TEMP_ALLOCATION_SUMMARY source

CREATE VIEW ITXVIEW_TEMP_ALLOCATION_SUMMARY AS
SELECT
    ALLOCATION.CODE,
    ALLOCATION.LOTCODE,
    COUNT(ALLOCATION.ITEMELEMENTCODE) AS ROLL,
    SUM(ALLOCATION.USERPRIMARYQUANTITY) AS USERPRIMARYQUANTITY,
    ALLOCATION.USERPRIMARYUOMCODE,
    SUM(ALLOCATION.USERSECONDARYQUANTITY) AS USERSECONDARYQUANTITY,
    ALLOCATION.USERSECONDARYUOMCODE,
    ALLOCATION.ITEMELEMENTCODE
FROM
    ITXVIEW_ALLOCATION_SURATJALAN_PPC ALLOCATION
WHERE
    ALLOCATION.DETAILTYPE = '0'
GROUP BY
    ALLOCATION.CODE,
    ALLOCATION.LOTCODE,
    ALLOCATION.USERPRIMARYUOMCODE,
    ALLOCATION.USERSECONDARYUOMCODE,
    ALLOCATION.ITEMELEMENTCODE;


-- DB2ADMIN.ITXVIEW_TESTCHEMICAL source

CREATE VIEW ITXVIEW_TESTCHEMICAL AS
SELECT
    MRNHEADER.CODE,
    MRNHEADER.PURCHASEORDERCODE,
    MRNHEADER.MRNDATE,
    BUSINESSPARTNER.LEGALNAME1,
    FULLITEMKEYDECODER.SHORTDESCRIPTION,
    MRNDETAIL.RECEIVEDQUANTITY,
    STOCKTRANSACTION.LOTCODE,
    QUALITYDOCUMENT.HEADERDATE,
    QUALITYDOCUMENT.LASTUPDATEUSER,
    QUALITYDOCUMENT.HEADERLINE,
    A.TGLHPB,
    A.TGLTERIMA
FROM
    MRNHEADER MRNHEADER
LEFT JOIN MRNDETAIL MRNDETAIL ON
    MRNDETAIL.MRNHEADERCODE = MRNHEADER.CODE
LEFT JOIN STOCKTRANSACTION STOCKTRANSACTION ON
    STOCKTRANSACTION.TRANSACTIONNUMBER = MRNDETAIL.TRANSACTIONNUMBER
LEFT JOIN QUALITYDOCUMENT QUALITYDOCUMENT ON
    QUALITYDOCUMENT.LOTCODE = STOCKTRANSACTION.LOTCODE
    AND QUALITYDOCUMENT.ITEMTYPEAFICODE = STOCKTRANSACTION.ITEMTYPECODE
    AND QUALITYDOCUMENT.SUBCODE01 = STOCKTRANSACTION.DECOSUBCODE01
    AND QUALITYDOCUMENT.SUBCODE02 = STOCKTRANSACTION.DECOSUBCODE02
    AND QUALITYDOCUMENT.SUBCODE03 = STOCKTRANSACTION.DECOSUBCODE03
    AND QUALITYDOCUMENT.SUBCODE04 = STOCKTRANSACTION.DECOSUBCODE04
    AND QUALITYDOCUMENT.SUBCODE05 = STOCKTRANSACTION.DECOSUBCODE05
    AND QUALITYDOCUMENT.SUBCODE06 = STOCKTRANSACTION.DECOSUBCODE06
    AND QUALITYDOCUMENT.SUBCODE07 = STOCKTRANSACTION.DECOSUBCODE07
    AND QUALITYDOCUMENT.SUBCODE08 = STOCKTRANSACTION.DECOSUBCODE08
    AND QUALITYDOCUMENT.SUBCODE09 = STOCKTRANSACTION.DECOSUBCODE09
    AND QUALITYDOCUMENT.SUBCODE10 = STOCKTRANSACTION.DECOSUBCODE10
LEFT JOIN FULLITEMKEYDECODER FULLITEMKEYDECODER ON
    FULLITEMKEYDECODER.ITEMTYPECODE = STOCKTRANSACTION.ITEMTYPECODE
    AND FULLITEMKEYDECODER.SUBCODE01 = STOCKTRANSACTION.DECOSUBCODE01
    AND FULLITEMKEYDECODER.SUBCODE02 = STOCKTRANSACTION.DECOSUBCODE02
    AND FULLITEMKEYDECODER.SUBCODE03 = STOCKTRANSACTION.DECOSUBCODE03
    AND FULLITEMKEYDECODER.SUBCODE04 = STOCKTRANSACTION.DECOSUBCODE04
    AND FULLITEMKEYDECODER.SUBCODE05 = STOCKTRANSACTION.DECOSUBCODE05
    AND FULLITEMKEYDECODER.SUBCODE06 = STOCKTRANSACTION.DECOSUBCODE06
    AND FULLITEMKEYDECODER.SUBCODE07 = STOCKTRANSACTION.DECOSUBCODE07
    AND FULLITEMKEYDECODER.SUBCODE08 = STOCKTRANSACTION.DECOSUBCODE08
    AND FULLITEMKEYDECODER.SUBCODE09 = STOCKTRANSACTION.DECOSUBCODE09
    AND FULLITEMKEYDECODER.SUBCODE10 = STOCKTRANSACTION.DECOSUBCODE10
    AND FULLITEMKEYDECODER.IDENTIFIER = STOCKTRANSACTION.FULLITEMIDENTIFIER
LEFT JOIN ORDERPARTNER ORDERPARTNER ON
    ORDERPARTNER.CUSTOMERSUPPLIERCODE = MRNHEADER.ORDPRNCUSTOMERSUPPLIERCODE
LEFT JOIN BUSINESSPARTNER BUSINESSPARTNER ON
    BUSINESSPARTNER.NUMBERID = ORDERPARTNER.ORDERBUSINESSPARTNERNUMBERID
LEFT JOIN (
        SELECT
            UNIQUEID,
            MAX(CASE WHEN FIELDNAME = 'tglhpb' THEN VALUEDATE END) AS tglhpb,
            MAX(CASE WHEN FIELDNAME = 'tglterima' THEN VALUEDATE END) AS tglterima
        FROM
            ADSTORAGE
        WHERE 
                NAMEENTITYNAME = 'QualityDocument'
            AND FIELDNAME = 'tglterima'
            OR FIELDNAME = 'tglhpb'
        GROUP BY
            UNIQUEID
    ) A 
    ON
    A.UNIQUEID = QUALITYDOCUMENT.ABSUNIQUEID
WHERE
    FULLITEMKEYDECODER.ITEMTYPECODE = 'DYC';


-- DB2ADMIN.ITXVIEW_TESTCHEMICAL_MINMAX source

CREATE VIEW ITXVIEW_TESTCHEMICAL_MINMAX AS
SELECT
    q.QUALITYDOCUMENTHEADERLINE,
    LISTAGG(
        TRIM(q.SUBCODEMIN) || '-' || TRIM(q.SUBCODEMAX),
        ', '
    ) AS PH1,
    LISTAGG(
        TRIM(q2.SUBCODEMIN) || '-' || TRIM(q2.SUBCODEMAX),
        ', '
    ) AS BJ,
    LISTAGG(
        TRIM(q3.SUBCODEMIN) || '-' || TRIM(q3.SUBCODEMAX),
        ', '
    ) AS SC
FROM
    QUALITYDOCLINE q
LEFT JOIN QUALITYDOCLINE q2 ON
    q2.QUALITYDOCUMENTHEADERLINE = q.QUALITYDOCUMENTHEADERLINE
    AND TRIM(q2.CHARACTERISTICCODE) = 'BJ'
LEFT JOIN QUALITYDOCLINE q3 ON
    q3.QUALITYDOCUMENTHEADERLINE = q.QUALITYDOCUMENTHEADERLINE
    AND TRIM(q3.CHARACTERISTICCODE) = 'SC'
WHERE
    --	q.QUALITYDOCUMENTHEADERLINE =
    TRIM(q.CHARACTERISTICCODE) = 'PH1'
GROUP BY
    q.QUALITYDOCUMENTHEADERLINE;


-- DB2ADMIN.ITXVIEW_TESTCHEMICAL_QUALITYDOCLINE source

CREATE VIEW ITXVIEW_TESTCHEMICAL_QUALITYDOCLINE AS
SELECT
    MRNHEADER.CODE,
    LISTAGG(
        QUALITYDOCUMENT.HEADERLINE,
        ', '
    ) WITHIN GROUP (
    ORDER BY
        MRNHEADER.CODE
    ) AS HEADERLINE,
    LISTAGG(
        A.TGLHPB,
        ', '
    ) WITHIN GROUP (
    ORDER BY
        MRNHEADER.CODE
    ) AS TGLHPB
FROM
    MRNHEADER MRNHEADER
LEFT JOIN MRNDETAIL MRNDETAIL ON
    MRNDETAIL.MRNHEADERCODE = MRNHEADER.CODE
LEFT JOIN STOCKTRANSACTION STOCKTRANSACTION ON
    STOCKTRANSACTION.TRANSACTIONNUMBER = MRNDETAIL.TRANSACTIONNUMBER
LEFT JOIN QUALITYDOCUMENT QUALITYDOCUMENT ON
    QUALITYDOCUMENT.LOTCODE = STOCKTRANSACTION.LOTCODE
    AND QUALITYDOCUMENT.ITEMTYPEAFICODE = STOCKTRANSACTION.ITEMTYPECODE
    AND QUALITYDOCUMENT.SUBCODE01 = STOCKTRANSACTION.DECOSUBCODE01
    AND QUALITYDOCUMENT.SUBCODE02 = STOCKTRANSACTION.DECOSUBCODE02
    AND QUALITYDOCUMENT.SUBCODE03 = STOCKTRANSACTION.DECOSUBCODE03
    AND QUALITYDOCUMENT.SUBCODE04 = STOCKTRANSACTION.DECOSUBCODE04
    AND QUALITYDOCUMENT.SUBCODE05 = STOCKTRANSACTION.DECOSUBCODE05
    AND QUALITYDOCUMENT.SUBCODE06 = STOCKTRANSACTION.DECOSUBCODE06
    AND QUALITYDOCUMENT.SUBCODE07 = STOCKTRANSACTION.DECOSUBCODE07
    AND QUALITYDOCUMENT.SUBCODE08 = STOCKTRANSACTION.DECOSUBCODE08
    AND QUALITYDOCUMENT.SUBCODE09 = STOCKTRANSACTION.DECOSUBCODE09
    AND QUALITYDOCUMENT.SUBCODE10 = STOCKTRANSACTION.DECOSUBCODE10
LEFT JOIN (
        SELECT
            UNIQUEID,
            MAX(CASE WHEN FIELDNAME = 'tglhpb' THEN VALUEDATE END) AS tglhpb,
            MAX(CASE WHEN FIELDNAME = 'tglterima' THEN VALUEDATE END) AS tglterima
        FROM
            ADSTORAGE
        WHERE
            NAMEENTITYNAME = 'QualityDocument'
            AND FIELDNAME = 'tglterima'
            OR FIELDNAME = 'tglhpb'
        GROUP BY
            UNIQUEID
    ) A 
    ON
    A.UNIQUEID = QUALITYDOCUMENT.ABSUNIQUEID
    --WHERE
    --    MRNHEADER.CODE = 2100000154
GROUP BY
    MRNHEADER.CODE;


-- DB2ADMIN.ITXVIEW_TESTVIEW source

CREATE VIEW ITXVIEW_TESTVIEW AS
SELECT
    A.COMPANYCODE,
    A.PRODUCTIONORDERCODE,
    A.GROUPLINE,
    A.GROUPSTEPNUMBER,
    A.SUFFIXCODE,
    A.ITEMTYPEAFICODE,
    A.SUBCODE01,
    A.SUBCODE02,
    A.SUBCODE03,
    A.SUBCODE04,
    A.SUBCODE05,
    A.SUBCODE06,
    A.SUBCODE07,
    A.SUBCODE08,
    A.SUBCODE09,
    A.SUBCODE10,
    B.SHORTDESCRIPTION,
    C.COMMENTLINE,
    SUM(A.USERPRIMARYQUANTITY) AS USERPRIMARYQUANTITY,
    A.USERPRIMARYUOMCODE,
    A.ISSUEDATE
FROM
    PRODUCTIONRESERVATION A
LEFT JOIN PRODUCT B ON
    A.ITEMTYPEAFICODE = B.ITEMTYPECODE
    AND A.SUBCODE01 = B.SUBCODE01
    AND A.SUBCODE02 = B.SUBCODE02
    AND A.SUBCODE03 = B.SUBCODE03
    AND A.SUBCODE04 = B.SUBCODE04
    AND A.SUBCODE05 = B.SUBCODE05
    AND A.SUBCODE06 = B.SUBCODE06
    AND A.SUBCODE07 = B.SUBCODE07
    AND A.SUBCODE08 = B.SUBCODE08
    AND A.SUBCODE09 = B.SUBCODE09
    AND A.SUBCODE10 = B.SUBCODE10
LEFT JOIN (
        SELECT
            RECIPECOMPONENT.RECIPESUFFIXCODE,
            RECIPECOMPONENT.COMMENTLINE,
            RECIPECOMPONENT.RECIPEITEMTYPECODE,
            RECIPECOMPONENT.RECIPESUBCODE01
        FROM
            RECIPECOMPONENT RECIPECOMPONENT
    ) C ON
    A.ITEMTYPEAFICODE = C.RECIPEITEMTYPECODE
    AND A.SUBCODE01 = C.RECIPESUBCODE01
    AND A.SUFFIXCODE = C.RECIPESUFFIXCODE
GROUP BY
    A.COMPANYCODE,
    A.PRODUCTIONORDERCODE,
    A.GROUPLINE,
    A.GROUPSTEPNUMBER,
    A.SUFFIXCODE,
    A.ITEMTYPEAFICODE,
    A.SUBCODE01,
    A.SUBCODE02,
    A.SUBCODE03,
    A.SUBCODE04,
    A.SUBCODE05,
    A.SUBCODE06,
    A.SUBCODE07,
    A.SUBCODE08,
    A.SUBCODE09,
    A.SUBCODE10,
    B.SHORTDESCRIPTION,
    C.COMMENTLINE,
    A.USERPRIMARYUOMCODE,
    A.ISSUEDATE;


-- DB2ADMIN.ITXVIEW_TGLBAGIKAIN source

CREATE VIEW ITXVIEW_TGLBAGIKAIN AS
SELECT 
    PRODUCTIONORDERCODE,
    LISTAGG(
        TRANSACTIONDATE,
        ', '
    ) AS TRANSACTIONDATE
FROM
    (
        SELECT
            DISTINCT
        s4.PRODUCTIONORDERCODE,
            s4.TRANSACTIONDATE
        FROM
            STOCKTRANSACTION s4
        LEFT JOIN ITXVIEWKK i5 ON
            i5.PRODUCTIONORDERCODE = s4.PRODUCTIONORDERCODE
            AND i5.COMPANYCODE = s4.COMPANYCODE
        WHERE
            s4.ITEMTYPECODE = 'KGF'
    )
    --WHERE PRODUCTIONORDERCODE = '00051007'
GROUP BY 
        PRODUCTIONORDERCODE;


-- DB2ADMIN.ITXVIEW_TGLDELIV_GREIGE source

CREATE VIEW ITXVIEW_TGLDELIV_GREIGE AS 
SELECT
    DISTINCT 
	s.SALESORDERCODE,
    s.ORDERLINE,
    a_project1.VALUESTRING AS OPN1,
    a2_project1.VALUEDATE AS DATE1,
    a_project2.VALUESTRING AS OPN2,
    a2_project2.VALUEDATE AS DATE2,
    a_project3.VALUESTRING AS OPN3,
    a2_project3.VALUEDATE AS DATE3,
    a_project4.VALUESTRING AS OPN4,
    a2_project4.VALUEDATE AS DATE4
FROM
    SALESORDERLINE s
LEFT JOIN PRODUCTIONDEMAND p ON
    p.ORIGDLVSALORDLINESALORDERCODE = s.SALESORDERCODE
    AND p.ORIGDLVSALORDERLINEORDERLINE = s.ORDERLINE
    -- FROM PROJECT 1
LEFT JOIN ADSTORAGE a_project1 ON
    a_project1.UNIQUEID = p.ABSUNIQUEID
    AND a_project1.FIELDNAME = 'ProAllow'
LEFT JOIN PRODUCTIONDEMAND p2_project1 ON
    p2_project1.ORIGDLVSALORDLINESALORDERCODE = a_project1.VALUESTRING
LEFT JOIN ADSTORAGE a2_project1 ON
    a2_project1.UNIQUEID = p2_project1.ABSUNIQUEID
    AND a2_project1.FIELDNAME = 'RMPGreigeReqDateTo'
    -- FROM PROJECT 2 
LEFT JOIN ADSTORAGE a_project2 ON
    a_project2.UNIQUEID = p.ABSUNIQUEID
    AND a_project2.FIELDNAME = 'ProAllow2'
LEFT JOIN PRODUCTIONDEMAND p2_project2 ON
    p2_project2.ORIGDLVSALORDLINESALORDERCODE = a_project2.VALUESTRING
LEFT JOIN ADSTORAGE a2_project2 ON
    a2_project2.UNIQUEID = p2_project2.ABSUNIQUEID
    AND a2_project2.FIELDNAME = 'RMPGreigeReqDateTo'
    -- FROM PROJECT 3 
LEFT JOIN ADSTORAGE a_project3 ON
    a_project3.UNIQUEID = p.ABSUNIQUEID
    AND a_project3.FIELDNAME = 'ProAllow3'
LEFT JOIN PRODUCTIONDEMAND p2_project3 ON
    p2_project3.ORIGDLVSALORDLINESALORDERCODE = a_project3.VALUESTRING
LEFT JOIN ADSTORAGE a2_project3 ON
    a2_project3.UNIQUEID = p2_project3.ABSUNIQUEID
    AND a2_project3.FIELDNAME = 'RMPGreigeReqDateTo'
    -- FROM PROJECT 4 
LEFT JOIN ADSTORAGE a_project4 ON
    a_project4.UNIQUEID = p.ABSUNIQUEID
    AND a_project4.FIELDNAME = 'ProAllow4'
LEFT JOIN PRODUCTIONDEMAND p2_project4 ON
    p2_project4.ORIGDLVSALORDLINESALORDERCODE = a_project4.VALUESTRING
LEFT JOIN ADSTORAGE a2_project4 ON
    a2_project4.UNIQUEID = p2_project4.ABSUNIQUEID
    AND a2_project4.FIELDNAME = 'RMPGreigeReqDateTo';


-- DB2ADMIN.ITXVIEW_TGLDELIV_GREIGE_DEMANDKGF source

CREATE VIEW ITXVIEW_TGLDELIV_GREIGE_DEMANDKGF AS 
SELECT
    DISTINCT 
	s.SALESORDERCODE,
    s.ORDERLINE,
    a.VALUEDATE
FROM
    SALESORDERLINE s
LEFT JOIN PRODUCTIONDEMAND p ON
    p.ORIGDLVSALORDLINESALORDERCODE = s.SALESORDERCODE
    AND p.ORIGDLVSALORDERLINEORDERLINE = s.ORDERLINE
    AND p.ITEMTYPEAFICODE = 'KGF'
LEFT JOIN ADSTORAGE a ON
    a.UNIQUEID = p.ABSUNIQUEID
    AND a.FIELDNAME = 'RMPGreigeReqDateTo';


-- DB2ADMIN.ITXVIEW_TINGGI_KNT source

CREATE VIEW ITXVIEW_TINGGI_KNT AS
SELECT
    ADSTORAGE.UNIQUEID,
    ADSTORAGE.FIELDNAME,
    ADSTORAGE.VALUEDECIMAL
FROM
    DB2ADMIN.ADSTORAGE ADSTORAGE
RIGHT OUTER JOIN DB2ADMIN.PRODUCT PRODUCT ON
    ADSTORAGE.UNIQUEID = PRODUCT.ABSUNIQUEID
WHERE
    ADSTORAGE.FIELDNAME = 'tinggi';


-- DB2ADMIN.ITXVIEW_TOLNETTO source

CREATE VIEW ITXVIEW_TOLNETTO AS 
SELECT
    p.CODE,
    s.SALESORDERLINESALESORDERCODE,
    s2.ORDPRNCUSTOMERSUPPLIERCODE,
    o.ABSUNIQUEID,
    s.USERPRIMARYQUANTITY,
    a.VALUEDECIMAL AS N,
    a2.VALUEDECIMAL AS P
FROM
    PRODUCTIONDEMAND p
LEFT JOIN SALESORDERDELIVERY s ON
    s.SALORDLINESALORDERCOMPANYCODE = p.COMPANYCODE
    AND s.SALORDLINESALORDERCOUNTERCODE = p.DLVSALORDLINESALORDCNTCODE
    AND s.SALESORDERLINESALESORDERCODE = p.DLVSALORDERLINESALESORDERCODE
    AND s.SALESORDERLINEORDERLINE = p.DLVSALESORDERLINEORDERLINE
    AND s.SALESORDERLINEORDERSUBLINE = p.DLVSALESORDERLINEORDERSUBLINE
    AND s.SALORDLINECOMPONENTORDERLINE = p.DLVSALORDLINECMPORDERLINE
    AND s.DELIVERYLINE = p.DELIVERYDELIVERYLINE
LEFT JOIN SALESORDER s2 ON
    s2.CODE = s.SALESORDERLINESALESORDERCODE
LEFT JOIN ORDERPARTNER o ON
    o.CUSTOMERSUPPLIERCODE = s2.ORDPRNCUSTOMERSUPPLIERCODE
LEFT JOIN ADSTORAGE a ON
    a.UNIQUEID = o.ABSUNIQUEID
    AND NOT a.VALUEDECIMAL IS NULL
    AND a.FIELDNAME = 'ShippingToleranceN'
LEFT JOIN ADSTORAGE a2 ON
    a2.UNIQUEID = o.ABSUNIQUEID
    AND NOT a2.VALUEDECIMAL IS NULL
    AND a2.FIELDNAME = 'ShippingToleranceP';


-- DB2ADMIN.ITXVIEW_TOTAL_EXIM_FOC source

CREATE VIEW ITXVIEW_TOTAL_EXIM_FOC AS
SELECT
    PROVISIONALCODE,
    COUNT(code) AS TOTAL_JML_ROLL,
    SUM(BASEPRIMARYQUANTITY) AS TOTAL_JML_KG,
    SUM(BASESECONDARYQUANTITY)AS TOTAL_JML_YARD
FROM
    (
        SELECT
            a.code,
            sjexm.PROVISIONALCODE,
            sjexm.JENIS_ORDER,
            a.LINENUMBER,
            a.PROJECTCODE,
            a.BASEPRIMARYQUANTITY,
            ROUND( a.BASESECONDARYQUANTITY, 2) AS BASESECONDARYQUANTITY,
            e.QUALITYREASONCODE,
            e.ELEMENTCODE
        FROM
            ITXVIEW_SURATJALAN_EXIM sjexm
        LEFT JOIN ALLOCATION a ON
            sjexm.code = a.code
        LEFT JOIN ELEMENTSINSPECTION e ON
            a.ITEMELEMENTCODE = e.ELEMENTCODE
        WHERE
            a.STOCKTYPECODE = 'AFW'
            AND e.QUALITYREASONCODE = 'FOC'
            AND sjexm.jenis_order <> 'REPLCEXP'
        GROUP BY
            a.code,
            sjexm.PROVISIONALCODE,
            sjexm.JENIS_ORDER,
            a.LINENUMBER,
            a.PROJECTCODE,
            a.BASEPRIMARYQUANTITY,
            a.BASESECONDARYQUANTITY,
            e.QUALITYREASONCODE,
            e.ELEMENTCODE
    )
GROUP BY
    PROVISIONALCODE;


-- DB2ADMIN.ITXVIEW_TOTAL_MRN source

CREATE VIEW ITXVIEW_TOTAL_MRN AS 
SELECT
    DISTINCT 
PURCHASEORDERCODE,
    ORDERLINE,
    SUM(RECEIVEDQUANTITY) AS TOTAL_DITERIMA,
    SUM(SECONDARYQTY) AS TOTAL_SECONDARY_DITERIMA,
    --RECEIVEDQUANTITY,
    ITEMTYPEAFICODE,
    SUBCODE01,
    SUBCODE02,
    SUBCODE03,
    SUBCODE04,
    SUBCODE05,
    SUBCODE06,
    SUBCODE07,
    SUBCODE08
FROM
    MRNDETAIL m
    --    WHERE m.PURCHASEORDERCODE = 'YRL2400084'
GROUP BY
    PURCHASEORDERCODE,
    ORDERLINE,
    ITEMTYPEAFICODE,
    SUBCODE01,
    SUBCODE02,
    SUBCODE03,
    SUBCODE04,
    SUBCODE05,
    SUBCODE06,
    SUBCODE07,
    SUBCODE08;


-- DB2ADMIN.ITXVIEW_TQ_DESKRIPSI source

CREATE VIEW ITXVIEW_TQ_DESKRIPSI AS
SELECT
    A.CODE AS DEMANDNO,
    TRIM(B.PRODUCTIONORDERCODE) AS PRODUCTIONORDERCODE,
    TRIM(E.LEGALNAME1) AS LEGALNAME1,
    TRIM(C.BUYER) AS BUYER,
    TRIM(C.NO_ITEM) AS NO_ITEM,
    TRIM(C.SALESORDERCODE) AS SALESORDERCODE,
    TRIM(C.ITEMDESCRIPTION) AS ITEMDESCRIPTION,
    C.STATISTICALGROUPCODE AS SEASON,
    TRIM(A.SUBCODE05) AS NO_WARNA,
    F.WARNA,
    TRIM(A.SUBCODE02) AS SUBCODE02,
    TRIM(A.SUBCODE03) AS SUBCODE03,
    CASE
        WHEN C.PO_HEADER IS NULL THEN C.PO_LINE
        ELSE C.PO_HEADER
    END AS PO_NUMBER,
    D.NAMENAME,
    D.VALUEDECIMAL
FROM
    PRODUCTIONDEMAND A
LEFT JOIN (
        SELECT
            PRODUCTIONDEMANDSTEP.PRODUCTIONORDERCODE,
            PRODUCTIONDEMANDSTEP.PRODUCTIONDEMANDCODE
        FROM
            PRODUCTIONDEMANDSTEP PRODUCTIONDEMANDSTEP
        GROUP BY
            PRODUCTIONDEMANDSTEP.PRODUCTIONORDERCODE,
            PRODUCTIONDEMANDSTEP.PRODUCTIONDEMANDCODE
    ) B ON
    A.CODE = B.PRODUCTIONDEMANDCODE
LEFT JOIN (
        SELECT
            SALESORDER.ORDERPARTNERBRANDCODE,
            SALESORDER.STATISTICALGROUPCODE,
            SALESORDER.EXTERNALREFERENCE AS PO_HEADER,
            SALESORDERLINE.SALESORDERCODE,
            SALESORDERLINE.ITEMDESCRIPTION,
            SALESORDERLINE.ORDERLINE,
            SALESORDERLINE.SUBCODE03,
            SALESORDERLINE.SUBCODE05,
            SALESORDERLINE.BASEPRIMARYUOMCODE AS QTY_ORDER_UOM,
            SALESORDERLINE.EXTERNALREFERENCE AS PO_LINE,
            SUM(SALESORDERLINE.BASEPRIMARYQUANTITY) AS QTY_ORDER,
            SUM(SALESORDERLINE.BASESECONDARYQUANTITY) AS QTY_PANJANG_ORDER,
            SALESORDERLINE.BASESECONDARYUOMCODE AS QTY_PANJANG_ORDER_UOM,
            SALESORDERDELIVERY.DELIVERYDATE,
            ORDERPARTNERBRAND.LONGDESCRIPTION AS BUYER,
            ORDERITEMORDERPARTNERLINK.LONGDESCRIPTION AS NO_ITEM
        FROM
            SALESORDER SALESORDER
        LEFT JOIN SALESORDERLINE SALESORDERLINE ON
            SALESORDER.CODE = SALESORDERLINE.SALESORDERCODE
        LEFT JOIN SALESORDERDELIVERY SALESORDERDELIVERY ON
            SALESORDERLINE.SALESORDERCODE = SALESORDERDELIVERY.SALESORDERLINESALESORDERCODE
            AND SALESORDERLINE.ORDERLINE = SALESORDERDELIVERY.SALESORDERLINEORDERLINE
        LEFT JOIN ORDERPARTNERBRAND ORDERPARTNERBRAND ON
            SALESORDER.ORDPRNCUSTOMERSUPPLIERCODE = ORDERPARTNERBRAND.ORDPRNCUSTOMERSUPPLIERCODE
            AND SALESORDER.ORDERPARTNERBRANDCODE = ORDERPARTNERBRAND.CODE
        LEFT JOIN ORDERITEMORDERPARTNERLINK ORDERITEMORDERPARTNERLINK ON
            SALESORDER.ORDPRNCUSTOMERSUPPLIERCODE = ORDERITEMORDERPARTNERLINK.ORDPRNCUSTOMERSUPPLIERCODE
            AND SALESORDERLINE.ITEMTYPEAFICODE = ORDERITEMORDERPARTNERLINK.ITEMTYPEAFICODE
            AND SALESORDERLINE.SUBCODE01 = ORDERITEMORDERPARTNERLINK.SUBCODE01
            AND SALESORDERLINE.SUBCODE02 = ORDERITEMORDERPARTNERLINK.SUBCODE02
            AND SALESORDERLINE.SUBCODE03 = ORDERITEMORDERPARTNERLINK.SUBCODE03
            AND SALESORDERLINE.SUBCODE04 = ORDERITEMORDERPARTNERLINK.SUBCODE04
            AND SALESORDERLINE.SUBCODE05 = ORDERITEMORDERPARTNERLINK.SUBCODE05
            AND SALESORDERLINE.SUBCODE06 = ORDERITEMORDERPARTNERLINK.SUBCODE06
            AND SALESORDERLINE.SUBCODE07 = ORDERITEMORDERPARTNERLINK.SUBCODE07
            AND SALESORDERLINE.SUBCODE08 = ORDERITEMORDERPARTNERLINK.SUBCODE08
            AND SALESORDERLINE.SUBCODE09 = ORDERITEMORDERPARTNERLINK.SUBCODE09
            AND SALESORDERLINE.SUBCODE10 = ORDERITEMORDERPARTNERLINK.SUBCODE10
        GROUP BY
            SALESORDER.ORDERPARTNERBRANDCODE,
            SALESORDER.STATISTICALGROUPCODE,
            SALESORDER.EXTERNALREFERENCE,
            SALESORDERLINE.SALESORDERCODE,
            SALESORDERLINE.ITEMDESCRIPTION,
            SALESORDERLINE.ORDERLINE,
            SALESORDERLINE.SUBCODE03,
            SALESORDERLINE.SUBCODE05,
            SALESORDERLINE.BASEPRIMARYUOMCODE,
            SALESORDERLINE.BASESECONDARYUOMCODE,
            SALESORDERLINE.EXTERNALREFERENCE,
            SALESORDERDELIVERY.DELIVERYDATE,
            ORDERPARTNERBRAND.LONGDESCRIPTION,
            ORDERITEMORDERPARTNERLINK.LONGDESCRIPTION
    ) C ON
    A.ORIGDLVSALORDLINESALORDERCODE = C.SALESORDERCODE
    AND A.ORIGDLVSALORDERLINEORDERLINE = C.ORDERLINE
LEFT JOIN (
        SELECT
            PRODUCT.SUBCODE01,
            PRODUCT.SUBCODE02,
            PRODUCT.SUBCODE03,
            PRODUCT.SUBCODE04,
            PRODUCT.SUBCODE05,
            PRODUCT.SUBCODE06,
            PRODUCT.SUBCODE07,
            PRODUCT.SUBCODE08,
            PRODUCT.SUBCODE09,
            PRODUCT.SUBCODE10,
            LISTAGG(
                TRIM(ADSTORAGE.NAMENAME),
                ','
            ) WITHIN GROUP(
            ORDER BY
                ADSTORAGE.NAMENAME ASC
            ) AS NAMENAME,
            LISTAGG(
                ADSTORAGE.VALUEDECIMAL,
                ','
            ) WITHIN GROUP(
            ORDER BY
                ADSTORAGE.NAMENAME ASC
            ) AS VALUEDECIMAL
        FROM
            PRODUCT PRODUCT
        LEFT JOIN ADSTORAGE ADSTORAGE ON
            PRODUCT.ABSUNIQUEID = ADSTORAGE.UNIQUEID
        GROUP BY
            PRODUCT.SUBCODE01,
            PRODUCT.SUBCODE02,
            PRODUCT.SUBCODE03,
            PRODUCT.SUBCODE04,
            PRODUCT.SUBCODE05,
            PRODUCT.SUBCODE06,
            PRODUCT.SUBCODE07,
            PRODUCT.SUBCODE08,
            PRODUCT.SUBCODE09,
            PRODUCT.SUBCODE10
    ) D ON
    A.SUBCODE01 = D.SUBCODE01
    AND A.SUBCODE02 = D.SUBCODE02
    AND A.SUBCODE03 = D.SUBCODE03
    AND A.SUBCODE04 = D.SUBCODE04
    AND A.SUBCODE05 = D.SUBCODE05
    AND A.SUBCODE06 = D.SUBCODE06
    AND A.SUBCODE07 = D.SUBCODE07
    AND A.SUBCODE08 = D.SUBCODE08
    AND A.SUBCODE09 = D.SUBCODE09
    AND A.SUBCODE10 = D.SUBCODE10
LEFT JOIN (
        SELECT
            BUSINESSPARTNER.LEGALNAME1,
            ORDERPARTNER.CUSTOMERSUPPLIERCODE
        FROM
            BUSINESSPARTNER BUSINESSPARTNER
        LEFT JOIN ORDERPARTNER ORDERPARTNER ON
            BUSINESSPARTNER.NUMBERID = ORDERPARTNER.ORDERBUSINESSPARTNERNUMBERID
    ) E ON
    A.CUSTOMERCODE = E.CUSTOMERSUPPLIERCODE
LEFT JOIN (
        SELECT
            ITXVIEWCOLOR.ITEMTYPECODE,
            ITXVIEWCOLOR.SUBCODE01,
            ITXVIEWCOLOR.SUBCODE02,
            ITXVIEWCOLOR.SUBCODE03,
            ITXVIEWCOLOR.SUBCODE04,
            ITXVIEWCOLOR.SUBCODE05,
            ITXVIEWCOLOR.SUBCODE06,
            ITXVIEWCOLOR.SUBCODE07,
            ITXVIEWCOLOR.SUBCODE08,
            ITXVIEWCOLOR.SUBCODE09,
            ITXVIEWCOLOR.SUBCODE10,
            ITXVIEWCOLOR.WARNA
        FROM
            ITXVIEWCOLOR ITXVIEWCOLOR
    ) F ON
    A.ITEMTYPEAFICODE = F.ITEMTYPECODE
    AND A.SUBCODE01 = F.SUBCODE01
    AND A.SUBCODE02 = F.SUBCODE02
    AND A.SUBCODE03 = F.SUBCODE03
    AND A.SUBCODE04 = F.SUBCODE04
    AND A.SUBCODE05 = F.SUBCODE05
    AND A.SUBCODE06 = F.SUBCODE06
    AND A.SUBCODE07 = F.SUBCODE07
    AND A.SUBCODE08 = F.SUBCODE08
    AND A.SUBCODE09 = F.SUBCODE09
    AND A.SUBCODE10 = F.SUBCODE10;


-- DB2ADMIN.ITXVIEW_VOLAIR source

CREATE VIEW ITXVIEW_VOLAIR AS
SELECT
    VIEWPRODUCTIONRESERVATION.ITEMTYPEAFICODE,
    VIEWPRODUCTIONRESERVATION.PICKUPQUANTITY,
    VIEWPRODUCTIONRESERVATION.PRODUCTIONORDERCODE,
    VIEWPRODUCTIONDEMANDSTEP.FINALUSERPRIMARYQUANTITY
FROM
    DB2ADMIN.VIEWPRODUCTIONRESERVATION VIEWPRODUCTIONRESERVATION
LEFT OUTER JOIN DB2ADMIN.VIEWPRODUCTIONDEMANDSTEP VIEWPRODUCTIONDEMANDSTEP ON
    VIEWPRODUCTIONRESERVATION.PRODUCTIONORDERCODE = VIEWPRODUCTIONDEMANDSTEP.PRODUCTIONORDERCODE
    AND VIEWPRODUCTIONRESERVATION.PRODRESERVATIONLINKGROUPCODE = VIEWPRODUCTIONDEMANDSTEP.OPERATIONCODE
WHERE
    VIEWPRODUCTIONRESERVATION.ITEMTYPEAFICODE = 'RFD';


-- DB2ADMIN.ITXVIEW_WIDTHKOKNT source

CREATE VIEW ITXVIEW_WIDTHKOKNT AS
SELECT
    ADSTORAGE.NAMENAME,
    ADSTORAGE.VALUEDECIMAL,
    PRODUCT.ITEMTYPECODE,
    PRODUCT.SUBCODE01,
    PRODUCT.SUBCODE02,
    PRODUCT.SUBCODE03,
    PRODUCT.SUBCODE04
FROM
    DB2ADMIN.ADSTORAGE ADSTORAGE
RIGHT OUTER JOIN DB2ADMIN.PRODUCT PRODUCT ON
    ADSTORAGE.UNIQUEID = PRODUCT.ABSUNIQUEID
WHERE
    NAMENAME = 'Width';