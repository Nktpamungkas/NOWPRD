DROP VIEW ITXVIEW_MEMOPENTINGPPC_NEW;
--CREATE VIEW ITXVIEW_MEMOPENTINGPPC_NEW AS
SELECT 
    i.ORDERDATE AS ORDERDATE,
    TRIM(ip.LANGGANAN) || '|' || TRIM(ip.BUYER) AS PELANGGAN,
    i.PROJECTCODE AS NO_ORDER,
    ik.EXTERNALREFERENCE AS NO_PO,
    TRIM(i.SUBCODE01) || '-' || TRIM(i.SUBCODE02) || '-' || TRIM(i.SUBCODE03) || '-' || TRIM(i.SUBCODE04) || '-' ||
    TRIM(i.SUBCODE05) || '-' || TRIM(i.SUBCODE06) || '-' || TRIM(i.SUBCODE07) || '-' || TRIM(i.SUBCODE08) AS KETERANGAN_PRODUCT,
    i4.WARNA AS WARNA,
    i.SUBCODE05 AS NO_WARNA,
    s.DELIVERYDATE AS DELIVERY,
    s2.ROLL AS ROLL,
    i2.USEDUSERPRIMARYQUANTITY AS QTY_BAGIKAIN,
    s4.TRANSACTIONDATE,
    in2.USERPRIMARYQUANTITY AS NETTO,
    CASE
        WHEN Days(now()) - Days(Timestamp_Format(s.DELIVERYDATE, 'YYYY-MM-DD')) < 0 THEN 0
        ELSE Days(now()) - Days(Timestamp_Format(s.DELIVERYDATE, 'YYYY-MM-DD'))
    END	AS DELAY,
    i.PRODUCTIONORDERCODE AS NO_KK,
    i.DEAMAND AS DEMAND,
    i.SUBCODE01,i.SUBCODE02,i.SUBCODE03,i.SUBCODE04,i.ORDERLINE,
    CASE
        WHEN i.PROGRESSSTATUS = 0 THEN 'Entered'
        WHEN i.PROGRESSSTATUS = 1 THEN 'Planned'
        WHEN i.PROGRESSSTATUS = 2 THEN 'Progress'
        WHEN i.PROGRESSSTATUS = 3 THEN 'Closed'
    END AS STATUS_OPERATION,
    u.LONGDESCRIPTION AS KETERANGAN
FROM ITXVIEWKK i 
LEFT JOIN ITXVIEW_KGBRUTO ik ON ik.PROJECTCODE = i.PROJECTCODE 
                            AND ik.ORIGDLVSALORDERLINEORDERLINE = i.ORIGDLVSALORDERLINEORDERLINE  
                            AND ik.CODE = i.DEAMAND 
LEFT JOIN SALESORDERDELIVERY s ON s.SALESORDERLINESALESORDERCODE = i.PROJECTCODE AND s.SALESORDERLINEORDERLINE = i.ORDERLINE 
LEFT JOIN (SELECT count(*) AS ROLL, s2.PRODUCTIONORDERCODE, s2.ITEMTYPECODE FROM STOCKTRANSACTION s2 GROUP BY s2.PRODUCTIONORDERCODE, s2.ITEMTYPECODE) s2 ON s2.PRODUCTIONORDERCODE = i.PRODUCTIONORDERCODE AND s2.ITEMTYPECODE ='KGF'
LEFT JOIN (SELECT SUM(s3.USERPRIMARYQUANTITY) AS QTY_BAGIKAIN, s3.PRODUCTIONORDERCODE, s3.ITEMTYPECODE FROM STOCKTRANSACTION s3 GROUP BY s3.PRODUCTIONORDERCODE, s3.ITEMTYPECODE) s3 ON s3.PRODUCTIONORDERCODE = i.PRODUCTIONORDERCODE AND s3.ITEMTYPECODE ='KGF'
LEFT JOIN PRODUCTIONRESERVATION i2 ON i2.ORDERCODE = i.PRODUCTIONDEMANDCODE AND i2.ITEMTYPEAFICODE = 'KGF'
LEFT JOIN ADSTORAGE a ON a.UNIQUEID = i.ABSUNIQUEID_DEMAND AND TRIM(a.NAMENAME) = 'DefectType'
LEFT JOIN USERGENERICGROUP u ON u.CODE = a.VALUESTRING 
LEFT JOIN ITXVIEWCOLOR i4 ON i4.ITEMTYPECODE = i.ITEMTYPEAFICODE 
                        AND i4.SUBCODE01 = i.SUBCODE01 AND i4.SUBCODE02 = i.SUBCODE02 
                        AND i4.SUBCODE03 = i.SUBCODE03 AND i4.SUBCODE04 = i.SUBCODE04 
                        AND i4.SUBCODE05 = i.SUBCODE05 AND i4.SUBCODE06 = i.SUBCODE06 
                        AND i4.SUBCODE07 = i.SUBCODE07 AND i4.SUBCODE08 = i.SUBCODE08 
                        AND i4.SUBCODE09 = i.SUBCODE09 AND i4.SUBCODE10 = i.SUBCODE10
LEFT JOIN 
    (SELECT 
        PRODUCTIONORDERCODE,
        LISTAGG(TRANSACTIONDATE, ', ') AS TRANSACTIONDATE
    FROM (
        SELECT 
            PRODUCTIONORDERCODE,
            TRANSACTIONDATE
        FROM 
            STOCKTRANSACTION s4 
        WHERE 
            ITEMTYPECODE ='KGF'
        GROUP BY 
            TRANSACTIONDATE,
            PRODUCTIONORDERCODE)
    GROUP BY 
            PRODUCTIONORDERCODE)s4 ON s4.PRODUCTIONORDERCODE = i.PRODUCTIONORDERCODE
LEFT JOIN ITXVIEW_NETTO in2 ON in2.CODE = i.DEAMAND AND in2.SALESORDERLINESALESORDERCODE = i.PROJECTCODE
LEFT JOIN ITXVIEW_PELANGGAN ip ON ip.ORDPRNCUSTOMERSUPPLIERCODE = i.ORDPRNCUSTOMERSUPPLIERCODE AND ip.CODE = i.BONORDER